// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

RWTexture2D<float4> PreResult;
RWTexture2D<float4> Result;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float b = 0;
    float r = 0;
    
    float4 color;
    
    b += PreResult[int2(id.x + 1, id.y + 1)].b;
    b += PreResult[int2(id.x + 1, id.y - 1)].b;
    b += PreResult[int2(id.x - 1, id.y + 1)].b;
    b += PreResult[int2(id.x - 1, id.y - 1)].b;
    b += PreResult[int2(id.x + 1, id.y)].b;
    b += PreResult[int2(id.x - 1, id.y)].b;
    b += PreResult[int2(id.x, id.y + 1)].b;
    b += PreResult[int2(id.x, id.y - 1)].b;
    
    r += PreResult[int2(id.x + 1, id.y + 1)].r;
    r += PreResult[int2(id.x + 1, id.y - 1)].r;
    r += PreResult[int2(id.x - 1, id.y + 1)].r;
    r += PreResult[int2(id.x - 1, id.y - 1)].r;
    r += PreResult[int2(id.x + 1, id.y)].r;
    r += PreResult[int2(id.x - 1, id.y)].r;
    r += PreResult[int2(id.x, id.y + 1)].r;
    r += PreResult[int2(id.x, id.y - 1)].r;
    
    if (r > b)
    {
        color = (1, 0, 0, 1);
    }
    else
    {
        color = (0, 0, 1, 1);
    }
    
    switch ((int) r + (int) b)
    {
        case 2:
            if (PreResult[int2(id.x, id.y)].r > 0 || PreResult[int2(id.x, id.y)].b > 0) 
            {
                Result[id.xy] = color;
            }
            else
            {
                Result[id.xy] = float4(0, 0, 0, 1);
            }
            break;
        case 3:
            Result[id.xy] = color;
            break;
        default:
            Result[id.xy] = float4(0, 0, 0, 1);
            break;
    }
}
