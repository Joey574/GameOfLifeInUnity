#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (302 * xMult), yPos)] = color;
	Result[int2(xPos + (301 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (302 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (300 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (301 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (301 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (302 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (238 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (239 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (238 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (239 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (204 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (205 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (204 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (205 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (170 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (171 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (170 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (171 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (136 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (137 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (136 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (137 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (242 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (243 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (241 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (243 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (243 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos, yPos - (58 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos, yPos - (59 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (59 * yMult))] = color;
}