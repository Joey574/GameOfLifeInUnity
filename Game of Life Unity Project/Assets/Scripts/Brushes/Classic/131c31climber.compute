#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 8, yPos - 21)] = color;
	Result[int2(xPos + 6, yPos - 22)] = color;
	Result[int2(xPos + 8, yPos - 22)] = color;
	Result[int2(xPos + 7, yPos - 23)] = color;
	Result[int2(xPos + 8, yPos - 23)] = color;
	Result[int2(xPos + 13, yPos - 42)] = color;
	Result[int2(xPos + 15, yPos - 42)] = color;
	Result[int2(xPos + 14, yPos - 43)] = color;
	Result[int2(xPos + 15, yPos - 43)] = color;
	Result[int2(xPos + 14, yPos - 44)] = color;
	Result[int2(xPos + 24, yPos - 61)] = color;
	Result[int2(xPos + 23, yPos - 62)] = color;
	Result[int2(xPos + 24, yPos - 62)] = color;
	Result[int2(xPos + 25, yPos - 62)] = color;
	Result[int2(xPos + 23, yPos - 63)] = color;
	Result[int2(xPos + 25, yPos - 63)] = color;
	Result[int2(xPos + 26, yPos - 63)] = color;
	Result[int2(xPos + 24, yPos - 64)] = color;
	Result[int2(xPos + 27, yPos - 64)] = color;
	Result[int2(xPos + 25, yPos - 65)] = color;
	Result[int2(xPos + 26, yPos - 65)] = color;
	Result[int2(xPos + 25, yPos - 66)] = color;
	Result[int2(xPos + 22, yPos - 68)] = color;
	Result[int2(xPos + 23, yPos - 68)] = color;
	Result[int2(xPos + 21, yPos - 69)] = color;
	Result[int2(xPos + 20, yPos - 71)] = color;
	Result[int2(xPos + 22, yPos - 71)] = color;
	Result[int2(xPos + 25, yPos - 71)] = color;
	Result[int2(xPos + 20, yPos - 72)] = color;
	Result[int2(xPos + 22, yPos - 72)] = color;
	Result[int2(xPos + 23, yPos - 72)] = color;
	Result[int2(xPos + 24, yPos - 72)] = color;
	Result[int2(xPos + 26, yPos - 72)] = color;
	Result[int2(xPos + 19, yPos - 73)] = color;
	Result[int2(xPos + 20, yPos - 73)] = color;
	Result[int2(xPos + 21, yPos - 73)] = color;
	Result[int2(xPos + 23, yPos - 73)] = color;
	Result[int2(xPos + 24, yPos - 73)] = color;
	Result[int2(xPos + 26, yPos - 73)] = color;
	Result[int2(xPos + 20, yPos - 74)] = color;
	Result[int2(xPos + 22, yPos - 74)] = color;
	Result[int2(xPos + 20, yPos - 75)] = color;
	Result[int2(xPos + 21, yPos - 75)] = color;
	Result[int2(xPos + 22, yPos - 75)] = color;
	Result[int2(xPos + 21, yPos - 76)] = color;
	Result[int2(xPos + 29, yPos - 84)] = color;
	Result[int2(xPos + 27, yPos - 85)] = color;
	Result[int2(xPos + 29, yPos - 85)] = color;
	Result[int2(xPos + 28, yPos - 86)] = color;
	Result[int2(xPos + 29, yPos - 86)] = color;
	Result[int2(xPos + 34, yPos - 105)] = color;
	Result[int2(xPos + 36, yPos - 105)] = color;
	Result[int2(xPos + 35, yPos - 106)] = color;
	Result[int2(xPos + 36, yPos - 106)] = color;
	Result[int2(xPos + 35, yPos - 107)] = color;
}