#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 37, yPos)] = color;
	Result[int2(xPos + 37, yPos - 1)] = color;
	Result[int2(xPos + 39, yPos - 1)] = color;
	Result[int2(xPos + 37, yPos - 2)] = color;
	Result[int2(xPos + 38, yPos - 2)] = color;
	Result[int2(xPos + 24, yPos - 23)] = color;
	Result[int2(xPos + 22, yPos - 24)] = color;
	Result[int2(xPos + 23, yPos - 24)] = color;
	Result[int2(xPos + 23, yPos - 25)] = color;
	Result[int2(xPos + 24, yPos - 25)] = color;
	Result[int2(xPos + 9, yPos - 45)] = color;
	Result[int2(xPos + 4, yPos - 46)] = color;
	Result[int2(xPos + 5, yPos - 46)] = color;
	Result[int2(xPos + 6, yPos - 46)] = color;
	Result[int2(xPos + 9, yPos - 46)] = color;
	Result[int2(xPos + 3, yPos - 47)] = color;
	Result[int2(xPos + 6, yPos - 47)] = color;
	Result[int2(xPos + 10, yPos - 47)] = color;
	Result[int2(xPos + 3, yPos - 48)] = color;
	Result[int2(xPos + 4, yPos - 48)] = color;
	Result[int2(xPos + 6, yPos - 48)] = color;
	Result[int2(xPos + 3, yPos - 51)] = color;
	Result[int2(xPos + 1, yPos - 52)] = color;
	Result[int2(xPos + 2, yPos - 52)] = color;
	Result[int2(xPos + 2, yPos - 53)] = color;
	Result[int2(xPos + 3, yPos - 53)] = color;
	Result[int2(xPos, yPos - 63)] = color;
	Result[int2(xPos + 1, yPos - 63)] = color;
	Result[int2(xPos, yPos - 64)] = color;
	Result[int2(xPos + 1, yPos - 64)] = color;
}