#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (37 * xMult), yPos)] = color;
	Result[int2(xPos + (37 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos, yPos - (63 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos, yPos - (64 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (64 * yMult))] = color;
}