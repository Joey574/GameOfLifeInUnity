#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 34, yPos)] = color;
	Result[int2(xPos + 35, yPos - 1)] = color;
	Result[int2(xPos + 36, yPos - 1)] = color;
	Result[int2(xPos + 54, yPos - 1)] = color;
	Result[int2(xPos + 29, yPos - 2)] = color;
	Result[int2(xPos + 34, yPos - 2)] = color;
	Result[int2(xPos + 35, yPos - 2)] = color;
	Result[int2(xPos + 54, yPos - 2)] = color;
	Result[int2(xPos + 56, yPos - 2)] = color;
	Result[int2(xPos + 82, yPos - 2)] = color;
	Result[int2(xPos + 27, yPos - 3)] = color;
	Result[int2(xPos + 29, yPos - 3)] = color;
	Result[int2(xPos + 54, yPos - 3)] = color;
	Result[int2(xPos + 55, yPos - 3)] = color;
	Result[int2(xPos + 80, yPos - 3)] = color;
	Result[int2(xPos + 82, yPos - 3)] = color;
	Result[int2(xPos + 28, yPos - 4)] = color;
	Result[int2(xPos + 29, yPos - 4)] = color;
	Result[int2(xPos + 35, yPos - 4)] = color;
	Result[int2(xPos + 81, yPos - 4)] = color;
	Result[int2(xPos + 82, yPos - 4)] = color;
	Result[int2(xPos + 35, yPos - 5)] = color;
	Result[int2(xPos + 36, yPos - 5)] = color;
	Result[int2(xPos + 34, yPos - 6)] = color;
	Result[int2(xPos + 36, yPos - 6)] = color;
	Result[int2(xPos + 63, yPos - 6)] = color;
	Result[int2(xPos + 83, yPos - 6)] = color;
	Result[int2(xPos + 63, yPos - 7)] = color;
	Result[int2(xPos + 83, yPos - 7)] = color;
	Result[int2(xPos + 63, yPos - 8)] = color;
	Result[int2(xPos + 83, yPos - 8)] = color;
	Result[int2(xPos + 35, yPos - 12)] = color;
	Result[int2(xPos + 36, yPos - 12)] = color;
	Result[int2(xPos + 73, yPos - 12)] = color;
	Result[int2(xPos + 74, yPos - 12)] = color;
	Result[int2(xPos + 75, yPos - 12)] = color;
	Result[int2(xPos + 93, yPos - 12)] = color;
	Result[int2(xPos + 94, yPos - 12)] = color;
	Result[int2(xPos + 95, yPos - 12)] = color;
	Result[int2(xPos + 113, yPos - 12)] = color;
	Result[int2(xPos + 114, yPos - 12)] = color;
	Result[int2(xPos + 115, yPos - 12)] = color;
	Result[int2(xPos, yPos - 13)] = color;
	Result[int2(xPos + 2, yPos - 13)] = color;
	Result[int2(xPos + 34, yPos - 13)] = color;
	Result[int2(xPos + 36, yPos - 13)] = color;
	Result[int2(xPos + 69, yPos - 13)] = color;
	Result[int2(xPos + 70, yPos - 13)] = color;
	Result[int2(xPos + 89, yPos - 13)] = color;
	Result[int2(xPos + 90, yPos - 13)] = color;
	Result[int2(xPos + 109, yPos - 13)] = color;
	Result[int2(xPos + 110, yPos - 13)] = color;
	Result[int2(xPos + 1, yPos - 14)] = color;
	Result[int2(xPos + 2, yPos - 14)] = color;
	Result[int2(xPos + 22, yPos - 14)] = color;
	Result[int2(xPos + 36, yPos - 14)] = color;
	Result[int2(xPos + 42, yPos - 14)] = color;
	Result[int2(xPos + 69, yPos - 14)] = color;
	Result[int2(xPos + 71, yPos - 14)] = color;
	Result[int2(xPos + 73, yPos - 14)] = color;
	Result[int2(xPos + 74, yPos - 14)] = color;
	Result[int2(xPos + 89, yPos - 14)] = color;
	Result[int2(xPos + 91, yPos - 14)] = color;
	Result[int2(xPos + 93, yPos - 14)] = color;
	Result[int2(xPos + 94, yPos - 14)] = color;
	Result[int2(xPos + 109, yPos - 14)] = color;
	Result[int2(xPos + 111, yPos - 14)] = color;
	Result[int2(xPos + 113, yPos - 14)] = color;
	Result[int2(xPos + 114, yPos - 14)] = color;
	Result[int2(xPos + 1, yPos - 15)] = color;
	Result[int2(xPos + 21, yPos - 15)] = color;
	Result[int2(xPos + 23, yPos - 15)] = color;
	Result[int2(xPos + 41, yPos - 15)] = color;
	Result[int2(xPos + 43, yPos - 15)] = color;
	Result[int2(xPos + 22, yPos - 16)] = color;
	Result[int2(xPos + 23, yPos - 16)] = color;
	Result[int2(xPos + 42, yPos - 16)] = color;
	Result[int2(xPos + 43, yPos - 16)] = color;
	Result[int2(xPos + 71, yPos - 16)] = color;
	Result[int2(xPos + 73, yPos - 16)] = color;
	Result[int2(xPos + 91, yPos - 16)] = color;
	Result[int2(xPos + 93, yPos - 16)] = color;
	Result[int2(xPos + 111, yPos - 16)] = color;
	Result[int2(xPos + 113, yPos - 16)] = color;
	Result[int2(xPos + 1, yPos - 17)] = color;
	Result[int2(xPos + 2, yPos - 17)] = color;
	Result[int2(xPos + 3, yPos - 17)] = color;
	Result[int2(xPos + 70, yPos - 17)] = color;
	Result[int2(xPos + 90, yPos - 17)] = color;
	Result[int2(xPos + 110, yPos - 17)] = color;
	Result[int2(xPos + 1, yPos - 18)] = color;
	Result[int2(xPos + 70, yPos - 18)] = color;
	Result[int2(xPos + 71, yPos - 18)] = color;
	Result[int2(xPos + 90, yPos - 18)] = color;
	Result[int2(xPos + 91, yPos - 18)] = color;
	Result[int2(xPos + 110, yPos - 18)] = color;
	Result[int2(xPos + 111, yPos - 18)] = color;
	Result[int2(xPos + 2, yPos - 19)] = color;
}