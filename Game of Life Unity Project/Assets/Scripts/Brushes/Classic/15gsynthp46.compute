#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 83)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 76)) * yMult)] = color;
}