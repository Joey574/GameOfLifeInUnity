#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (75 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (80 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (80 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos, yPos - (6 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (20 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (84 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (86 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (87 * yMult))] = color;
	Result[int2(xPos + (101 * xMult), yPos - (87 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (88 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (88 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (88 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (89 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (89 * yMult))] = color;
	Result[int2(xPos + (80 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (95 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (95 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (95 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (113 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (97 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (97 * yMult))] = color;
	Result[int2(xPos + (91 * xMult), yPos - (97 * yMult))] = color;
	Result[int2(xPos + (92 * xMult), yPos - (97 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (97 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (98 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (98 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (98 * yMult))] = color;
	Result[int2(xPos + (91 * xMult), yPos - (98 * yMult))] = color;
	Result[int2(xPos + (93 * xMult), yPos - (98 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (98 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (91 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (101 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (101 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (102 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (103 * yMult))] = color;
	Result[int2(xPos + (105 * xMult), yPos - (103 * yMult))] = color;
	Result[int2(xPos + (106 * xMult), yPos - (103 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (104 * yMult))] = color;
	Result[int2(xPos + (91 * xMult), yPos - (105 * yMult))] = color;
	Result[int2(xPos + (105 * xMult), yPos - (105 * yMult))] = color;
	Result[int2(xPos + (91 * xMult), yPos - (106 * yMult))] = color;
	Result[int2(xPos + (92 * xMult), yPos - (106 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (107 * yMult))] = color;
	Result[int2(xPos + (92 * xMult), yPos - (107 * yMult))] = color;
}