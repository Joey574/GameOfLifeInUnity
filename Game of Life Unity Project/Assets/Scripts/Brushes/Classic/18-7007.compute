#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 75, yPos - 2)] = color;
	Result[int2(xPos + 80, yPos - 2)] = color;
	Result[int2(xPos + 76, yPos - 3)] = color;
	Result[int2(xPos + 78, yPos - 3)] = color;
	Result[int2(xPos + 79, yPos - 3)] = color;
	Result[int2(xPos + 75, yPos - 4)] = color;
	Result[int2(xPos + 76, yPos - 4)] = color;
	Result[int2(xPos + 77, yPos - 4)] = color;
	Result[int2(xPos + 80, yPos - 4)] = color;
	Result[int2(xPos + 81, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 5)] = color;
	Result[int2(xPos + 2, yPos - 5)] = color;
	Result[int2(xPos + 12, yPos - 5)] = color;
	Result[int2(xPos, yPos - 6)] = color;
	Result[int2(xPos + 2, yPos - 6)] = color;
	Result[int2(xPos + 11, yPos - 6)] = color;
	Result[int2(xPos + 2, yPos - 7)] = color;
	Result[int2(xPos + 11, yPos - 7)] = color;
	Result[int2(xPos + 12, yPos - 7)] = color;
	Result[int2(xPos + 13, yPos - 7)] = color;
	Result[int2(xPos + 72, yPos - 7)] = color;
	Result[int2(xPos + 73, yPos - 7)] = color;
	Result[int2(xPos + 75, yPos - 8)] = color;
	Result[int2(xPos + 76, yPos - 8)] = color;
	Result[int2(xPos + 12, yPos - 9)] = color;
	Result[int2(xPos + 19, yPos - 9)] = color;
	Result[int2(xPos + 74, yPos - 9)] = color;
	Result[int2(xPos + 11, yPos - 10)] = color;
	Result[int2(xPos + 12, yPos - 10)] = color;
	Result[int2(xPos + 18, yPos - 10)] = color;
	Result[int2(xPos + 19, yPos - 10)] = color;
	Result[int2(xPos + 11, yPos - 11)] = color;
	Result[int2(xPos + 13, yPos - 11)] = color;
	Result[int2(xPos + 18, yPos - 11)] = color;
	Result[int2(xPos + 20, yPos - 11)] = color;
	Result[int2(xPos + 99, yPos - 16)] = color;
	Result[int2(xPos + 98, yPos - 17)] = color;
	Result[int2(xPos + 99, yPos - 17)] = color;
	Result[int2(xPos + 98, yPos - 18)] = color;
	Result[int2(xPos + 100, yPos - 18)] = color;
	Result[int2(xPos + 37, yPos - 52)] = color;
	Result[int2(xPos + 37, yPos - 53)] = color;
	Result[int2(xPos + 38, yPos - 53)] = color;
	Result[int2(xPos + 36, yPos - 54)] = color;
	Result[int2(xPos + 38, yPos - 54)] = color;
	Result[int2(xPos + 42, yPos - 70)] = color;
	Result[int2(xPos + 43, yPos - 70)] = color;
	Result[int2(xPos + 44, yPos - 70)] = color;
	Result[int2(xPos + 44, yPos - 71)] = color;
	Result[int2(xPos + 43, yPos - 72)] = color;
	Result[int2(xPos + 96, yPos - 83)] = color;
	Result[int2(xPos + 97, yPos - 84)] = color;
	Result[int2(xPos + 95, yPos - 85)] = color;
	Result[int2(xPos + 96, yPos - 85)] = color;
	Result[int2(xPos + 97, yPos - 85)] = color;
	Result[int2(xPos + 99, yPos - 86)] = color;
	Result[int2(xPos + 99, yPos - 87)] = color;
	Result[int2(xPos + 101, yPos - 87)] = color;
	Result[int2(xPos + 99, yPos - 88)] = color;
	Result[int2(xPos + 100, yPos - 88)] = color;
	Result[int2(xPos + 111, yPos - 88)] = color;
	Result[int2(xPos + 109, yPos - 89)] = color;
	Result[int2(xPos + 110, yPos - 89)] = color;
	Result[int2(xPos + 80, yPos - 90)] = color;
	Result[int2(xPos + 110, yPos - 90)] = color;
	Result[int2(xPos + 111, yPos - 90)] = color;
	Result[int2(xPos + 42, yPos - 91)] = color;
	Result[int2(xPos + 77, yPos - 91)] = color;
	Result[int2(xPos + 79, yPos - 91)] = color;
	Result[int2(xPos + 99, yPos - 91)] = color;
	Result[int2(xPos + 42, yPos - 92)] = color;
	Result[int2(xPos + 43, yPos - 92)] = color;
	Result[int2(xPos + 77, yPos - 92)] = color;
	Result[int2(xPos + 78, yPos - 92)] = color;
	Result[int2(xPos + 97, yPos - 92)] = color;
	Result[int2(xPos + 99, yPos - 92)] = color;
	Result[int2(xPos + 41, yPos - 93)] = color;
	Result[int2(xPos + 43, yPos - 93)] = color;
	Result[int2(xPos + 96, yPos - 93)] = color;
	Result[int2(xPos + 99, yPos - 93)] = color;
	Result[int2(xPos + 46, yPos - 94)] = color;
	Result[int2(xPos + 48, yPos - 94)] = color;
	Result[int2(xPos + 96, yPos - 94)] = color;
	Result[int2(xPos + 98, yPos - 94)] = color;
	Result[int2(xPos + 46, yPos - 95)] = color;
	Result[int2(xPos + 47, yPos - 95)] = color;
	Result[int2(xPos + 98, yPos - 95)] = color;
	Result[int2(xPos + 47, yPos - 96)] = color;
	Result[int2(xPos + 84, yPos - 96)] = color;
	Result[int2(xPos + 85, yPos - 96)] = color;
	Result[int2(xPos + 86, yPos - 96)] = color;
	Result[int2(xPos + 111, yPos - 96)] = color;
	Result[int2(xPos + 112, yPos - 96)] = color;
	Result[int2(xPos + 113, yPos - 96)] = color;
	Result[int2(xPos + 49, yPos - 97)] = color;
	Result[int2(xPos + 86, yPos - 97)] = color;
	Result[int2(xPos + 91, yPos - 97)] = color;
	Result[int2(xPos + 92, yPos - 97)] = color;
	Result[int2(xPos + 111, yPos - 97)] = color;
	Result[int2(xPos + 49, yPos - 98)] = color;
	Result[int2(xPos + 50, yPos - 98)] = color;
	Result[int2(xPos + 85, yPos - 98)] = color;
	Result[int2(xPos + 91, yPos - 98)] = color;
	Result[int2(xPos + 93, yPos - 98)] = color;
	Result[int2(xPos + 112, yPos - 98)] = color;
	Result[int2(xPos + 48, yPos - 99)] = color;
	Result[int2(xPos + 50, yPos - 99)] = color;
	Result[int2(xPos + 91, yPos - 99)] = color;
	Result[int2(xPos + 109, yPos - 100)] = color;
	Result[int2(xPos + 110, yPos - 100)] = color;
	Result[int2(xPos + 108, yPos - 101)] = color;
	Result[int2(xPos + 109, yPos - 101)] = color;
	Result[int2(xPos + 110, yPos - 102)] = color;
	Result[int2(xPos + 104, yPos - 103)] = color;
	Result[int2(xPos + 105, yPos - 103)] = color;
	Result[int2(xPos + 106, yPos - 103)] = color;
	Result[int2(xPos + 104, yPos - 104)] = color;
	Result[int2(xPos + 91, yPos - 105)] = color;
	Result[int2(xPos + 105, yPos - 105)] = color;
	Result[int2(xPos + 91, yPos - 106)] = color;
	Result[int2(xPos + 92, yPos - 106)] = color;
	Result[int2(xPos + 90, yPos - 107)] = color;
	Result[int2(xPos + 92, yPos - 107)] = color;
}