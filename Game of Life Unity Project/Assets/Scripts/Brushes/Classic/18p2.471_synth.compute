#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 65, yPos)] = color;
	Result[int2(xPos + 65, yPos - 1)] = color;
	Result[int2(xPos + 67, yPos - 1)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 65, yPos - 2)] = color;
	Result[int2(xPos + 66, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 2, yPos - 4)] = color;
	Result[int2(xPos + 82, yPos - 4)] = color;
	Result[int2(xPos + 82, yPos - 5)] = color;
	Result[int2(xPos + 84, yPos - 5)] = color;
	Result[int2(xPos + 82, yPos - 6)] = color;
	Result[int2(xPos + 83, yPos - 6)] = color;
	Result[int2(xPos + 78, yPos - 9)] = color;
	Result[int2(xPos + 79, yPos - 9)] = color;
	Result[int2(xPos + 80, yPos - 9)] = color;
	Result[int2(xPos + 76, yPos - 11)] = color;
	Result[int2(xPos + 82, yPos - 11)] = color;
	Result[int2(xPos + 29, yPos - 12)] = color;
	Result[int2(xPos + 38, yPos - 12)] = color;
	Result[int2(xPos + 76, yPos - 12)] = color;
	Result[int2(xPos + 82, yPos - 12)] = color;
	Result[int2(xPos + 30, yPos - 13)] = color;
	Result[int2(xPos + 31, yPos - 13)] = color;
	Result[int2(xPos + 36, yPos - 13)] = color;
	Result[int2(xPos + 37, yPos - 13)] = color;
	Result[int2(xPos + 76, yPos - 13)] = color;
	Result[int2(xPos + 82, yPos - 13)] = color;
	Result[int2(xPos + 29, yPos - 14)] = color;
	Result[int2(xPos + 30, yPos - 14)] = color;
	Result[int2(xPos + 37, yPos - 14)] = color;
	Result[int2(xPos + 38, yPos - 14)] = color;
	Result[int2(xPos + 78, yPos - 15)] = color;
	Result[int2(xPos + 79, yPos - 15)] = color;
	Result[int2(xPos + 80, yPos - 15)] = color;
	Result[int2(xPos + 31, yPos - 16)] = color;
	Result[int2(xPos + 50, yPos - 16)] = color;
	Result[int2(xPos + 31, yPos - 17)] = color;
	Result[int2(xPos + 32, yPos - 17)] = color;
	Result[int2(xPos + 40, yPos - 17)] = color;
	Result[int2(xPos + 49, yPos - 17)] = color;
	Result[int2(xPos + 51, yPos - 17)] = color;
	Result[int2(xPos + 30, yPos - 18)] = color;
	Result[int2(xPos + 32, yPos - 18)] = color;
	Result[int2(xPos + 40, yPos - 18)] = color;
	Result[int2(xPos + 49, yPos - 18)] = color;
	Result[int2(xPos + 51, yPos - 18)] = color;
	Result[int2(xPos + 40, yPos - 19)] = color;
	Result[int2(xPos + 50, yPos - 19)] = color;
	Result[int2(xPos + 16, yPos - 21)] = color;
	Result[int2(xPos + 36, yPos - 21)] = color;
	Result[int2(xPos + 37, yPos - 21)] = color;
	Result[int2(xPos + 38, yPos - 21)] = color;
	Result[int2(xPos + 42, yPos - 21)] = color;
	Result[int2(xPos + 43, yPos - 21)] = color;
	Result[int2(xPos + 44, yPos - 21)] = color;
	Result[int2(xPos + 17, yPos - 22)] = color;
	Result[int2(xPos + 18, yPos - 22)] = color;
	Result[int2(xPos + 91, yPos - 22)] = color;
	Result[int2(xPos + 92, yPos - 22)] = color;
	Result[int2(xPos + 106, yPos - 22)] = color;
	Result[int2(xPos + 107, yPos - 22)] = color;
	Result[int2(xPos + 16, yPos - 23)] = color;
	Result[int2(xPos + 17, yPos - 23)] = color;
	Result[int2(xPos + 40, yPos - 23)] = color;
	Result[int2(xPos + 91, yPos - 23)] = color;
	Result[int2(xPos + 93, yPos - 23)] = color;
	Result[int2(xPos + 106, yPos - 23)] = color;
	Result[int2(xPos + 108, yPos - 23)] = color;
	Result[int2(xPos + 40, yPos - 24)] = color;
	Result[int2(xPos + 88, yPos - 24)] = color;
	Result[int2(xPos + 89, yPos - 24)] = color;
	Result[int2(xPos + 91, yPos - 24)] = color;
	Result[int2(xPos + 93, yPos - 24)] = color;
	Result[int2(xPos + 103, yPos - 24)] = color;
	Result[int2(xPos + 104, yPos - 24)] = color;
	Result[int2(xPos + 106, yPos - 24)] = color;
	Result[int2(xPos + 108, yPos - 24)] = color;
	Result[int2(xPos + 40, yPos - 25)] = color;
	Result[int2(xPos + 88, yPos - 25)] = color;
	Result[int2(xPos + 91, yPos - 25)] = color;
	Result[int2(xPos + 93, yPos - 25)] = color;
	Result[int2(xPos + 94, yPos - 25)] = color;
	Result[int2(xPos + 103, yPos - 25)] = color;
	Result[int2(xPos + 106, yPos - 25)] = color;
	Result[int2(xPos + 108, yPos - 25)] = color;
	Result[int2(xPos + 109, yPos - 25)] = color;
	Result[int2(xPos + 15, yPos - 26)] = color;
	Result[int2(xPos + 16, yPos - 26)] = color;
	Result[int2(xPos + 91, yPos - 26)] = color;
	Result[int2(xPos + 93, yPos - 26)] = color;
	Result[int2(xPos + 106, yPos - 26)] = color;
	Result[int2(xPos + 108, yPos - 26)] = color;
	Result[int2(xPos + 16, yPos - 27)] = color;
	Result[int2(xPos + 17, yPos - 27)] = color;
	Result[int2(xPos + 90, yPos - 27)] = color;
	Result[int2(xPos + 93, yPos - 27)] = color;
	Result[int2(xPos + 105, yPos - 27)] = color;
	Result[int2(xPos + 108, yPos - 27)] = color;
	Result[int2(xPos + 15, yPos - 28)] = color;
	Result[int2(xPos + 91, yPos - 28)] = color;
	Result[int2(xPos + 92, yPos - 28)] = color;
	Result[int2(xPos + 106, yPos - 28)] = color;
	Result[int2(xPos + 107, yPos - 28)] = color;
	Result[int2(xPos + 62, yPos - 40)] = color;
	Result[int2(xPos + 63, yPos - 40)] = color;
	Result[int2(xPos + 62, yPos - 41)] = color;
	Result[int2(xPos + 64, yPos - 41)] = color;
	Result[int2(xPos + 62, yPos - 42)] = color;
}