#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 106)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 130)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 130)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 27)) * yMult)] = color;
}