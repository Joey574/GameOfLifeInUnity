#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 10, yPos)] = color;
	Result[int2(xPos + 8, yPos - 1)] = color;
	Result[int2(xPos + 10, yPos - 1)] = color;
	Result[int2(xPos + 9, yPos - 2)] = color;
	Result[int2(xPos + 10, yPos - 2)] = color;
	Result[int2(xPos + 14, yPos - 2)] = color;
	Result[int2(xPos + 16, yPos - 2)] = color;
	Result[int2(xPos + 132, yPos - 2)] = color;
	Result[int2(xPos + 4, yPos - 3)] = color;
	Result[int2(xPos + 6, yPos - 3)] = color;
	Result[int2(xPos + 14, yPos - 3)] = color;
	Result[int2(xPos + 15, yPos - 3)] = color;
	Result[int2(xPos + 131, yPos - 3)] = color;
	Result[int2(xPos + 5, yPos - 4)] = color;
	Result[int2(xPos + 6, yPos - 4)] = color;
	Result[int2(xPos + 15, yPos - 4)] = color;
	Result[int2(xPos + 131, yPos - 4)] = color;
	Result[int2(xPos + 132, yPos - 4)] = color;
	Result[int2(xPos + 133, yPos - 4)] = color;
	Result[int2(xPos + 139, yPos - 4)] = color;
	Result[int2(xPos + 141, yPos - 4)] = color;
	Result[int2(xPos + 5, yPos - 5)] = color;
	Result[int2(xPos + 139, yPos - 5)] = color;
	Result[int2(xPos + 140, yPos - 5)] = color;
	Result[int2(xPos + 140, yPos - 6)] = color;
	Result[int2(xPos + 16, yPos - 7)] = color;
	Result[int2(xPos + 14, yPos - 8)] = color;
	Result[int2(xPos + 15, yPos - 8)] = color;
	Result[int2(xPos + 22, yPos - 8)] = color;
	Result[int2(xPos + 132, yPos - 8)] = color;
	Result[int2(xPos + 133, yPos - 8)] = color;
	Result[int2(xPos + 141, yPos - 8)] = color;
	Result[int2(xPos + 142, yPos - 8)] = color;
	Result[int2(xPos + 3, yPos - 9)] = color;
	Result[int2(xPos + 15, yPos - 9)] = color;
	Result[int2(xPos + 16, yPos - 9)] = color;
	Result[int2(xPos + 20, yPos - 9)] = color;
	Result[int2(xPos + 21, yPos - 9)] = color;
	Result[int2(xPos + 92, yPos - 9)] = color;
	Result[int2(xPos + 133, yPos - 9)] = color;
	Result[int2(xPos + 134, yPos - 9)] = color;
	Result[int2(xPos + 140, yPos - 9)] = color;
	Result[int2(xPos + 141, yPos - 9)] = color;
	Result[int2(xPos + 4, yPos - 10)] = color;
	Result[int2(xPos + 21, yPos - 10)] = color;
	Result[int2(xPos + 22, yPos - 10)] = color;
	Result[int2(xPos + 93, yPos - 10)] = color;
	Result[int2(xPos + 132, yPos - 10)] = color;
	Result[int2(xPos + 142, yPos - 10)] = color;
	Result[int2(xPos + 155, yPos - 10)] = color;
	Result[int2(xPos + 156, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 11)] = color;
	Result[int2(xPos + 3, yPos - 11)] = color;
	Result[int2(xPos + 4, yPos - 11)] = color;
	Result[int2(xPos + 36, yPos - 11)] = color;
	Result[int2(xPos + 37, yPos - 11)] = color;
	Result[int2(xPos + 56, yPos - 11)] = color;
	Result[int2(xPos + 57, yPos - 11)] = color;
	Result[int2(xPos + 76, yPos - 11)] = color;
	Result[int2(xPos + 77, yPos - 11)] = color;
	Result[int2(xPos + 91, yPos - 11)] = color;
	Result[int2(xPos + 92, yPos - 11)] = color;
	Result[int2(xPos + 93, yPos - 11)] = color;
	Result[int2(xPos + 96, yPos - 11)] = color;
	Result[int2(xPos + 97, yPos - 11)] = color;
	Result[int2(xPos + 116, yPos - 11)] = color;
	Result[int2(xPos + 117, yPos - 11)] = color;
	Result[int2(xPos + 136, yPos - 11)] = color;
	Result[int2(xPos + 137, yPos - 11)] = color;
	Result[int2(xPos + 155, yPos - 11)] = color;
	Result[int2(xPos + 157, yPos - 11)] = color;
	Result[int2(xPos + 35, yPos - 12)] = color;
	Result[int2(xPos + 37, yPos - 12)] = color;
	Result[int2(xPos + 55, yPos - 12)] = color;
	Result[int2(xPos + 57, yPos - 12)] = color;
	Result[int2(xPos + 75, yPos - 12)] = color;
	Result[int2(xPos + 77, yPos - 12)] = color;
	Result[int2(xPos + 95, yPos - 12)] = color;
	Result[int2(xPos + 97, yPos - 12)] = color;
	Result[int2(xPos + 117, yPos - 12)] = color;
	Result[int2(xPos + 137, yPos - 12)] = color;
	Result[int2(xPos + 157, yPos - 12)] = color;
	Result[int2(xPos + 34, yPos - 13)] = color;
	Result[int2(xPos + 37, yPos - 13)] = color;
	Result[int2(xPos + 39, yPos - 13)] = color;
	Result[int2(xPos + 40, yPos - 13)] = color;
	Result[int2(xPos + 54, yPos - 13)] = color;
	Result[int2(xPos + 57, yPos - 13)] = color;
	Result[int2(xPos + 59, yPos - 13)] = color;
	Result[int2(xPos + 60, yPos - 13)] = color;
	Result[int2(xPos + 74, yPos - 13)] = color;
	Result[int2(xPos + 77, yPos - 13)] = color;
	Result[int2(xPos + 79, yPos - 13)] = color;
	Result[int2(xPos + 80, yPos - 13)] = color;
	Result[int2(xPos + 94, yPos - 13)] = color;
	Result[int2(xPos + 97, yPos - 13)] = color;
	Result[int2(xPos + 99, yPos - 13)] = color;
	Result[int2(xPos + 100, yPos - 13)] = color;
	Result[int2(xPos + 117, yPos - 13)] = color;
	Result[int2(xPos + 119, yPos - 13)] = color;
	Result[int2(xPos + 120, yPos - 13)] = color;
	Result[int2(xPos + 137, yPos - 13)] = color;
	Result[int2(xPos + 139, yPos - 13)] = color;
	Result[int2(xPos + 140, yPos - 13)] = color;
	Result[int2(xPos + 157, yPos - 13)] = color;
	Result[int2(xPos + 159, yPos - 13)] = color;
	Result[int2(xPos + 160, yPos - 13)] = color;
	Result[int2(xPos + 34, yPos - 14)] = color;
	Result[int2(xPos + 35, yPos - 14)] = color;
	Result[int2(xPos + 37, yPos - 14)] = color;
	Result[int2(xPos + 40, yPos - 14)] = color;
	Result[int2(xPos + 54, yPos - 14)] = color;
	Result[int2(xPos + 55, yPos - 14)] = color;
	Result[int2(xPos + 57, yPos - 14)] = color;
	Result[int2(xPos + 60, yPos - 14)] = color;
	Result[int2(xPos + 74, yPos - 14)] = color;
	Result[int2(xPos + 75, yPos - 14)] = color;
	Result[int2(xPos + 77, yPos - 14)] = color;
	Result[int2(xPos + 80, yPos - 14)] = color;
	Result[int2(xPos + 94, yPos - 14)] = color;
	Result[int2(xPos + 95, yPos - 14)] = color;
	Result[int2(xPos + 97, yPos - 14)] = color;
	Result[int2(xPos + 100, yPos - 14)] = color;
	Result[int2(xPos + 114, yPos - 14)] = color;
	Result[int2(xPos + 115, yPos - 14)] = color;
	Result[int2(xPos + 117, yPos - 14)] = color;
	Result[int2(xPos + 120, yPos - 14)] = color;
	Result[int2(xPos + 134, yPos - 14)] = color;
	Result[int2(xPos + 135, yPos - 14)] = color;
	Result[int2(xPos + 137, yPos - 14)] = color;
	Result[int2(xPos + 140, yPos - 14)] = color;
	Result[int2(xPos + 154, yPos - 14)] = color;
	Result[int2(xPos + 155, yPos - 14)] = color;
	Result[int2(xPos + 157, yPos - 14)] = color;
	Result[int2(xPos + 160, yPos - 14)] = color;
	Result[int2(xPos, yPos - 15)] = color;
	Result[int2(xPos + 2, yPos - 15)] = color;
	Result[int2(xPos + 35, yPos - 15)] = color;
	Result[int2(xPos + 37, yPos - 15)] = color;
	Result[int2(xPos + 55, yPos - 15)] = color;
	Result[int2(xPos + 57, yPos - 15)] = color;
	Result[int2(xPos + 75, yPos - 15)] = color;
	Result[int2(xPos + 77, yPos - 15)] = color;
	Result[int2(xPos + 95, yPos - 15)] = color;
	Result[int2(xPos + 97, yPos - 15)] = color;
	Result[int2(xPos + 115, yPos - 15)] = color;
	Result[int2(xPos + 117, yPos - 15)] = color;
	Result[int2(xPos + 135, yPos - 15)] = color;
	Result[int2(xPos + 137, yPos - 15)] = color;
	Result[int2(xPos + 155, yPos - 15)] = color;
	Result[int2(xPos + 157, yPos - 15)] = color;
	Result[int2(xPos + 1, yPos - 16)] = color;
	Result[int2(xPos + 2, yPos - 16)] = color;
	Result[int2(xPos + 5, yPos - 16)] = color;
	Result[int2(xPos + 7, yPos - 16)] = color;
	Result[int2(xPos + 35, yPos - 16)] = color;
	Result[int2(xPos + 38, yPos - 16)] = color;
	Result[int2(xPos + 55, yPos - 16)] = color;
	Result[int2(xPos + 58, yPos - 16)] = color;
	Result[int2(xPos + 75, yPos - 16)] = color;
	Result[int2(xPos + 78, yPos - 16)] = color;
	Result[int2(xPos + 95, yPos - 16)] = color;
	Result[int2(xPos + 98, yPos - 16)] = color;
	Result[int2(xPos + 115, yPos - 16)] = color;
	Result[int2(xPos + 118, yPos - 16)] = color;
	Result[int2(xPos + 135, yPos - 16)] = color;
	Result[int2(xPos + 138, yPos - 16)] = color;
	Result[int2(xPos + 155, yPos - 16)] = color;
	Result[int2(xPos + 158, yPos - 16)] = color;
	Result[int2(xPos + 1, yPos - 17)] = color;
	Result[int2(xPos + 5, yPos - 17)] = color;
	Result[int2(xPos + 6, yPos - 17)] = color;
	Result[int2(xPos + 36, yPos - 17)] = color;
	Result[int2(xPos + 37, yPos - 17)] = color;
	Result[int2(xPos + 56, yPos - 17)] = color;
	Result[int2(xPos + 57, yPos - 17)] = color;
	Result[int2(xPos + 76, yPos - 17)] = color;
	Result[int2(xPos + 77, yPos - 17)] = color;
	Result[int2(xPos + 96, yPos - 17)] = color;
	Result[int2(xPos + 97, yPos - 17)] = color;
	Result[int2(xPos + 116, yPos - 17)] = color;
	Result[int2(xPos + 117, yPos - 17)] = color;
	Result[int2(xPos + 136, yPos - 17)] = color;
	Result[int2(xPos + 137, yPos - 17)] = color;
	Result[int2(xPos + 156, yPos - 17)] = color;
	Result[int2(xPos + 157, yPos - 17)] = color;
	Result[int2(xPos + 6, yPos - 18)] = color;
	Result[int2(xPos + 18, yPos - 19)] = color;
	Result[int2(xPos + 19, yPos - 19)] = color;
	Result[int2(xPos + 17, yPos - 20)] = color;
	Result[int2(xPos + 18, yPos - 20)] = color;
	Result[int2(xPos + 19, yPos - 21)] = color;
	Result[int2(xPos + 34, yPos - 23)] = color;
	Result[int2(xPos + 35, yPos - 23)] = color;
	Result[int2(xPos + 54, yPos - 23)] = color;
	Result[int2(xPos + 55, yPos - 23)] = color;
	Result[int2(xPos + 33, yPos - 24)] = color;
	Result[int2(xPos + 36, yPos - 24)] = color;
	Result[int2(xPos + 53, yPos - 24)] = color;
	Result[int2(xPos + 56, yPos - 24)] = color;
	Result[int2(xPos + 34, yPos - 25)] = color;
	Result[int2(xPos + 35, yPos - 25)] = color;
	Result[int2(xPos + 54, yPos - 25)] = color;
	Result[int2(xPos + 55, yPos - 25)] = color;
	Result[int2(xPos + 57, yPos - 26)] = color;
	Result[int2(xPos + 58, yPos - 26)] = color;
	Result[int2(xPos + 59, yPos - 26)] = color;
	Result[int2(xPos + 57, yPos - 27)] = color;
	Result[int2(xPos + 58, yPos - 28)] = color;
}