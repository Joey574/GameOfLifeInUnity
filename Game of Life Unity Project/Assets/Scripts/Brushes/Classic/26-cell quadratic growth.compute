#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (1 * xMult), yPos)] = color;
	Result[int2(xPos + (2 * xMult), yPos)] = color;
	Result[int2(xPos, yPos - (1 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (16187 * xMult), yPos - (15058 * yMult))] = color;
	Result[int2(xPos + (16191 * xMult), yPos - (15058 * yMult))] = color;
	Result[int2(xPos + (16188 * xMult), yPos - (15059 * yMult))] = color;
	Result[int2(xPos + (16190 * xMult), yPos - (15059 * yMult))] = color;
	Result[int2(xPos + (16189 * xMult), yPos - (15060 * yMult))] = color;
	Result[int2(xPos + (16192 * xMult), yPos - (15060 * yMult))] = color;
	Result[int2(xPos + (16192 * xMult), yPos - (15061 * yMult))] = color;
	Result[int2(xPos + (16192 * xMult), yPos - (15062 * yMult))] = color;
	Result[int2(xPos + (16159 * xMult), yPos - (15083 * yMult))] = color;
	Result[int2(xPos + (16160 * xMult), yPos - (15084 * yMult))] = color;
	Result[int2(xPos + (16161 * xMult), yPos - (15085 * yMult))] = color;
	Result[int2(xPos + (16160 * xMult), yPos - (15086 * yMult))] = color;
	Result[int2(xPos + (16159 * xMult), yPos - (15087 * yMult))] = color;
	Result[int2(xPos + (16161 * xMult), yPos - (15088 * yMult))] = color;
	Result[int2(xPos + (16162 * xMult), yPos - (15088 * yMult))] = color;
	Result[int2(xPos + (16163 * xMult), yPos - (15088 * yMult))] = color;
}