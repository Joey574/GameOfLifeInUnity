#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 84, yPos)] = color;
	Result[int2(xPos + 88, yPos)] = color;
	Result[int2(xPos + 82, yPos - 1)] = color;
	Result[int2(xPos + 84, yPos - 1)] = color;
	Result[int2(xPos + 88, yPos - 1)] = color;
	Result[int2(xPos + 90, yPos - 1)] = color;
	Result[int2(xPos + 83, yPos - 2)] = color;
	Result[int2(xPos + 84, yPos - 2)] = color;
	Result[int2(xPos + 88, yPos - 2)] = color;
	Result[int2(xPos + 89, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 3)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos, yPos - 4)] = color;
	Result[int2(xPos + 2, yPos - 4)] = color;
	Result[int2(xPos + 4, yPos - 4)] = color;
	Result[int2(xPos + 42, yPos - 4)] = color;
	Result[int2(xPos + 44, yPos - 4)] = color;
	Result[int2(xPos + 48, yPos - 4)] = color;
	Result[int2(xPos + 50, yPos - 4)] = color;
	Result[int2(xPos + 82, yPos - 4)] = color;
	Result[int2(xPos + 86, yPos - 4)] = color;
	Result[int2(xPos + 2, yPos - 5)] = color;
	Result[int2(xPos + 4, yPos - 5)] = color;
	Result[int2(xPos + 6, yPos - 5)] = color;
	Result[int2(xPos + 43, yPos - 5)] = color;
	Result[int2(xPos + 44, yPos - 5)] = color;
	Result[int2(xPos + 48, yPos - 5)] = color;
	Result[int2(xPos + 49, yPos - 5)] = color;
	Result[int2(xPos + 79, yPos - 5)] = color;
	Result[int2(xPos + 81, yPos - 5)] = color;
	Result[int2(xPos + 83, yPos - 5)] = color;
	Result[int2(xPos + 85, yPos - 5)] = color;
	Result[int2(xPos + 4, yPos - 6)] = color;
	Result[int2(xPos + 5, yPos - 6)] = color;
	Result[int2(xPos + 43, yPos - 6)] = color;
	Result[int2(xPos + 49, yPos - 6)] = color;
	Result[int2(xPos + 80, yPos - 6)] = color;
	Result[int2(xPos + 81, yPos - 6)] = color;
	Result[int2(xPos + 83, yPos - 6)] = color;
	Result[int2(xPos + 84, yPos - 6)] = color;
	Result[int2(xPos + 117, yPos - 6)] = color;
	Result[int2(xPos + 119, yPos - 6)] = color;
	Result[int2(xPos + 8, yPos - 7)] = color;
	Result[int2(xPos + 10, yPos - 7)] = color;
	Result[int2(xPos + 43, yPos - 7)] = color;
	Result[int2(xPos + 45, yPos - 7)] = color;
	Result[int2(xPos + 81, yPos - 7)] = color;
	Result[int2(xPos + 83, yPos - 7)] = color;
	Result[int2(xPos + 8, yPos - 8)] = color;
	Result[int2(xPos + 45, yPos - 8)] = color;
	Result[int2(xPos + 84, yPos - 8)] = color;
	Result[int2(xPos + 79, yPos - 16)] = color;
	Result[int2(xPos + 81, yPos - 16)] = color;
	Result[int2(xPos + 91, yPos - 16)] = color;
	Result[int2(xPos + 93, yPos - 16)] = color;
	Result[int2(xPos + 38, yPos - 17)] = color;
	Result[int2(xPos + 54, yPos - 17)] = color;
	Result[int2(xPos + 80, yPos - 17)] = color;
	Result[int2(xPos + 81, yPos - 17)] = color;
	Result[int2(xPos + 91, yPos - 17)] = color;
	Result[int2(xPos + 92, yPos - 17)] = color;
	Result[int2(xPos + 39, yPos - 18)] = color;
	Result[int2(xPos + 53, yPos - 18)] = color;
	Result[int2(xPos + 80, yPos - 18)] = color;
	Result[int2(xPos + 92, yPos - 18)] = color;
	Result[int2(xPos + 37, yPos - 19)] = color;
	Result[int2(xPos + 38, yPos - 19)] = color;
	Result[int2(xPos + 39, yPos - 19)] = color;
	Result[int2(xPos + 53, yPos - 19)] = color;
	Result[int2(xPos + 54, yPos - 19)] = color;
	Result[int2(xPos + 55, yPos - 19)] = color;
	Result[int2(xPos + 78, yPos - 20)] = color;
	Result[int2(xPos + 79, yPos - 20)] = color;
	Result[int2(xPos + 93, yPos - 20)] = color;
	Result[int2(xPos + 94, yPos - 20)] = color;
	Result[int2(xPos + 40, yPos - 21)] = color;
	Result[int2(xPos + 41, yPos - 21)] = color;
	Result[int2(xPos + 51, yPos - 21)] = color;
	Result[int2(xPos + 52, yPos - 21)] = color;
	Result[int2(xPos + 79, yPos - 21)] = color;
	Result[int2(xPos + 80, yPos - 21)] = color;
	Result[int2(xPos + 92, yPos - 21)] = color;
	Result[int2(xPos + 93, yPos - 21)] = color;
	Result[int2(xPos + 41, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 22)] = color;
	Result[int2(xPos + 44, yPos - 22)] = color;
	Result[int2(xPos + 45, yPos - 22)] = color;
	Result[int2(xPos + 47, yPos - 22)] = color;
	Result[int2(xPos + 48, yPos - 22)] = color;
	Result[int2(xPos + 50, yPos - 22)] = color;
	Result[int2(xPos + 51, yPos - 22)] = color;
	Result[int2(xPos + 74, yPos - 22)] = color;
	Result[int2(xPos + 80, yPos - 22)] = color;
	Result[int2(xPos + 81, yPos - 22)] = color;
	Result[int2(xPos + 83, yPos - 22)] = color;
	Result[int2(xPos + 84, yPos - 22)] = color;
	Result[int2(xPos + 90, yPos - 22)] = color;
	Result[int2(xPos + 40, yPos - 23)] = color;
	Result[int2(xPos + 44, yPos - 23)] = color;
	Result[int2(xPos + 45, yPos - 23)] = color;
	Result[int2(xPos + 47, yPos - 23)] = color;
	Result[int2(xPos + 48, yPos - 23)] = color;
	Result[int2(xPos + 52, yPos - 23)] = color;
	Result[int2(xPos + 82, yPos - 23)] = color;
	Result[int2(xPos + 86, yPos - 23)] = color;
	Result[int2(xPos + 83, yPos - 24)] = color;
	Result[int2(xPos + 85, yPos - 24)] = color;
	Result[int2(xPos + 44, yPos - 25)] = color;
	Result[int2(xPos + 45, yPos - 25)] = color;
	Result[int2(xPos + 47, yPos - 25)] = color;
	Result[int2(xPos + 48, yPos - 25)] = color;
	Result[int2(xPos + 80, yPos - 25)] = color;
	Result[int2(xPos + 81, yPos - 25)] = color;
	Result[int2(xPos + 83, yPos - 25)] = color;
	Result[int2(xPos + 84, yPos - 25)] = color;
	Result[int2(xPos + 45, yPos - 26)] = color;
	Result[int2(xPos + 47, yPos - 26)] = color;
	Result[int2(xPos + 83, yPos - 26)] = color;
	Result[int2(xPos + 85, yPos - 26)] = color;
	Result[int2(xPos + 45, yPos - 27)] = color;
	Result[int2(xPos + 47, yPos - 27)] = color;
	Result[int2(xPos + 83, yPos - 27)] = color;
	Result[int2(xPos + 85, yPos - 27)] = color;
	Result[int2(xPos + 46, yPos - 28)] = color;
	Result[int2(xPos + 85, yPos - 28)] = color;
}