#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 51, yPos)] = color;
	Result[int2(xPos + 49, yPos - 1)] = color;
	Result[int2(xPos + 50, yPos - 1)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 50, yPos - 2)] = color;
	Result[int2(xPos + 51, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 2, yPos - 4)] = color;
	Result[int2(xPos + 26, yPos - 26)] = color;
	Result[int2(xPos + 40, yPos - 26)] = color;
	Result[int2(xPos + 26, yPos - 27)] = color;
	Result[int2(xPos + 28, yPos - 27)] = color;
	Result[int2(xPos + 39, yPos - 27)] = color;
	Result[int2(xPos + 26, yPos - 28)] = color;
	Result[int2(xPos + 27, yPos - 28)] = color;
	Result[int2(xPos + 39, yPos - 28)] = color;
	Result[int2(xPos + 40, yPos - 28)] = color;
	Result[int2(xPos + 41, yPos - 28)] = color;
	Result[int2(xPos + 25, yPos - 30)] = color;
	Result[int2(xPos + 23, yPos - 31)] = color;
	Result[int2(xPos + 25, yPos - 31)] = color;
	Result[int2(xPos + 24, yPos - 32)] = color;
	Result[int2(xPos + 25, yPos - 32)] = color;
	Result[int2(xPos, yPos - 40)] = color;
	Result[int2(xPos + 1, yPos - 40)] = color;
	Result[int2(xPos + 1, yPos - 41)] = color;
	Result[int2(xPos + 2, yPos - 41)] = color;
	Result[int2(xPos, yPos - 42)] = color;
}