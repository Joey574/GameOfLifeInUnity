#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (37 * xMult), yPos)] = color;
	Result[int2(xPos + (38 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (172 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (173 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (173 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (163 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (144 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (146 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (144 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (145 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (145 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (167 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (168 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (167 * xMult), yPos - (121 * yMult))] = color;
	Result[int2(xPos + (147 * xMult), yPos - (125 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (125 * yMult))] = color;
	Result[int2(xPos + (147 * xMult), yPos - (126 * yMult))] = color;
	Result[int2(xPos + (149 * xMult), yPos - (126 * yMult))] = color;
	Result[int2(xPos + (147 * xMult), yPos - (127 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (164 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (165 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (165 * yMult))] = color;
	Result[int2(xPos, yPos - (166 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (166 * yMult))] = color;
}