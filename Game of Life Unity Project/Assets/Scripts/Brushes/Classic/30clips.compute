#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 126, yPos)] = color;
	Result[int2(xPos + 126, yPos - 1)] = color;
	Result[int2(xPos + 128, yPos - 1)] = color;
	Result[int2(xPos + 126, yPos - 2)] = color;
	Result[int2(xPos + 127, yPos - 2)] = color;
	Result[int2(xPos + 124, yPos - 4)] = color;
	Result[int2(xPos + 124, yPos - 5)] = color;
	Result[int2(xPos + 124, yPos - 6)] = color;
	Result[int2(xPos + 84, yPos - 8)] = color;
	Result[int2(xPos + 82, yPos - 9)] = color;
	Result[int2(xPos + 84, yPos - 9)] = color;
	Result[int2(xPos + 89, yPos - 9)] = color;
	Result[int2(xPos + 83, yPos - 10)] = color;
	Result[int2(xPos + 84, yPos - 10)] = color;
	Result[int2(xPos + 87, yPos - 10)] = color;
	Result[int2(xPos + 88, yPos - 10)] = color;
	Result[int2(xPos + 88, yPos - 11)] = color;
	Result[int2(xPos + 89, yPos - 11)] = color;
	Result[int2(xPos + 118, yPos - 11)] = color;
	Result[int2(xPos + 119, yPos - 11)] = color;
	Result[int2(xPos + 123, yPos - 11)] = color;
	Result[int2(xPos + 124, yPos - 11)] = color;
	Result[int2(xPos + 117, yPos - 12)] = color;
	Result[int2(xPos + 120, yPos - 12)] = color;
	Result[int2(xPos + 122, yPos - 12)] = color;
	Result[int2(xPos + 125, yPos - 12)] = color;
	Result[int2(xPos + 115, yPos - 13)] = color;
	Result[int2(xPos + 116, yPos - 13)] = color;
	Result[int2(xPos + 118, yPos - 13)] = color;
	Result[int2(xPos + 120, yPos - 13)] = color;
	Result[int2(xPos + 122, yPos - 13)] = color;
	Result[int2(xPos + 123, yPos - 13)] = color;
	Result[int2(xPos + 122, yPos - 14)] = color;
	Result[int2(xPos + 124, yPos - 14)] = color;
	Result[int2(xPos + 115, yPos - 15)] = color;
	Result[int2(xPos + 116, yPos - 15)] = color;
	Result[int2(xPos + 118, yPos - 15)] = color;
	Result[int2(xPos + 120, yPos - 15)] = color;
	Result[int2(xPos + 122, yPos - 15)] = color;
	Result[int2(xPos + 123, yPos - 15)] = color;
	Result[int2(xPos + 85, yPos - 16)] = color;
	Result[int2(xPos + 117, yPos - 16)] = color;
	Result[int2(xPos + 120, yPos - 16)] = color;
	Result[int2(xPos + 122, yPos - 16)] = color;
	Result[int2(xPos + 125, yPos - 16)] = color;
	Result[int2(xPos + 44, yPos - 17)] = color;
	Result[int2(xPos + 42, yPos - 18)] = color;
	Result[int2(xPos + 43, yPos - 18)] = color;
	Result[int2(xPos + 44, yPos - 18)] = color;
	Result[int2(xPos + 86, yPos - 18)] = color;
	Result[int2(xPos + 84, yPos - 19)] = color;
	Result[int2(xPos + 86, yPos - 19)] = color;
	Result[int2(xPos + 45, yPos - 20)] = color;
	Result[int2(xPos + 46, yPos - 20)] = color;
	Result[int2(xPos + 47, yPos - 20)] = color;
	Result[int2(xPos + 84, yPos - 20)] = color;
	Result[int2(xPos + 86, yPos - 20)] = color;
	Result[int2(xPos + 47, yPos - 21)] = color;
	Result[int2(xPos + 86, yPos - 21)] = color;
	Result[int2(xPos + 46, yPos - 22)] = color;
	Result[int2(xPos + 77, yPos - 22)] = color;
	Result[int2(xPos + 78, yPos - 22)] = color;
	Result[int2(xPos + 76, yPos - 23)] = color;
	Result[int2(xPos + 78, yPos - 23)] = color;
	Result[int2(xPos + 78, yPos - 24)] = color;
	Result[int2(xPos + 66, yPos - 42)] = color;
	Result[int2(xPos + 67, yPos - 42)] = color;
	Result[int2(xPos + 75, yPos - 42)] = color;
	Result[int2(xPos + 76, yPos - 42)] = color;
	Result[int2(xPos + 112, yPos - 42)] = color;
	Result[int2(xPos + 113, yPos - 42)] = color;
	Result[int2(xPos + 121, yPos - 42)] = color;
	Result[int2(xPos + 122, yPos - 42)] = color;
	Result[int2(xPos + 29, yPos - 43)] = color;
	Result[int2(xPos + 30, yPos - 43)] = color;
	Result[int2(xPos + 31, yPos - 43)] = color;
	Result[int2(xPos + 34, yPos - 43)] = color;
	Result[int2(xPos + 35, yPos - 43)] = color;
	Result[int2(xPos + 66, yPos - 43)] = color;
	Result[int2(xPos + 67, yPos - 43)] = color;
	Result[int2(xPos + 75, yPos - 43)] = color;
	Result[int2(xPos + 76, yPos - 43)] = color;
	Result[int2(xPos + 112, yPos - 43)] = color;
	Result[int2(xPos + 113, yPos - 43)] = color;
	Result[int2(xPos + 121, yPos - 43)] = color;
	Result[int2(xPos + 122, yPos - 43)] = color;
	Result[int2(xPos + 31, yPos - 44)] = color;
	Result[int2(xPos + 33, yPos - 44)] = color;
	Result[int2(xPos + 34, yPos - 44)] = color;
	Result[int2(xPos + 30, yPos - 45)] = color;
	Result[int2(xPos + 35, yPos - 45)] = color;
	Result[int2(xPos + 117, yPos - 47)] = color;
	Result[int2(xPos + 133, yPos - 47)] = color;
	Result[int2(xPos + 118, yPos - 48)] = color;
	Result[int2(xPos + 132, yPos - 48)] = color;
	Result[int2(xPos + 37, yPos - 49)] = color;
	Result[int2(xPos + 38, yPos - 49)] = color;
	Result[int2(xPos + 116, yPos - 49)] = color;
	Result[int2(xPos + 117, yPos - 49)] = color;
	Result[int2(xPos + 118, yPos - 49)] = color;
	Result[int2(xPos + 132, yPos - 49)] = color;
	Result[int2(xPos + 133, yPos - 49)] = color;
	Result[int2(xPos + 134, yPos - 49)] = color;
	Result[int2(xPos + 38, yPos - 50)] = color;
	Result[int2(xPos + 39, yPos - 50)] = color;
	Result[int2(xPos + 62, yPos - 50)] = color;
	Result[int2(xPos + 64, yPos - 50)] = color;
	Result[int2(xPos + 86, yPos - 50)] = color;
	Result[int2(xPos + 88, yPos - 50)] = color;
	Result[int2(xPos + 118, yPos - 50)] = color;
	Result[int2(xPos + 128, yPos - 50)] = color;
	Result[int2(xPos + 37, yPos - 51)] = color;
	Result[int2(xPos + 63, yPos - 51)] = color;
	Result[int2(xPos + 64, yPos - 51)] = color;
	Result[int2(xPos + 86, yPos - 51)] = color;
	Result[int2(xPos + 87, yPos - 51)] = color;
	Result[int2(xPos + 118, yPos - 51)] = color;
	Result[int2(xPos + 128, yPos - 51)] = color;
	Result[int2(xPos + 63, yPos - 52)] = color;
	Result[int2(xPos + 87, yPos - 52)] = color;
	Result[int2(xPos + 118, yPos - 52)] = color;
	Result[int2(xPos + 128, yPos - 52)] = color;
	Result[int2(xPos + 65, yPos - 54)] = color;
	Result[int2(xPos + 66, yPos - 54)] = color;
	Result[int2(xPos + 84, yPos - 54)] = color;
	Result[int2(xPos + 85, yPos - 54)] = color;
	Result[int2(xPos + 66, yPos - 55)] = color;
	Result[int2(xPos + 67, yPos - 55)] = color;
	Result[int2(xPos + 83, yPos - 55)] = color;
	Result[int2(xPos + 84, yPos - 55)] = color;
	Result[int2(xPos + 65, yPos - 56)] = color;
	Result[int2(xPos + 85, yPos - 56)] = color;
	Result[int2(xPos + 67, yPos - 71)] = color;
	Result[int2(xPos + 66, yPos - 72)] = color;
	Result[int2(xPos + 126, yPos - 72)] = color;
	Result[int2(xPos + 66, yPos - 73)] = color;
	Result[int2(xPos + 67, yPos - 73)] = color;
	Result[int2(xPos + 68, yPos - 73)] = color;
	Result[int2(xPos + 126, yPos - 73)] = color;
	Result[int2(xPos + 128, yPos - 73)] = color;
	Result[int2(xPos + 126, yPos - 74)] = color;
	Result[int2(xPos + 127, yPos - 74)] = color;
	Result[int2(xPos + 1, yPos - 83)] = color;
	Result[int2(xPos + 43, yPos - 83)] = color;
	Result[int2(xPos + 103, yPos - 83)] = color;
	Result[int2(xPos + 2, yPos - 84)] = color;
	Result[int2(xPos + 41, yPos - 84)] = color;
	Result[int2(xPos + 43, yPos - 84)] = color;
	Result[int2(xPos + 101, yPos - 84)] = color;
	Result[int2(xPos + 103, yPos - 84)] = color;
	Result[int2(xPos, yPos - 85)] = color;
	Result[int2(xPos + 1, yPos - 85)] = color;
	Result[int2(xPos + 2, yPos - 85)] = color;
	Result[int2(xPos + 4, yPos - 85)] = color;
	Result[int2(xPos + 5, yPos - 85)] = color;
	Result[int2(xPos + 24, yPos - 85)] = color;
	Result[int2(xPos + 78, yPos - 85)] = color;
	Result[int2(xPos + 42, yPos - 86)] = color;
	Result[int2(xPos + 47, yPos - 86)] = color;
	Result[int2(xPos + 48, yPos - 86)] = color;
	Result[int2(xPos + 48, yPos - 87)] = color;
	Result[int2(xPos + 94, yPos - 90)] = color;
	Result[int2(xPos + 95, yPos - 90)] = color;
	Result[int2(xPos + 115, yPos - 90)] = color;
	Result[int2(xPos + 116, yPos - 90)] = color;
	Result[int2(xPos + 88, yPos - 91)] = color;
	Result[int2(xPos + 89, yPos - 91)] = color;
	Result[int2(xPos + 91, yPos - 91)] = color;
	Result[int2(xPos + 92, yPos - 91)] = color;
	Result[int2(xPos + 110, yPos - 91)] = color;
	Result[int2(xPos + 111, yPos - 91)] = color;
	Result[int2(xPos + 113, yPos - 91)] = color;
	Result[int2(xPos + 114, yPos - 91)] = color;
	Result[int2(xPos + 114, yPos - 92)] = color;
	Result[int2(xPos + 126, yPos - 92)] = color;
	Result[int2(xPos + 127, yPos - 92)] = color;
	Result[int2(xPos + 44, yPos - 93)] = color;
	Result[int2(xPos + 46, yPos - 93)] = color;
	Result[int2(xPos + 46, yPos - 94)] = color;
	Result[int2(xPos + 49, yPos - 94)] = color;
	Result[int2(xPos + 50, yPos - 94)] = color;
	Result[int2(xPos + 48, yPos - 95)] = color;
	Result[int2(xPos + 49, yPos - 95)] = color;
	Result[int2(xPos + 98, yPos - 95)] = color;
	Result[int2(xPos + 99, yPos - 95)] = color;
	Result[int2(xPos + 111, yPos - 95)] = color;
	Result[int2(xPos + 112, yPos - 95)] = color;
	Result[int2(xPos + 50, yPos - 96)] = color;
	Result[int2(xPos + 97, yPos - 96)] = color;
	Result[int2(xPos + 99, yPos - 96)] = color;
	Result[int2(xPos + 111, yPos - 96)] = color;
	Result[int2(xPos + 113, yPos - 96)] = color;
	Result[int2(xPos + 57, yPos - 97)] = color;
	Result[int2(xPos + 58, yPos - 97)] = color;
	Result[int2(xPos + 99, yPos - 97)] = color;
	Result[int2(xPos + 111, yPos - 97)] = color;
	Result[int2(xPos + 56, yPos - 98)] = color;
	Result[int2(xPos + 57, yPos - 98)] = color;
	Result[int2(xPos + 58, yPos - 99)] = color;
}