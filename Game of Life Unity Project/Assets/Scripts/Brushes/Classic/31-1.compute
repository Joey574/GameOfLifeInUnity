#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 86)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 342)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 343)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 344)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 679)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 680)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 681)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 342)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 343)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 344)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 37)) * yMult)] = color;
}