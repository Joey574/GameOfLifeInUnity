#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + (1 * xMult), yPos)] = color;
	Result[int2(xPos + (59 * xMult), yPos)] = color;
	Result[int2(xPos + (60 * xMult), yPos)] = color;
	Result[int2(xPos, yPos - (1 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos, yPos - (31 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos, yPos - (32 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (57 * yMult))] = color;
}