#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 62, yPos)] = color;
	Result[int2(xPos + 62, yPos - 1)] = color;
	Result[int2(xPos + 64, yPos - 1)] = color;
	Result[int2(xPos + 62, yPos - 2)] = color;
	Result[int2(xPos + 63, yPos - 2)] = color;
	Result[int2(xPos + 45, yPos - 16)] = color;
	Result[int2(xPos + 46, yPos - 17)] = color;
	Result[int2(xPos + 47, yPos - 17)] = color;
	Result[int2(xPos + 45, yPos - 18)] = color;
	Result[int2(xPos + 46, yPos - 18)] = color;
	Result[int2(xPos + 40, yPos - 20)] = color;
	Result[int2(xPos + 41, yPos - 20)] = color;
	Result[int2(xPos + 46, yPos - 20)] = color;
	Result[int2(xPos + 1, yPos - 21)] = color;
	Result[int2(xPos + 2, yPos - 21)] = color;
	Result[int2(xPos + 39, yPos - 21)] = color;
	Result[int2(xPos + 42, yPos - 21)] = color;
	Result[int2(xPos + 46, yPos - 21)] = color;
	Result[int2(xPos + 48, yPos - 21)] = color;
	Result[int2(xPos, yPos - 22)] = color;
	Result[int2(xPos + 2, yPos - 22)] = color;
	Result[int2(xPos + 40, yPos - 22)] = color;
	Result[int2(xPos + 41, yPos - 22)] = color;
	Result[int2(xPos + 46, yPos - 22)] = color;
	Result[int2(xPos + 47, yPos - 22)] = color;
	Result[int2(xPos + 2, yPos - 23)] = color;
	Result[int2(xPos + 4, yPos - 24)] = color;
	Result[int2(xPos + 5, yPos - 24)] = color;
	Result[int2(xPos + 39, yPos - 24)] = color;
	Result[int2(xPos + 4, yPos - 25)] = color;
	Result[int2(xPos + 6, yPos - 25)] = color;
	Result[int2(xPos + 40, yPos - 25)] = color;
	Result[int2(xPos + 41, yPos - 25)] = color;
	Result[int2(xPos + 93, yPos - 25)] = color;
	Result[int2(xPos + 4, yPos - 26)] = color;
	Result[int2(xPos + 39, yPos - 26)] = color;
	Result[int2(xPos + 40, yPos - 26)] = color;
	Result[int2(xPos + 45, yPos - 26)] = color;
	Result[int2(xPos + 91, yPos - 26)] = color;
	Result[int2(xPos + 93, yPos - 26)] = color;
	Result[int2(xPos + 44, yPos - 27)] = color;
	Result[int2(xPos + 45, yPos - 27)] = color;
	Result[int2(xPos + 92, yPos - 27)] = color;
	Result[int2(xPos + 93, yPos - 27)] = color;
	Result[int2(xPos + 44, yPos - 28)] = color;
	Result[int2(xPos + 46, yPos - 28)] = color;
	Result[int2(xPos + 94, yPos - 28)] = color;
	Result[int2(xPos + 92, yPos - 29)] = color;
	Result[int2(xPos + 94, yPos - 29)] = color;
	Result[int2(xPos + 92, yPos - 30)] = color;
	Result[int2(xPos + 94, yPos - 30)] = color;
	Result[int2(xPos + 94, yPos - 31)] = color;
	Result[int2(xPos + 41, yPos - 35)] = color;
	Result[int2(xPos + 42, yPos - 35)] = color;
	Result[int2(xPos + 43, yPos - 35)] = color;
	Result[int2(xPos + 43, yPos - 36)] = color;
	Result[int2(xPos + 42, yPos - 37)] = color;
	Result[int2(xPos + 96, yPos - 38)] = color;
	Result[int2(xPos + 97, yPos - 38)] = color;
	Result[int2(xPos + 101, yPos - 38)] = color;
	Result[int2(xPos + 102, yPos - 38)] = color;
	Result[int2(xPos + 43, yPos - 39)] = color;
	Result[int2(xPos + 44, yPos - 39)] = color;
	Result[int2(xPos + 45, yPos - 39)] = color;
	Result[int2(xPos + 95, yPos - 39)] = color;
	Result[int2(xPos + 98, yPos - 39)] = color;
	Result[int2(xPos + 100, yPos - 39)] = color;
	Result[int2(xPos + 103, yPos - 39)] = color;
	Result[int2(xPos + 96, yPos - 40)] = color;
	Result[int2(xPos + 98, yPos - 40)] = color;
	Result[int2(xPos + 100, yPos - 40)] = color;
	Result[int2(xPos + 102, yPos - 40)] = color;
	Result[int2(xPos + 99, yPos - 41)] = color;
	Result[int2(xPos + 103, yPos - 41)] = color;
}