#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 21, yPos - 15)] = color;
	Result[int2(xPos + 22, yPos - 15)] = color;
	Result[int2(xPos + 21, yPos - 16)] = color;
	Result[int2(xPos + 24, yPos - 16)] = color;
	Result[int2(xPos + 19, yPos - 19)] = color;
	Result[int2(xPos + 24, yPos - 19)] = color;
	Result[int2(xPos + 19, yPos - 20)] = color;
	Result[int2(xPos + 22, yPos - 20)] = color;
	Result[int2(xPos + 23, yPos - 20)] = color;
	Result[int2(xPos + 19, yPos - 21)] = color;
	Result[int2(xPos + 20, yPos - 21)] = color;
	Result[int2(xPos + 15, yPos - 22)] = color;
	Result[int2(xPos + 16, yPos - 22)] = color;
	Result[int2(xPos + 15, yPos - 23)] = color;
	Result[int2(xPos + 16, yPos - 23)] = color;
	Result[int2(xPos + 17, yPos - 23)] = color;
	Result[int2(xPos + 24, yPos - 23)] = color;
	Result[int2(xPos + 26, yPos - 23)] = color;
	Result[int2(xPos + 14, yPos - 24)] = color;
	Result[int2(xPos + 18, yPos - 24)] = color;
	Result[int2(xPos + 27, yPos - 24)] = color;
	Result[int2(xPos + 28, yPos - 24)] = color;
	Result[int2(xPos + 17, yPos - 25)] = color;
	Result[int2(xPos + 18, yPos - 25)] = color;
	Result[int2(xPos + 19, yPos - 25)] = color;
	Result[int2(xPos + 22, yPos - 25)] = color;
	Result[int2(xPos + 23, yPos - 25)] = color;
	Result[int2(xPos + 27, yPos - 25)] = color;
	Result[int2(xPos + 28, yPos - 25)] = color;
	Result[int2(xPos + 7, yPos - 26)] = color;
	Result[int2(xPos + 10, yPos - 26)] = color;
	Result[int2(xPos + 14, yPos - 26)] = color;
	Result[int2(xPos + 18, yPos - 26)] = color;
	Result[int2(xPos + 23, yPos - 26)] = color;
	Result[int2(xPos + 25, yPos - 26)] = color;
	Result[int2(xPos + 27, yPos - 26)] = color;
	Result[int2(xPos + 11, yPos - 27)] = color;
	Result[int2(xPos + 16, yPos - 27)] = color;
	Result[int2(xPos + 17, yPos - 27)] = color;
	Result[int2(xPos + 24, yPos - 27)] = color;
	Result[int2(xPos + 25, yPos - 27)] = color;
	Result[int2(xPos + 26, yPos - 27)] = color;
	Result[int2(xPos + 6, yPos - 28)] = color;
	Result[int2(xPos + 11, yPos - 28)] = color;
	Result[int2(xPos + 16, yPos - 28)] = color;
	Result[int2(xPos + 25, yPos - 28)] = color;
	Result[int2(xPos + 29, yPos - 28)] = color;
	Result[int2(xPos + 30, yPos - 28)] = color;
	Result[int2(xPos + 31, yPos - 28)] = color;
	Result[int2(xPos + 6, yPos - 29)] = color;
	Result[int2(xPos + 7, yPos - 29)] = color;
	Result[int2(xPos + 29, yPos - 29)] = color;
	Result[int2(xPos + 12, yPos - 30)] = color;
	Result[int2(xPos + 34, yPos - 30)] = color;
	Result[int2(xPos + 35, yPos - 30)] = color;
	Result[int2(xPos + 10, yPos - 31)] = color;
	Result[int2(xPos + 11, yPos - 31)] = color;
	Result[int2(xPos + 12, yPos - 31)] = color;
	Result[int2(xPos + 16, yPos - 31)] = color;
	Result[int2(xPos + 25, yPos - 31)] = color;
	Result[int2(xPos + 30, yPos - 31)] = color;
	Result[int2(xPos + 35, yPos - 31)] = color;
	Result[int2(xPos + 15, yPos - 32)] = color;
	Result[int2(xPos + 16, yPos - 32)] = color;
	Result[int2(xPos + 17, yPos - 32)] = color;
	Result[int2(xPos + 24, yPos - 32)] = color;
	Result[int2(xPos + 25, yPos - 32)] = color;
	Result[int2(xPos + 30, yPos - 32)] = color;
	Result[int2(xPos + 14, yPos - 33)] = color;
	Result[int2(xPos + 16, yPos - 33)] = color;
	Result[int2(xPos + 18, yPos - 33)] = color;
	Result[int2(xPos + 23, yPos - 33)] = color;
	Result[int2(xPos + 27, yPos - 33)] = color;
	Result[int2(xPos + 31, yPos - 33)] = color;
	Result[int2(xPos + 34, yPos - 33)] = color;
	Result[int2(xPos + 13, yPos - 34)] = color;
	Result[int2(xPos + 14, yPos - 34)] = color;
	Result[int2(xPos + 18, yPos - 34)] = color;
	Result[int2(xPos + 19, yPos - 34)] = color;
	Result[int2(xPos + 22, yPos - 34)] = color;
	Result[int2(xPos + 23, yPos - 34)] = color;
	Result[int2(xPos + 24, yPos - 34)] = color;
	Result[int2(xPos + 13, yPos - 35)] = color;
	Result[int2(xPos + 14, yPos - 35)] = color;
	Result[int2(xPos + 23, yPos - 35)] = color;
	Result[int2(xPos + 27, yPos - 35)] = color;
	Result[int2(xPos + 15, yPos - 36)] = color;
	Result[int2(xPos + 17, yPos - 36)] = color;
	Result[int2(xPos + 24, yPos - 36)] = color;
	Result[int2(xPos + 25, yPos - 36)] = color;
	Result[int2(xPos + 26, yPos - 36)] = color;
	Result[int2(xPos + 25, yPos - 37)] = color;
	Result[int2(xPos + 26, yPos - 37)] = color;
	Result[int2(xPos + 21, yPos - 38)] = color;
	Result[int2(xPos + 22, yPos - 38)] = color;
	Result[int2(xPos + 18, yPos - 39)] = color;
	Result[int2(xPos + 19, yPos - 39)] = color;
	Result[int2(xPos + 22, yPos - 39)] = color;
	Result[int2(xPos + 17, yPos - 40)] = color;
	Result[int2(xPos + 22, yPos - 40)] = color;
	Result[int2(xPos + 7, yPos - 42)] = color;
	Result[int2(xPos + 12, yPos - 42)] = color;
	Result[int2(xPos + 13, yPos - 42)] = color;
	Result[int2(xPos + 5, yPos - 43)] = color;
	Result[int2(xPos + 7, yPos - 43)] = color;
	Result[int2(xPos + 12, yPos - 43)] = color;
	Result[int2(xPos + 14, yPos - 43)] = color;
	Result[int2(xPos + 17, yPos - 43)] = color;
	Result[int2(xPos + 20, yPos - 43)] = color;
	Result[int2(xPos + 3, yPos - 44)] = color;
	Result[int2(xPos + 6, yPos - 44)] = color;
	Result[int2(xPos + 13, yPos - 44)] = color;
	Result[int2(xPos + 14, yPos - 44)] = color;
	Result[int2(xPos + 15, yPos - 44)] = color;
	Result[int2(xPos + 19, yPos - 44)] = color;
	Result[int2(xPos + 20, yPos - 44)] = color;
	Result[int2(xPos + 2, yPos - 45)] = color;
	Result[int2(xPos + 3, yPos - 45)] = color;
	Result[int2(xPos + 4, yPos - 45)] = color;
	Result[int2(xPos + 6, yPos - 45)] = color;
	Result[int2(xPos + 8, yPos - 45)] = color;
	Result[int2(xPos + 14, yPos - 45)] = color;
	Result[int2(xPos + 15, yPos - 45)] = color;
	Result[int2(xPos + 1, yPos - 46)] = color;
	Result[int2(xPos + 2, yPos - 46)] = color;
	Result[int2(xPos + 6, yPos - 46)] = color;
	Result[int2(xPos + 7, yPos - 46)] = color;
	Result[int2(xPos + 8, yPos - 46)] = color;
	Result[int2(xPos + 9, yPos - 46)] = color;
	Result[int2(xPos + 13, yPos - 46)] = color;
	Result[int2(xPos + 14, yPos - 46)] = color;
	Result[int2(xPos, yPos - 47)] = color;
	Result[int2(xPos + 1, yPos - 47)] = color;
	Result[int2(xPos + 7, yPos - 47)] = color;
	Result[int2(xPos + 9, yPos - 47)] = color;
	Result[int2(xPos + 11, yPos - 47)] = color;
	Result[int2(xPos + 12, yPos - 47)] = color;
	Result[int2(xPos + 13, yPos - 47)] = color;
	Result[int2(xPos, yPos - 48)] = color;
	Result[int2(xPos + 1, yPos - 48)] = color;
	Result[int2(xPos + 2, yPos - 48)] = color;
	Result[int2(xPos + 9, yPos - 48)] = color;
	Result[int2(xPos + 12, yPos - 48)] = color;
	Result[int2(xPos + 1, yPos - 49)] = color;
	Result[int2(xPos + 3, yPos - 49)] = color;
	Result[int2(xPos + 8, yPos - 49)] = color;
	Result[int2(xPos + 10, yPos - 49)] = color;
	Result[int2(xPos + 2, yPos - 50)] = color;
	Result[int2(xPos + 3, yPos - 50)] = color;
	Result[int2(xPos + 8, yPos - 50)] = color;
}