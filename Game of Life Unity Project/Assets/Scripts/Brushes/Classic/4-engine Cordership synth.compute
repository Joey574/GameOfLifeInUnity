#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 39, yPos)] = color;
	Result[int2(xPos + 40, yPos - 1)] = color;
	Result[int2(xPos + 41, yPos - 1)] = color;
	Result[int2(xPos + 39, yPos - 2)] = color;
	Result[int2(xPos + 40, yPos - 2)] = color;
	Result[int2(xPos + 77, yPos - 3)] = color;
	Result[int2(xPos + 77, yPos - 4)] = color;
	Result[int2(xPos + 79, yPos - 4)] = color;
	Result[int2(xPos + 77, yPos - 5)] = color;
	Result[int2(xPos + 78, yPos - 5)] = color;
	Result[int2(xPos + 33, yPos - 23)] = color;
	Result[int2(xPos + 34, yPos - 24)] = color;
	Result[int2(xPos + 32, yPos - 25)] = color;
	Result[int2(xPos + 33, yPos - 25)] = color;
	Result[int2(xPos + 34, yPos - 25)] = color;
	Result[int2(xPos + 71, yPos - 26)] = color;
	Result[int2(xPos + 69, yPos - 27)] = color;
	Result[int2(xPos + 70, yPos - 27)] = color;
	Result[int2(xPos + 70, yPos - 28)] = color;
	Result[int2(xPos + 71, yPos - 28)] = color;
	Result[int2(xPos + 25, yPos - 32)] = color;
	Result[int2(xPos + 23, yPos - 33)] = color;
	Result[int2(xPos + 25, yPos - 33)] = color;
	Result[int2(xPos + 24, yPos - 34)] = color;
	Result[int2(xPos + 25, yPos - 34)] = color;
	Result[int2(xPos + 80, yPos - 37)] = color;
	Result[int2(xPos + 81, yPos - 37)] = color;
	Result[int2(xPos + 82, yPos - 37)] = color;
	Result[int2(xPos + 80, yPos - 38)] = color;
	Result[int2(xPos, yPos - 39)] = color;
	Result[int2(xPos + 2, yPos - 39)] = color;
	Result[int2(xPos + 81, yPos - 39)] = color;
	Result[int2(xPos + 1, yPos - 40)] = color;
	Result[int2(xPos + 2, yPos - 40)] = color;
	Result[int2(xPos + 1, yPos - 41)] = color;
	Result[int2(xPos + 74, yPos - 59)] = color;
	Result[int2(xPos + 73, yPos - 60)] = color;
	Result[int2(xPos + 74, yPos - 60)] = color;
	Result[int2(xPos + 73, yPos - 61)] = color;
	Result[int2(xPos + 75, yPos - 61)] = color;
	Result[int2(xPos + 27, yPos - 69)] = color;
	Result[int2(xPos + 129, yPos - 69)] = color;
	Result[int2(xPos + 27, yPos - 70)] = color;
	Result[int2(xPos + 28, yPos - 70)] = color;
	Result[int2(xPos + 128, yPos - 70)] = color;
	Result[int2(xPos + 129, yPos - 70)] = color;
	Result[int2(xPos + 26, yPos - 71)] = color;
	Result[int2(xPos + 28, yPos - 71)] = color;
	Result[int2(xPos + 128, yPos - 71)] = color;
	Result[int2(xPos + 130, yPos - 71)] = color;
	Result[int2(xPos + 60, yPos - 73)] = color;
	Result[int2(xPos + 61, yPos - 73)] = color;
	Result[int2(xPos + 59, yPos - 74)] = color;
	Result[int2(xPos + 60, yPos - 74)] = color;
	Result[int2(xPos + 61, yPos - 75)] = color;
	Result[int2(xPos + 3, yPos - 77)] = color;
	Result[int2(xPos + 4, yPos - 77)] = color;
	Result[int2(xPos + 5, yPos - 77)] = color;
	Result[int2(xPos + 5, yPos - 78)] = color;
	Result[int2(xPos + 4, yPos - 79)] = color;
	Result[int2(xPos + 37, yPos - 80)] = color;
	Result[int2(xPos + 38, yPos - 80)] = color;
	Result[int2(xPos + 37, yPos - 81)] = color;
	Result[int2(xPos + 39, yPos - 81)] = color;
	Result[int2(xPos + 37, yPos - 82)] = color;
	Result[int2(xPos + 70, yPos - 128)] = color;
	Result[int2(xPos + 71, yPos - 128)] = color;
	Result[int2(xPos + 69, yPos - 129)] = color;
	Result[int2(xPos + 70, yPos - 129)] = color;
	Result[int2(xPos + 71, yPos - 130)] = color;
}