#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 5, yPos)] = color;
	Result[int2(xPos + 6, yPos)] = color;
	Result[int2(xPos + 7, yPos - 1)] = color;
	Result[int2(xPos + 9, yPos - 1)] = color;
	Result[int2(xPos + 4, yPos - 2)] = color;
	Result[int2(xPos + 8, yPos - 2)] = color;
	Result[int2(xPos + 10, yPos - 2)] = color;
	Result[int2(xPos + 11, yPos - 2)] = color;
	Result[int2(xPos + 5, yPos - 3)] = color;
	Result[int2(xPos + 6, yPos - 3)] = color;
	Result[int2(xPos + 7, yPos - 3)] = color;
	Result[int2(xPos + 8, yPos - 3)] = color;
	Result[int2(xPos + 9, yPos - 3)] = color;
	Result[int2(xPos + 7, yPos - 6)] = color;
	Result[int2(xPos + 6, yPos - 7)] = color;
	Result[int2(xPos + 8, yPos - 7)] = color;
	Result[int2(xPos + 2, yPos - 8)] = color;
	Result[int2(xPos + 5, yPos - 8)] = color;
	Result[int2(xPos + 1, yPos - 9)] = color;
	Result[int2(xPos + 2, yPos - 9)] = color;
	Result[int2(xPos + 5, yPos - 9)] = color;
	Result[int2(xPos + 1, yPos - 10)] = color;
	Result[int2(xPos + 5, yPos - 10)] = color;
	Result[int2(xPos + 5, yPos - 11)] = color;
	Result[int2(xPos + 9, yPos - 11)] = color;
	Result[int2(xPos + 6, yPos - 12)] = color;
	Result[int2(xPos + 8, yPos - 12)] = color;
	Result[int2(xPos + 8, yPos - 13)] = color;
	Result[int2(xPos + 4, yPos - 14)] = color;
	Result[int2(xPos + 6, yPos - 14)] = color;
	Result[int2(xPos + 7, yPos - 14)] = color;
	Result[int2(xPos + 3, yPos - 15)] = color;
	Result[int2(xPos + 8, yPos - 15)] = color;
	Result[int2(xPos + 3, yPos - 16)] = color;
	Result[int2(xPos + 7, yPos - 16)] = color;
	Result[int2(xPos + 2, yPos - 17)] = color;
	Result[int2(xPos + 2, yPos - 18)] = color;
	Result[int2(xPos + 3, yPos - 18)] = color;
	Result[int2(xPos + 2, yPos - 19)] = color;
	Result[int2(xPos + 3, yPos - 19)] = color;
	Result[int2(xPos + 6, yPos - 19)] = color;
	Result[int2(xPos + 7, yPos - 19)] = color;
	Result[int2(xPos + 6, yPos - 20)] = color;
	Result[int2(xPos + 7, yPos - 20)] = color;
	Result[int2(xPos + 5, yPos - 21)] = color;
	Result[int2(xPos + 8, yPos - 21)] = color;
	Result[int2(xPos + 6, yPos - 22)] = color;
	Result[int2(xPos + 7, yPos - 22)] = color;
	Result[int2(xPos + 9, yPos - 23)] = color;
	Result[int2(xPos + 6, yPos - 24)] = color;
	Result[int2(xPos + 8, yPos - 24)] = color;
	Result[int2(xPos + 6, yPos - 25)] = color;
	Result[int2(xPos + 10, yPos - 25)] = color;
	Result[int2(xPos + 11, yPos - 25)] = color;
	Result[int2(xPos + 7, yPos - 26)] = color;
	Result[int2(xPos + 8, yPos - 26)] = color;
	Result[int2(xPos + 9, yPos - 26)] = color;
	Result[int2(xPos + 10, yPos - 26)] = color;
	Result[int2(xPos + 4, yPos - 29)] = color;
	Result[int2(xPos + 5, yPos - 29)] = color;
	Result[int2(xPos + 6, yPos - 29)] = color;
	Result[int2(xPos + 7, yPos - 29)] = color;
	Result[int2(xPos + 9, yPos - 29)] = color;
	Result[int2(xPos + 4, yPos - 30)] = color;
	Result[int2(xPos + 10, yPos - 30)] = color;
	Result[int2(xPos + 10, yPos - 31)] = color;
	Result[int2(xPos + 4, yPos - 32)] = color;
	Result[int2(xPos + 9, yPos - 32)] = color;
	Result[int2(xPos + 4, yPos - 33)] = color;
	Result[int2(xPos + 5, yPos - 33)] = color;
	Result[int2(xPos + 6, yPos - 33)] = color;
	Result[int2(xPos + 7, yPos - 33)] = color;
	Result[int2(xPos + 8, yPos - 33)] = color;
	Result[int2(xPos + 9, yPos - 33)] = color;
	Result[int2(xPos + 4, yPos - 34)] = color;
	Result[int2(xPos + 7, yPos - 34)] = color;
	Result[int2(xPos + 8, yPos - 34)] = color;
	Result[int2(xPos + 4, yPos - 35)] = color;
	Result[int2(xPos + 4, yPos - 36)] = color;
	Result[int2(xPos + 4, yPos - 38)] = color;
	Result[int2(xPos + 3, yPos - 39)] = color;
	Result[int2(xPos + 5, yPos - 39)] = color;
	Result[int2(xPos + 3, yPos - 40)] = color;
	Result[int2(xPos + 6, yPos - 40)] = color;
	Result[int2(xPos + 7, yPos - 40)] = color;
	Result[int2(xPos + 8, yPos - 40)] = color;
	Result[int2(xPos + 9, yPos - 40)] = color;
	Result[int2(xPos + 3, yPos - 41)] = color;
	Result[int2(xPos + 5, yPos - 41)] = color;
	Result[int2(xPos + 6, yPos - 41)] = color;
	Result[int2(xPos + 7, yPos - 41)] = color;
	Result[int2(xPos + 10, yPos - 42)] = color;
	Result[int2(xPos + 5, yPos - 43)] = color;
	Result[int2(xPos + 6, yPos - 43)] = color;
	Result[int2(xPos + 10, yPos - 43)] = color;
	Result[int2(xPos + 10, yPos - 44)] = color;
	Result[int2(xPos + 1, yPos - 45)] = color;
	Result[int2(xPos + 2, yPos - 45)] = color;
	Result[int2(xPos + 4, yPos - 45)] = color;
	Result[int2(xPos + 1, yPos - 46)] = color;
	Result[int2(xPos + 2, yPos - 46)] = color;
	Result[int2(xPos + 5, yPos - 46)] = color;
	Result[int2(xPos + 2, yPos - 47)] = color;
	Result[int2(xPos + 4, yPos - 47)] = color;
	Result[int2(xPos + 6, yPos - 47)] = color;
	Result[int2(xPos + 5, yPos - 48)] = color;
	Result[int2(xPos + 6, yPos - 48)] = color;
	Result[int2(xPos + 7, yPos - 48)] = color;
	Result[int2(xPos + 4, yPos - 49)] = color;
	Result[int2(xPos + 5, yPos - 49)] = color;
	Result[int2(xPos + 6, yPos - 49)] = color;
	Result[int2(xPos + 5, yPos - 50)] = color;
	Result[int2(xPos + 8, yPos - 50)] = color;
	Result[int2(xPos + 5, yPos - 51)] = color;
	Result[int2(xPos + 6, yPos - 51)] = color;
	Result[int2(xPos + 9, yPos - 51)] = color;
	Result[int2(xPos + 9, yPos - 52)] = color;
	Result[int2(xPos + 6, yPos - 53)] = color;
	Result[int2(xPos + 8, yPos - 53)] = color;
	Result[int2(xPos + 10, yPos - 53)] = color;
	Result[int2(xPos + 6, yPos - 55)] = color;
	Result[int2(xPos + 7, yPos - 55)] = color;
	Result[int2(xPos + 6, yPos - 56)] = color;
	Result[int2(xPos + 7, yPos - 56)] = color;
	Result[int2(xPos + 5, yPos - 57)] = color;
	Result[int2(xPos + 7, yPos - 57)] = color;
	Result[int2(xPos + 8, yPos - 57)] = color;
	Result[int2(xPos + 6, yPos - 58)] = color;
	Result[int2(xPos + 7, yPos - 58)] = color;
	Result[int2(xPos + 8, yPos - 58)] = color;
	Result[int2(xPos + 8, yPos - 59)] = color;
	Result[int2(xPos + 8, yPos - 60)] = color;
	Result[int2(xPos + 10, yPos - 60)] = color;
	Result[int2(xPos + 5, yPos - 61)] = color;
	Result[int2(xPos + 6, yPos - 61)] = color;
	Result[int2(xPos + 7, yPos - 61)] = color;
	Result[int2(xPos + 6, yPos - 62)] = color;
	Result[int2(xPos + 7, yPos - 62)] = color;
	Result[int2(xPos + 9, yPos - 62)] = color;
	Result[int2(xPos + 10, yPos - 62)] = color;
	Result[int2(xPos + 9, yPos - 63)] = color;
	Result[int2(xPos + 7, yPos - 64)] = color;
	Result[int2(xPos + 8, yPos - 64)] = color;
	Result[int2(xPos + 8, yPos - 65)] = color;
	Result[int2(xPos + 5, yPos - 66)] = color;
	Result[int2(xPos + 6, yPos - 66)] = color;
	Result[int2(xPos + 7, yPos - 66)] = color;
	Result[int2(xPos + 5, yPos - 67)] = color;
	Result[int2(xPos + 9, yPos - 67)] = color;
	Result[int2(xPos + 5, yPos - 68)] = color;
	Result[int2(xPos + 6, yPos - 68)] = color;
	Result[int2(xPos + 6, yPos - 70)] = color;
	Result[int2(xPos + 6, yPos - 71)] = color;
	Result[int2(xPos + 8, yPos - 71)] = color;
	Result[int2(xPos + 2, yPos - 72)] = color;
	Result[int2(xPos + 3, yPos - 72)] = color;
	Result[int2(xPos + 4, yPos - 72)] = color;
	Result[int2(xPos + 7, yPos - 72)] = color;
	Result[int2(xPos + 8, yPos - 72)] = color;
	Result[int2(xPos + 9, yPos - 72)] = color;
	Result[int2(xPos + 1, yPos - 73)] = color;
	Result[int2(xPos + 5, yPos - 73)] = color;
	Result[int2(xPos + 6, yPos - 73)] = color;
	Result[int2(xPos + 8, yPos - 73)] = color;
	Result[int2(xPos + 9, yPos - 73)] = color;
	Result[int2(xPos + 5, yPos - 74)] = color;
	Result[int2(xPos + 6, yPos - 74)] = color;
	Result[int2(xPos + 7, yPos - 74)] = color;
	Result[int2(xPos + 8, yPos - 74)] = color;
	Result[int2(xPos + 9, yPos - 74)] = color;
	Result[int2(xPos + 2, yPos - 75)] = color;
	Result[int2(xPos + 4, yPos - 76)] = color;
	Result[int2(xPos + 6, yPos - 76)] = color;
	Result[int2(xPos + 6, yPos - 77)] = color;
	Result[int2(xPos + 7, yPos - 77)] = color;
	Result[int2(xPos + 4, yPos - 78)] = color;
	Result[int2(xPos + 5, yPos - 78)] = color;
	Result[int2(xPos + 6, yPos - 78)] = color;
	Result[int2(xPos + 3, yPos - 79)] = color;
	Result[int2(xPos + 5, yPos - 79)] = color;
	Result[int2(xPos + 6, yPos - 79)] = color;
	Result[int2(xPos + 2, yPos - 80)] = color;
	Result[int2(xPos + 3, yPos - 80)] = color;
	Result[int2(xPos + 5, yPos - 80)] = color;
	Result[int2(xPos + 7, yPos - 80)] = color;
	Result[int2(xPos + 8, yPos - 80)] = color;
	Result[int2(xPos + 2, yPos - 81)] = color;
	Result[int2(xPos + 7, yPos - 81)] = color;
	Result[int2(xPos + 8, yPos - 81)] = color;
	Result[int2(xPos + 9, yPos - 81)] = color;
	Result[int2(xPos + 1, yPos - 82)] = color;
	Result[int2(xPos + 2, yPos - 82)] = color;
	Result[int2(xPos + 3, yPos - 82)] = color;
	Result[int2(xPos + 10, yPos - 82)] = color;
	Result[int2(xPos, yPos - 83)] = color;
	Result[int2(xPos + 9, yPos - 83)] = color;
	Result[int2(xPos + 1, yPos - 84)] = color;
	Result[int2(xPos + 3, yPos - 84)] = color;
	Result[int2(xPos + 7, yPos - 84)] = color;
	Result[int2(xPos + 3, yPos - 85)] = color;
	Result[int2(xPos + 5, yPos - 85)] = color;
	Result[int2(xPos + 6, yPos - 85)] = color;
	Result[int2(xPos + 7, yPos - 87)] = color;
	Result[int2(xPos + 8, yPos - 87)] = color;
	Result[int2(xPos + 9, yPos - 87)] = color;
	Result[int2(xPos + 10, yPos - 87)] = color;
	Result[int2(xPos + 6, yPos - 88)] = color;
	Result[int2(xPos + 7, yPos - 88)] = color;
	Result[int2(xPos + 10, yPos - 88)] = color;
	Result[int2(xPos + 5, yPos - 89)] = color;
	Result[int2(xPos + 7, yPos - 89)] = color;
	Result[int2(xPos + 9, yPos - 89)] = color;
	Result[int2(xPos + 4, yPos - 90)] = color;
	Result[int2(xPos + 5, yPos - 90)] = color;
	Result[int2(xPos + 7, yPos - 90)] = color;
	Result[int2(xPos + 9, yPos - 90)] = color;
	Result[int2(xPos + 10, yPos - 90)] = color;
	Result[int2(xPos + 2, yPos - 91)] = color;
	Result[int2(xPos + 3, yPos - 91)] = color;
	Result[int2(xPos + 5, yPos - 91)] = color;
	Result[int2(xPos + 6, yPos - 91)] = color;
	Result[int2(xPos + 9, yPos - 91)] = color;
	Result[int2(xPos + 10, yPos - 91)] = color;
	Result[int2(xPos + 7, yPos - 92)] = color;
	Result[int2(xPos + 9, yPos - 92)] = color;
	Result[int2(xPos + 1, yPos - 93)] = color;
	Result[int2(xPos + 4, yPos - 93)] = color;
	Result[int2(xPos + 9, yPos - 93)] = color;
	Result[int2(xPos + 7, yPos - 94)] = color;
	Result[int2(xPos + 2, yPos - 95)] = color;
	Result[int2(xPos + 3, yPos - 95)] = color;
	Result[int2(xPos + 6, yPos - 95)] = color;
	Result[int2(xPos + 7, yPos - 95)] = color;
	Result[int2(xPos + 2, yPos - 96)] = color;
	Result[int2(xPos + 3, yPos - 96)] = color;
	Result[int2(xPos + 4, yPos - 96)] = color;
	Result[int2(xPos + 6, yPos - 96)] = color;
	Result[int2(xPos + 2, yPos - 97)] = color;
	Result[int2(xPos + 5, yPos - 97)] = color;
	Result[int2(xPos + 6, yPos - 97)] = color;
	Result[int2(xPos + 8, yPos - 97)] = color;
	Result[int2(xPos + 9, yPos - 97)] = color;
	Result[int2(xPos + 4, yPos - 98)] = color;
	Result[int2(xPos + 9, yPos - 98)] = color;
	Result[int2(xPos + 1, yPos - 99)] = color;
	Result[int2(xPos + 2, yPos - 99)] = color;
	Result[int2(xPos + 5, yPos - 99)] = color;
	Result[int2(xPos + 6, yPos - 99)] = color;
	Result[int2(xPos + 8, yPos - 99)] = color;
	Result[int2(xPos + 7, yPos - 101)] = color;
	Result[int2(xPos + 7, yPos - 102)] = color;
	Result[int2(xPos + 10, yPos - 102)] = color;
	Result[int2(xPos + 7, yPos - 103)] = color;
	Result[int2(xPos + 10, yPos - 103)] = color;
	Result[int2(xPos + 8, yPos - 104)] = color;
	Result[int2(xPos + 10, yPos - 104)] = color;
	Result[int2(xPos + 8, yPos - 105)] = color;
	Result[int2(xPos + 6, yPos - 106)] = color;
	Result[int2(xPos + 7, yPos - 106)] = color;
	Result[int2(xPos + 6, yPos - 107)] = color;
	Result[int2(xPos + 7, yPos - 107)] = color;
	Result[int2(xPos + 10, yPos - 107)] = color;
	Result[int2(xPos + 6, yPos - 108)] = color;
	Result[int2(xPos + 7, yPos - 108)] = color;
	Result[int2(xPos + 9, yPos - 108)] = color;
	Result[int2(xPos + 6, yPos - 109)] = color;
	Result[int2(xPos + 4, yPos - 110)] = color;
	Result[int2(xPos + 5, yPos - 110)] = color;
	Result[int2(xPos + 6, yPos - 110)] = color;
	Result[int2(xPos + 7, yPos - 110)] = color;
	Result[int2(xPos + 9, yPos - 111)] = color;
	Result[int2(xPos + 4, yPos - 112)] = color;
	Result[int2(xPos + 5, yPos - 112)] = color;
	Result[int2(xPos + 7, yPos - 113)] = color;
	Result[int2(xPos + 9, yPos - 113)] = color;
	Result[int2(xPos + 7, yPos - 114)] = color;
	Result[int2(xPos + 9, yPos - 114)] = color;
	Result[int2(xPos + 6, yPos - 115)] = color;
	Result[int2(xPos + 8, yPos - 115)] = color;
	Result[int2(xPos + 9, yPos - 115)] = color;
	Result[int2(xPos + 6, yPos - 116)] = color;
	Result[int2(xPos + 6, yPos - 117)] = color;
	Result[int2(xPos + 7, yPos - 119)] = color;
	Result[int2(xPos + 9, yPos - 119)] = color;
	Result[int2(xPos + 2, yPos - 120)] = color;
	Result[int2(xPos + 3, yPos - 120)] = color;
	Result[int2(xPos + 6, yPos - 120)] = color;
	Result[int2(xPos + 7, yPos - 120)] = color;
	Result[int2(xPos + 8, yPos - 120)] = color;
	Result[int2(xPos + 3, yPos - 121)] = color;
	Result[int2(xPos + 5, yPos - 121)] = color;
	Result[int2(xPos + 6, yPos - 121)] = color;
	Result[int2(xPos + 3, yPos - 122)] = color;
	Result[int2(xPos + 4, yPos - 122)] = color;
	Result[int2(xPos + 6, yPos - 122)] = color;
	Result[int2(xPos + 4, yPos - 123)] = color;
	Result[int2(xPos + 5, yPos - 123)] = color;
	Result[int2(xPos + 3, yPos - 124)] = color;
	Result[int2(xPos + 3, yPos - 125)] = color;
	Result[int2(xPos + 5, yPos - 125)] = color;
	Result[int2(xPos + 2, yPos - 126)] = color;
	Result[int2(xPos + 6, yPos - 126)] = color;
	Result[int2(xPos + 1, yPos - 127)] = color;
	Result[int2(xPos + 4, yPos - 127)] = color;
	Result[int2(xPos + 5, yPos - 127)] = color;
	Result[int2(xPos + 6, yPos - 127)] = color;
	Result[int2(xPos + 1, yPos - 128)] = color;
	Result[int2(xPos + 5, yPos - 130)] = color;
	Result[int2(xPos + 7, yPos - 130)] = color;
	Result[int2(xPos + 8, yPos - 130)] = color;
	Result[int2(xPos + 3, yPos - 131)] = color;
	Result[int2(xPos + 4, yPos - 131)] = color;
	Result[int2(xPos + 7, yPos - 131)] = color;
	Result[int2(xPos + 8, yPos - 131)] = color;
	Result[int2(xPos + 9, yPos - 131)] = color;
	Result[int2(xPos + 5, yPos - 132)] = color;
	Result[int2(xPos + 6, yPos - 132)] = color;
	Result[int2(xPos + 7, yPos - 132)] = color;
	Result[int2(xPos + 10, yPos - 132)] = color;
	Result[int2(xPos + 5, yPos - 133)] = color;
	Result[int2(xPos + 11, yPos - 133)] = color;
	Result[int2(xPos + 4, yPos - 134)] = color;
	Result[int2(xPos + 5, yPos - 134)] = color;
	Result[int2(xPos + 9, yPos - 134)] = color;
	Result[int2(xPos + 10, yPos - 134)] = color;
	Result[int2(xPos + 5, yPos - 135)] = color;
	Result[int2(xPos + 6, yPos - 135)] = color;
	Result[int2(xPos + 3, yPos - 136)] = color;
	Result[int2(xPos + 7, yPos - 136)] = color;
	Result[int2(xPos + 3, yPos - 137)] = color;
	Result[int2(xPos + 8, yPos - 137)] = color;
	Result[int2(xPos + 4, yPos - 138)] = color;
	Result[int2(xPos + 8, yPos - 138)] = color;
	Result[int2(xPos + 4, yPos - 139)] = color;
	Result[int2(xPos + 7, yPos - 139)] = color;
	Result[int2(xPos + 3, yPos - 141)] = color;
	Result[int2(xPos + 4, yPos - 141)] = color;
	Result[int2(xPos + 7, yPos - 141)] = color;
	Result[int2(xPos + 8, yPos - 141)] = color;
	Result[int2(xPos + 3, yPos - 142)] = color;
	Result[int2(xPos + 4, yPos - 142)] = color;
	Result[int2(xPos + 7, yPos - 142)] = color;
	Result[int2(xPos + 8, yPos - 142)] = color;
	Result[int2(xPos + 1, yPos - 143)] = color;
	Result[int2(xPos + 2, yPos - 143)] = color;
	Result[int2(xPos + 9, yPos - 143)] = color;
	Result[int2(xPos + 10, yPos - 143)] = color;
	Result[int2(xPos, yPos - 144)] = color;
	Result[int2(xPos + 2, yPos - 144)] = color;
	Result[int2(xPos + 3, yPos - 144)] = color;
	Result[int2(xPos + 8, yPos - 144)] = color;
	Result[int2(xPos + 9, yPos - 144)] = color;
	Result[int2(xPos + 11, yPos - 144)] = color;
	Result[int2(xPos, yPos - 145)] = color;
	Result[int2(xPos + 11, yPos - 145)] = color;
	Result[int2(xPos + 1, yPos - 146)] = color;
	Result[int2(xPos + 10, yPos - 146)] = color;
	Result[int2(xPos, yPos - 147)] = color;
	Result[int2(xPos + 1, yPos - 147)] = color;
	Result[int2(xPos + 4, yPos - 147)] = color;
	Result[int2(xPos + 5, yPos - 147)] = color;
	Result[int2(xPos + 6, yPos - 147)] = color;
	Result[int2(xPos + 7, yPos - 147)] = color;
	Result[int2(xPos + 10, yPos - 147)] = color;
	Result[int2(xPos + 11, yPos - 147)] = color;
	Result[int2(xPos + 1, yPos - 148)] = color;
	Result[int2(xPos + 3, yPos - 148)] = color;
	Result[int2(xPos + 8, yPos - 148)] = color;
	Result[int2(xPos + 10, yPos - 148)] = color;
	Result[int2(xPos + 2, yPos - 149)] = color;
	Result[int2(xPos + 3, yPos - 149)] = color;
	Result[int2(xPos + 8, yPos - 149)] = color;
	Result[int2(xPos + 9, yPos - 149)] = color;
	Result[int2(xPos + 1, yPos - 150)] = color;
	Result[int2(xPos + 5, yPos - 150)] = color;
	Result[int2(xPos + 6, yPos - 150)] = color;
	Result[int2(xPos + 10, yPos - 150)] = color;
	Result[int2(xPos + 1, yPos - 151)] = color;
	Result[int2(xPos + 10, yPos - 151)] = color;
	Result[int2(xPos, yPos - 152)] = color;
	Result[int2(xPos + 11, yPos - 152)] = color;
	Result[int2(xPos + 1, yPos - 153)] = color;
	Result[int2(xPos + 10, yPos - 153)] = color;
	Result[int2(xPos + 4, yPos - 155)] = color;
	Result[int2(xPos + 5, yPos - 155)] = color;
	Result[int2(xPos + 8, yPos - 155)] = color;
	Result[int2(xPos + 4, yPos - 156)] = color;
	Result[int2(xPos + 8, yPos - 156)] = color;
	Result[int2(xPos + 9, yPos - 156)] = color;
	Result[int2(xPos + 2, yPos - 157)] = color;
	Result[int2(xPos + 6, yPos - 157)] = color;
	Result[int2(xPos + 7, yPos - 157)] = color;
	Result[int2(xPos + 2, yPos - 158)] = color;
	Result[int2(xPos + 6, yPos - 158)] = color;
	Result[int2(xPos + 7, yPos - 158)] = color;
	Result[int2(xPos + 1, yPos - 159)] = color;
	Result[int2(xPos + 8, yPos - 159)] = color;
	Result[int2(xPos + 9, yPos - 159)] = color;
	Result[int2(xPos, yPos - 160)] = color;
	Result[int2(xPos + 3, yPos - 160)] = color;
	Result[int2(xPos + 6, yPos - 160)] = color;
	Result[int2(xPos + 7, yPos - 160)] = color;
	Result[int2(xPos + 8, yPos - 160)] = color;
	Result[int2(xPos + 9, yPos - 160)] = color;
	Result[int2(xPos + 1, yPos - 161)] = color;
	Result[int2(xPos + 2, yPos - 161)] = color;
	Result[int2(xPos + 5, yPos - 161)] = color;
	Result[int2(xPos + 9, yPos - 161)] = color;
	Result[int2(xPos + 6, yPos - 162)] = color;
}