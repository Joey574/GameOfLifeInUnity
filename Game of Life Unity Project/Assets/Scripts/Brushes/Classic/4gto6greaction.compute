#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + (2 * xMult), yPos)] = color;
	Result[int2(xPos + (1 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (59 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (59 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (65 * yMult))] = color;
}