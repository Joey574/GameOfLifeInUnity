#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 75, yPos)] = color;
	Result[int2(xPos + 76, yPos - 1)] = color;
	Result[int2(xPos + 74, yPos - 2)] = color;
	Result[int2(xPos + 75, yPos - 2)] = color;
	Result[int2(xPos + 76, yPos - 2)] = color;
	Result[int2(xPos + 109, yPos - 3)] = color;
	Result[int2(xPos + 107, yPos - 4)] = color;
	Result[int2(xPos + 108, yPos - 4)] = color;
	Result[int2(xPos + 108, yPos - 5)] = color;
	Result[int2(xPos + 109, yPos - 5)] = color;
	Result[int2(xPos, yPos - 24)] = color;
	Result[int2(xPos + 67, yPos - 24)] = color;
	Result[int2(xPos + 69, yPos - 24)] = color;
	Result[int2(xPos + 1, yPos - 25)] = color;
	Result[int2(xPos + 2, yPos - 25)] = color;
	Result[int2(xPos + 68, yPos - 25)] = color;
	Result[int2(xPos + 69, yPos - 25)] = color;
	Result[int2(xPos, yPos - 26)] = color;
	Result[int2(xPos + 1, yPos - 26)] = color;
	Result[int2(xPos + 68, yPos - 26)] = color;
	Result[int2(xPos + 101, yPos - 26)] = color;
	Result[int2(xPos + 100, yPos - 27)] = color;
	Result[int2(xPos + 100, yPos - 28)] = color;
	Result[int2(xPos + 101, yPos - 28)] = color;
	Result[int2(xPos + 102, yPos - 28)] = color;
	Result[int2(xPos + 32, yPos - 30)] = color;
	Result[int2(xPos + 33, yPos - 31)] = color;
	Result[int2(xPos + 31, yPos - 32)] = color;
	Result[int2(xPos + 32, yPos - 32)] = color;
	Result[int2(xPos + 33, yPos - 32)] = color;
	Result[int2(xPos + 112, yPos - 32)] = color;
	Result[int2(xPos + 111, yPos - 33)] = color;
	Result[int2(xPos + 112, yPos - 33)] = color;
	Result[int2(xPos + 63, yPos - 34)] = color;
	Result[int2(xPos + 111, yPos - 34)] = color;
	Result[int2(xPos + 113, yPos - 34)] = color;
	Result[int2(xPos + 64, yPos - 35)] = color;
	Result[int2(xPos + 62, yPos - 36)] = color;
	Result[int2(xPos + 63, yPos - 36)] = color;
	Result[int2(xPos + 64, yPos - 36)] = color;
	Result[int2(xPos + 104, yPos - 55)] = color;
	Result[int2(xPos + 105, yPos - 55)] = color;
	Result[int2(xPos + 104, yPos - 56)] = color;
	Result[int2(xPos + 106, yPos - 56)] = color;
	Result[int2(xPos + 104, yPos - 57)] = color;
	Result[int2(xPos + 159, yPos - 65)] = color;
	Result[int2(xPos + 160, yPos - 65)] = color;
	Result[int2(xPos + 159, yPos - 66)] = color;
	Result[int2(xPos + 161, yPos - 66)] = color;
	Result[int2(xPos + 159, yPos - 67)] = color;
	Result[int2(xPos + 65, yPos - 71)] = color;
	Result[int2(xPos + 66, yPos - 71)] = color;
	Result[int2(xPos + 66, yPos - 72)] = color;
	Result[int2(xPos + 67, yPos - 72)] = color;
	Result[int2(xPos + 65, yPos - 73)] = color;
	Result[int2(xPos + 98, yPos - 74)] = color;
	Result[int2(xPos + 97, yPos - 75)] = color;
	Result[int2(xPos + 98, yPos - 75)] = color;
	Result[int2(xPos + 97, yPos - 76)] = color;
	Result[int2(xPos + 99, yPos - 76)] = color;
	Result[int2(xPos + 34, yPos - 99)] = color;
	Result[int2(xPos + 35, yPos - 99)] = color;
	Result[int2(xPos + 35, yPos - 100)] = color;
	Result[int2(xPos + 36, yPos - 100)] = color;
	Result[int2(xPos + 34, yPos - 101)] = color;
	Result[int2(xPos + 99, yPos - 102)] = color;
	Result[int2(xPos + 98, yPos - 103)] = color;
	Result[int2(xPos + 99, yPos - 103)] = color;
	Result[int2(xPos + 98, yPos - 104)] = color;
	Result[int2(xPos + 100, yPos - 104)] = color;
	Result[int2(xPos + 130, yPos - 105)] = color;
	Result[int2(xPos + 131, yPos - 105)] = color;
	Result[int2(xPos + 132, yPos - 105)] = color;
	Result[int2(xPos + 130, yPos - 106)] = color;
	Result[int2(xPos + 131, yPos - 107)] = color;
	Result[int2(xPos + 3, yPos - 115)] = color;
	Result[int2(xPos + 4, yPos - 115)] = color;
	Result[int2(xPos + 2, yPos - 116)] = color;
	Result[int2(xPos + 4, yPos - 116)] = color;
	Result[int2(xPos + 4, yPos - 117)] = color;
	Result[int2(xPos + 89, yPos - 119)] = color;
	Result[int2(xPos + 90, yPos - 119)] = color;
	Result[int2(xPos + 91, yPos - 119)] = color;
	Result[int2(xPos + 89, yPos - 120)] = color;
	Result[int2(xPos + 90, yPos - 121)] = color;
	Result[int2(xPos + 131, yPos - 155)] = color;
	Result[int2(xPos + 132, yPos - 155)] = color;
	Result[int2(xPos + 130, yPos - 156)] = color;
	Result[int2(xPos + 131, yPos - 156)] = color;
	Result[int2(xPos + 132, yPos - 157)] = color;
}