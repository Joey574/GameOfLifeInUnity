#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (75 * xMult), yPos)] = color;
	Result[int2(xPos + (76 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (107 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos, yPos - (24 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos, yPos - (26 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (101 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (101 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (113 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (105 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (106 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (57 * yMult))] = color;
	Result[int2(xPos + (159 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (160 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (159 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (161 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (159 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (76 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (76 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (101 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (102 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (103 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (103 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (104 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (104 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (105 * yMult))] = color;
	Result[int2(xPos + (131 * xMult), yPos - (105 * yMult))] = color;
	Result[int2(xPos + (132 * xMult), yPos - (105 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (106 * yMult))] = color;
	Result[int2(xPos + (131 * xMult), yPos - (107 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (115 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (115 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (116 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (116 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (91 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (121 * yMult))] = color;
	Result[int2(xPos + (131 * xMult), yPos - (155 * yMult))] = color;
	Result[int2(xPos + (132 * xMult), yPos - (155 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (156 * yMult))] = color;
	Result[int2(xPos + (131 * xMult), yPos - (156 * yMult))] = color;
	Result[int2(xPos + (132 * xMult), yPos - (157 * yMult))] = color;
}