#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (117 * xMult), yPos)] = color;
	Result[int2(xPos + (119 * xMult), yPos)] = color;
	Result[int2(xPos + (117 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (118 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (118 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (107 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (114 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (113 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (106 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (107 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (106 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (107 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos, yPos - (29 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (113 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (113 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (45 * yMult))] = color;
}