#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 22)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 96)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 96)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 97)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 116)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 117)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 118)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 118)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 119)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 119)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 120)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 139)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 139)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 140)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 140)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 141)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 141)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 150)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 150)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 178)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 156)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 156)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 157)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 161)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 162)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 162)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 164)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 165)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 165)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 165)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 168)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 168)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 168)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 170)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 170)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 170)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 171)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 171)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 172)) * yMult)] = color;
}