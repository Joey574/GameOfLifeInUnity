#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 88, yPos)] = color;
	Result[int2(xPos + 90, yPos)] = color;
	Result[int2(xPos + 88, yPos - 1)] = color;
	Result[int2(xPos + 89, yPos - 1)] = color;
	Result[int2(xPos + 89, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 84, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 5)] = color;
	Result[int2(xPos + 2, yPos - 5)] = color;
	Result[int2(xPos + 3, yPos - 5)] = color;
	Result[int2(xPos + 85, yPos - 5)] = color;
	Result[int2(xPos + 86, yPos - 5)] = color;
	Result[int2(xPos + 52, yPos - 6)] = color;
	Result[int2(xPos + 53, yPos - 6)] = color;
	Result[int2(xPos + 84, yPos - 6)] = color;
	Result[int2(xPos + 85, yPos - 6)] = color;
	Result[int2(xPos + 92, yPos - 6)] = color;
	Result[int2(xPos + 93, yPos - 6)] = color;
	Result[int2(xPos + 127, yPos - 6)] = color;
	Result[int2(xPos + 132, yPos - 6)] = color;
	Result[int2(xPos + 133, yPos - 6)] = color;
	Result[int2(xPos + 1, yPos - 7)] = color;
	Result[int2(xPos + 51, yPos - 7)] = color;
	Result[int2(xPos + 53, yPos - 7)] = color;
	Result[int2(xPos + 81, yPos - 7)] = color;
	Result[int2(xPos + 82, yPos - 7)] = color;
	Result[int2(xPos + 91, yPos - 7)] = color;
	Result[int2(xPos + 93, yPos - 7)] = color;
	Result[int2(xPos + 126, yPos - 7)] = color;
	Result[int2(xPos + 128, yPos - 7)] = color;
	Result[int2(xPos + 131, yPos - 7)] = color;
	Result[int2(xPos + 133, yPos - 7)] = color;
	Result[int2(xPos + 1, yPos - 8)] = color;
	Result[int2(xPos + 2, yPos - 8)] = color;
	Result[int2(xPos + 52, yPos - 8)] = color;
	Result[int2(xPos + 80, yPos - 8)] = color;
	Result[int2(xPos + 82, yPos - 8)] = color;
	Result[int2(xPos + 92, yPos - 8)] = color;
	Result[int2(xPos + 105, yPos - 8)] = color;
	Result[int2(xPos + 127, yPos - 8)] = color;
	Result[int2(xPos + 132, yPos - 8)] = color;
	Result[int2(xPos, yPos - 9)] = color;
	Result[int2(xPos + 2, yPos - 9)] = color;
	Result[int2(xPos + 82, yPos - 9)] = color;
	Result[int2(xPos + 104, yPos - 9)] = color;
	Result[int2(xPos + 104, yPos - 10)] = color;
	Result[int2(xPos + 105, yPos - 10)] = color;
	Result[int2(xPos + 106, yPos - 10)] = color;
	Result[int2(xPos + 86, yPos - 11)] = color;
	Result[int2(xPos + 111, yPos - 11)] = color;
	Result[int2(xPos + 87, yPos - 12)] = color;
	Result[int2(xPos + 88, yPos - 12)] = color;
	Result[int2(xPos + 110, yPos - 12)] = color;
	Result[int2(xPos + 86, yPos - 13)] = color;
	Result[int2(xPos + 87, yPos - 13)] = color;
	Result[int2(xPos + 110, yPos - 13)] = color;
	Result[int2(xPos + 111, yPos - 13)] = color;
	Result[int2(xPos + 112, yPos - 13)] = color;
	Result[int2(xPos + 138, yPos - 13)] = color;
	Result[int2(xPos + 139, yPos - 13)] = color;
	Result[int2(xPos + 134, yPos - 14)] = color;
	Result[int2(xPos + 135, yPos - 14)] = color;
	Result[int2(xPos + 137, yPos - 14)] = color;
	Result[int2(xPos + 140, yPos - 14)] = color;
	Result[int2(xPos + 133, yPos - 15)] = color;
	Result[int2(xPos + 135, yPos - 15)] = color;
	Result[int2(xPos + 141, yPos - 15)] = color;
	Result[int2(xPos + 142, yPos - 15)] = color;
	Result[int2(xPos + 143, yPos - 15)] = color;
	Result[int2(xPos + 144, yPos - 15)] = color;
	Result[int2(xPos + 145, yPos - 15)] = color;
	Result[int2(xPos + 133, yPos - 16)] = color;
	Result[int2(xPos + 137, yPos - 16)] = color;
	Result[int2(xPos + 143, yPos - 16)] = color;
	Result[int2(xPos + 146, yPos - 16)] = color;
	Result[int2(xPos + 133, yPos - 17)] = color;
	Result[int2(xPos + 137, yPos - 17)] = color;
	Result[int2(xPos + 138, yPos - 17)] = color;
	Result[int2(xPos + 147, yPos - 17)] = color;
	Result[int2(xPos + 134, yPos - 18)] = color;
	Result[int2(xPos + 143, yPos - 18)] = color;
	Result[int2(xPos + 144, yPos - 18)] = color;
	Result[int2(xPos + 148, yPos - 18)] = color;
	Result[int2(xPos + 135, yPos - 19)] = color;
	Result[int2(xPos + 138, yPos - 19)] = color;
	Result[int2(xPos + 144, yPos - 19)] = color;
	Result[int2(xPos + 148, yPos - 19)] = color;
	Result[int2(xPos + 136, yPos - 20)] = color;
	Result[int2(xPos + 137, yPos - 20)] = color;
	Result[int2(xPos + 138, yPos - 20)] = color;
	Result[int2(xPos + 139, yPos - 20)] = color;
	Result[int2(xPos + 140, yPos - 20)] = color;
	Result[int2(xPos + 146, yPos - 20)] = color;
	Result[int2(xPos + 148, yPos - 20)] = color;
	Result[int2(xPos + 141, yPos - 21)] = color;
	Result[int2(xPos + 144, yPos - 21)] = color;
	Result[int2(xPos + 146, yPos - 21)] = color;
	Result[int2(xPos + 147, yPos - 21)] = color;
	Result[int2(xPos + 89, yPos - 22)] = color;
	Result[int2(xPos + 90, yPos - 22)] = color;
	Result[int2(xPos + 91, yPos - 22)] = color;
	Result[int2(xPos + 114, yPos - 22)] = color;
	Result[int2(xPos + 115, yPos - 22)] = color;
	Result[int2(xPos + 142, yPos - 22)] = color;
	Result[int2(xPos + 143, yPos - 22)] = color;
	Result[int2(xPos + 91, yPos - 23)] = color;
	Result[int2(xPos + 113, yPos - 23)] = color;
	Result[int2(xPos + 114, yPos - 23)] = color;
	Result[int2(xPos + 90, yPos - 24)] = color;
	Result[int2(xPos + 115, yPos - 24)] = color;
	Result[int2(xPos + 95, yPos - 25)] = color;
	Result[int2(xPos + 96, yPos - 25)] = color;
	Result[int2(xPos + 97, yPos - 25)] = color;
	Result[int2(xPos + 19, yPos - 26)] = color;
	Result[int2(xPos + 21, yPos - 26)] = color;
	Result[int2(xPos + 97, yPos - 26)] = color;
	Result[int2(xPos + 119, yPos - 26)] = color;
	Result[int2(xPos + 19, yPos - 27)] = color;
	Result[int2(xPos + 20, yPos - 27)] = color;
	Result[int2(xPos + 69, yPos - 27)] = color;
	Result[int2(xPos + 96, yPos - 27)] = color;
	Result[int2(xPos + 109, yPos - 27)] = color;
	Result[int2(xPos + 119, yPos - 27)] = color;
	Result[int2(xPos + 121, yPos - 27)] = color;
	Result[int2(xPos + 149, yPos - 27)] = color;
	Result[int2(xPos + 154, yPos - 27)] = color;
	Result[int2(xPos + 20, yPos - 28)] = color;
	Result[int2(xPos + 68, yPos - 28)] = color;
	Result[int2(xPos + 70, yPos - 28)] = color;
	Result[int2(xPos + 108, yPos - 28)] = color;
	Result[int2(xPos + 110, yPos - 28)] = color;
	Result[int2(xPos + 119, yPos - 28)] = color;
	Result[int2(xPos + 120, yPos - 28)] = color;
	Result[int2(xPos + 148, yPos - 28)] = color;
	Result[int2(xPos + 150, yPos - 28)] = color;
	Result[int2(xPos + 153, yPos - 28)] = color;
	Result[int2(xPos + 155, yPos - 28)] = color;
	Result[int2(xPos + 68, yPos - 29)] = color;
	Result[int2(xPos + 69, yPos - 29)] = color;
	Result[int2(xPos + 108, yPos - 29)] = color;
	Result[int2(xPos + 109, yPos - 29)] = color;
	Result[int2(xPos + 116, yPos - 29)] = color;
	Result[int2(xPos + 117, yPos - 29)] = color;
	Result[int2(xPos + 148, yPos - 29)] = color;
	Result[int2(xPos + 149, yPos - 29)] = color;
	Result[int2(xPos + 154, yPos - 29)] = color;
	Result[int2(xPos + 18, yPos - 30)] = color;
	Result[int2(xPos + 19, yPos - 30)] = color;
	Result[int2(xPos + 20, yPos - 30)] = color;
	Result[int2(xPos + 115, yPos - 30)] = color;
	Result[int2(xPos + 116, yPos - 30)] = color;
	Result[int2(xPos + 20, yPos - 31)] = color;
	Result[int2(xPos + 117, yPos - 31)] = color;
	Result[int2(xPos + 19, yPos - 32)] = color;
	Result[int2(xPos + 112, yPos - 33)] = color;
	Result[int2(xPos + 112, yPos - 34)] = color;
	Result[int2(xPos + 113, yPos - 34)] = color;
	Result[int2(xPos + 111, yPos - 35)] = color;
	Result[int2(xPos + 113, yPos - 35)] = color;
}