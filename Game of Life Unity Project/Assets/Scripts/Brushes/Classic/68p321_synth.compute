#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 102, yPos)] = color;
	Result[int2(xPos + 1, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos + 100, yPos - 1)] = color;
	Result[int2(xPos + 101, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 101, yPos - 2)] = color;
	Result[int2(xPos + 102, yPos - 2)] = color;
	Result[int2(xPos + 6, yPos - 4)] = color;
	Result[int2(xPos + 96, yPos - 4)] = color;
	Result[int2(xPos + 4, yPos - 5)] = color;
	Result[int2(xPos + 6, yPos - 5)] = color;
	Result[int2(xPos + 12, yPos - 5)] = color;
	Result[int2(xPos + 90, yPos - 5)] = color;
	Result[int2(xPos + 96, yPos - 5)] = color;
	Result[int2(xPos + 98, yPos - 5)] = color;
	Result[int2(xPos + 5, yPos - 6)] = color;
	Result[int2(xPos + 6, yPos - 6)] = color;
	Result[int2(xPos + 13, yPos - 6)] = color;
	Result[int2(xPos + 14, yPos - 6)] = color;
	Result[int2(xPos + 88, yPos - 6)] = color;
	Result[int2(xPos + 89, yPos - 6)] = color;
	Result[int2(xPos + 96, yPos - 6)] = color;
	Result[int2(xPos + 97, yPos - 6)] = color;
	Result[int2(xPos + 12, yPos - 7)] = color;
	Result[int2(xPos + 13, yPos - 7)] = color;
	Result[int2(xPos + 89, yPos - 7)] = color;
	Result[int2(xPos + 90, yPos - 7)] = color;
	Result[int2(xPos + 20, yPos - 15)] = color;
	Result[int2(xPos + 31, yPos - 15)] = color;
	Result[int2(xPos + 82, yPos - 15)] = color;
	Result[int2(xPos + 21, yPos - 16)] = color;
	Result[int2(xPos + 32, yPos - 16)] = color;
	Result[int2(xPos + 81, yPos - 16)] = color;
	Result[int2(xPos + 19, yPos - 17)] = color;
	Result[int2(xPos + 20, yPos - 17)] = color;
	Result[int2(xPos + 21, yPos - 17)] = color;
	Result[int2(xPos + 30, yPos - 17)] = color;
	Result[int2(xPos + 31, yPos - 17)] = color;
	Result[int2(xPos + 32, yPos - 17)] = color;
	Result[int2(xPos + 81, yPos - 17)] = color;
	Result[int2(xPos + 82, yPos - 17)] = color;
	Result[int2(xPos + 83, yPos - 17)] = color;
	Result[int2(xPos + 66, yPos - 20)] = color;
	Result[int2(xPos + 65, yPos - 21)] = color;
	Result[int2(xPos + 65, yPos - 22)] = color;
	Result[int2(xPos + 66, yPos - 22)] = color;
	Result[int2(xPos + 67, yPos - 22)] = color;
	Result[int2(xPos + 41, yPos - 32)] = color;
	Result[int2(xPos + 39, yPos - 33)] = color;
	Result[int2(xPos + 41, yPos - 33)] = color;
	Result[int2(xPos + 40, yPos - 34)] = color;
	Result[int2(xPos + 41, yPos - 34)] = color;
	Result[int2(xPos + 56, yPos - 37)] = color;
	Result[int2(xPos + 56, yPos - 38)] = color;
	Result[int2(xPos + 58, yPos - 38)] = color;
	Result[int2(xPos + 45, yPos - 39)] = color;
	Result[int2(xPos + 46, yPos - 39)] = color;
	Result[int2(xPos + 56, yPos - 39)] = color;
	Result[int2(xPos + 57, yPos - 39)] = color;
	Result[int2(xPos + 44, yPos - 40)] = color;
	Result[int2(xPos + 46, yPos - 40)] = color;
	Result[int2(xPos + 46, yPos - 41)] = color;
	Result[int2(xPos + 61, yPos - 44)] = color;
	Result[int2(xPos + 62, yPos - 44)] = color;
	Result[int2(xPos + 61, yPos - 45)] = color;
	Result[int2(xPos + 63, yPos - 45)] = color;
	Result[int2(xPos + 61, yPos - 46)] = color;
	Result[int2(xPos + 21, yPos - 54)] = color;
	Result[int2(xPos + 22, yPos - 54)] = color;
	Result[int2(xPos + 23, yPos - 54)] = color;
	Result[int2(xPos + 79, yPos - 54)] = color;
	Result[int2(xPos + 80, yPos - 54)] = color;
	Result[int2(xPos + 81, yPos - 54)] = color;
	Result[int2(xPos + 23, yPos - 55)] = color;
	Result[int2(xPos + 79, yPos - 55)] = color;
	Result[int2(xPos + 22, yPos - 56)] = color;
	Result[int2(xPos + 35, yPos - 56)] = color;
	Result[int2(xPos + 36, yPos - 56)] = color;
	Result[int2(xPos + 37, yPos - 56)] = color;
	Result[int2(xPos + 80, yPos - 56)] = color;
	Result[int2(xPos + 37, yPos - 57)] = color;
	Result[int2(xPos + 36, yPos - 58)] = color;
	Result[int2(xPos + 22, yPos - 59)] = color;
	Result[int2(xPos + 23, yPos - 59)] = color;
	Result[int2(xPos + 79, yPos - 59)] = color;
	Result[int2(xPos + 80, yPos - 59)] = color;
	Result[int2(xPos + 21, yPos - 60)] = color;
	Result[int2(xPos + 23, yPos - 60)] = color;
	Result[int2(xPos + 79, yPos - 60)] = color;
	Result[int2(xPos + 81, yPos - 60)] = color;
	Result[int2(xPos + 23, yPos - 61)] = color;
	Result[int2(xPos + 70, yPos - 61)] = color;
	Result[int2(xPos + 71, yPos - 61)] = color;
	Result[int2(xPos + 72, yPos - 61)] = color;
	Result[int2(xPos + 79, yPos - 61)] = color;
	Result[int2(xPos + 70, yPos - 62)] = color;
	Result[int2(xPos + 71, yPos - 63)] = color;
	Result[int2(xPos + 5, yPos - 72)] = color;
	Result[int2(xPos + 6, yPos - 72)] = color;
	Result[int2(xPos + 96, yPos - 72)] = color;
	Result[int2(xPos + 97, yPos - 72)] = color;
	Result[int2(xPos + 4, yPos - 73)] = color;
	Result[int2(xPos + 6, yPos - 73)] = color;
	Result[int2(xPos + 96, yPos - 73)] = color;
	Result[int2(xPos + 98, yPos - 73)] = color;
	Result[int2(xPos + 6, yPos - 74)] = color;
	Result[int2(xPos + 96, yPos - 74)] = color;
	Result[int2(xPos, yPos - 76)] = color;
	Result[int2(xPos + 1, yPos - 76)] = color;
	Result[int2(xPos + 101, yPos - 76)] = color;
	Result[int2(xPos + 102, yPos - 76)] = color;
	Result[int2(xPos + 1, yPos - 77)] = color;
	Result[int2(xPos + 2, yPos - 77)] = color;
	Result[int2(xPos + 100, yPos - 77)] = color;
	Result[int2(xPos + 101, yPos - 77)] = color;
	Result[int2(xPos, yPos - 78)] = color;
	Result[int2(xPos + 102, yPos - 78)] = color;
}