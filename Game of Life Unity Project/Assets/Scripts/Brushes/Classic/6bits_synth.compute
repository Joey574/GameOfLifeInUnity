#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 58, yPos)] = color;
	Result[int2(xPos + 57, yPos - 1)] = color;
	Result[int2(xPos + 57, yPos - 2)] = color;
	Result[int2(xPos + 58, yPos - 2)] = color;
	Result[int2(xPos + 59, yPos - 2)] = color;
	Result[int2(xPos + 107, yPos - 4)] = color;
	Result[int2(xPos + 157, yPos - 4)] = color;
	Result[int2(xPos + 207, yPos - 4)] = color;
	Result[int2(xPos + 107, yPos - 5)] = color;
	Result[int2(xPos + 157, yPos - 5)] = color;
	Result[int2(xPos + 207, yPos - 5)] = color;
	Result[int2(xPos + 106, yPos - 6)] = color;
	Result[int2(xPos + 108, yPos - 6)] = color;
	Result[int2(xPos + 156, yPos - 6)] = color;
	Result[int2(xPos + 158, yPos - 6)] = color;
	Result[int2(xPos + 206, yPos - 6)] = color;
	Result[int2(xPos + 208, yPos - 6)] = color;
	Result[int2(xPos + 53, yPos - 7)] = color;
	Result[int2(xPos + 54, yPos - 7)] = color;
	Result[int2(xPos + 61, yPos - 7)] = color;
	Result[int2(xPos + 107, yPos - 7)] = color;
	Result[int2(xPos + 157, yPos - 7)] = color;
	Result[int2(xPos + 207, yPos - 7)] = color;
	Result[int2(xPos + 52, yPos - 8)] = color;
	Result[int2(xPos + 54, yPos - 8)] = color;
	Result[int2(xPos + 59, yPos - 8)] = color;
	Result[int2(xPos + 60, yPos - 8)] = color;
	Result[int2(xPos + 107, yPos - 8)] = color;
	Result[int2(xPos + 157, yPos - 8)] = color;
	Result[int2(xPos + 207, yPos - 8)] = color;
	Result[int2(xPos + 54, yPos - 9)] = color;
	Result[int2(xPos + 60, yPos - 9)] = color;
	Result[int2(xPos + 61, yPos - 9)] = color;
	Result[int2(xPos + 107, yPos - 9)] = color;
	Result[int2(xPos + 157, yPos - 9)] = color;
	Result[int2(xPos + 207, yPos - 9)] = color;
	Result[int2(xPos + 107, yPos - 10)] = color;
	Result[int2(xPos + 157, yPos - 10)] = color;
	Result[int2(xPos + 207, yPos - 10)] = color;
	Result[int2(xPos + 106, yPos - 11)] = color;
	Result[int2(xPos + 108, yPos - 11)] = color;
	Result[int2(xPos + 156, yPos - 11)] = color;
	Result[int2(xPos + 158, yPos - 11)] = color;
	Result[int2(xPos + 206, yPos - 11)] = color;
	Result[int2(xPos + 208, yPos - 11)] = color;
	Result[int2(xPos + 107, yPos - 12)] = color;
	Result[int2(xPos + 157, yPos - 12)] = color;
	Result[int2(xPos + 207, yPos - 12)] = color;
	Result[int2(xPos + 107, yPos - 13)] = color;
	Result[int2(xPos + 141, yPos - 13)] = color;
	Result[int2(xPos + 157, yPos - 13)] = color;
	Result[int2(xPos + 207, yPos - 13)] = color;
	Result[int2(xPos + 142, yPos - 14)] = color;
	Result[int2(xPos + 143, yPos - 14)] = color;
	Result[int2(xPos + 135, yPos - 15)] = color;
	Result[int2(xPos + 141, yPos - 15)] = color;
	Result[int2(xPos + 142, yPos - 15)] = color;
	Result[int2(xPos + 136, yPos - 16)] = color;
	Result[int2(xPos + 134, yPos - 17)] = color;
	Result[int2(xPos + 135, yPos - 17)] = color;
	Result[int2(xPos + 136, yPos - 17)] = color;
	Result[int2(xPos + 188, yPos - 18)] = color;
	Result[int2(xPos + 191, yPos - 18)] = color;
	Result[int2(xPos + 196, yPos - 18)] = color;
	Result[int2(xPos + 199, yPos - 18)] = color;
	Result[int2(xPos + 186, yPos - 19)] = color;
	Result[int2(xPos + 187, yPos - 19)] = color;
	Result[int2(xPos + 188, yPos - 19)] = color;
	Result[int2(xPos + 191, yPos - 19)] = color;
	Result[int2(xPos + 192, yPos - 19)] = color;
	Result[int2(xPos + 193, yPos - 19)] = color;
	Result[int2(xPos + 194, yPos - 19)] = color;
	Result[int2(xPos + 195, yPos - 19)] = color;
	Result[int2(xPos + 196, yPos - 19)] = color;
	Result[int2(xPos + 199, yPos - 19)] = color;
	Result[int2(xPos + 200, yPos - 19)] = color;
	Result[int2(xPos + 201, yPos - 19)] = color;
	Result[int2(xPos + 1, yPos - 20)] = color;
	Result[int2(xPos + 188, yPos - 20)] = color;
	Result[int2(xPos + 191, yPos - 20)] = color;
	Result[int2(xPos + 196, yPos - 20)] = color;
	Result[int2(xPos + 199, yPos - 20)] = color;
	Result[int2(xPos + 2, yPos - 21)] = color;
	Result[int2(xPos, yPos - 22)] = color;
	Result[int2(xPos + 1, yPos - 22)] = color;
	Result[int2(xPos + 2, yPos - 22)] = color;
	Result[int2(xPos + 144, yPos - 23)] = color;
	Result[int2(xPos + 145, yPos - 23)] = color;
	Result[int2(xPos + 157, yPos - 23)] = color;
	Result[int2(xPos + 207, yPos - 23)] = color;
	Result[int2(xPos + 18, yPos - 24)] = color;
	Result[int2(xPos + 23, yPos - 24)] = color;
	Result[int2(xPos + 68, yPos - 24)] = color;
	Result[int2(xPos + 73, yPos - 24)] = color;
	Result[int2(xPos + 118, yPos - 24)] = color;
	Result[int2(xPos + 123, yPos - 24)] = color;
	Result[int2(xPos + 144, yPos - 24)] = color;
	Result[int2(xPos + 146, yPos - 24)] = color;
	Result[int2(xPos + 158, yPos - 24)] = color;
	Result[int2(xPos + 159, yPos - 24)] = color;
	Result[int2(xPos + 168, yPos - 24)] = color;
	Result[int2(xPos + 173, yPos - 24)] = color;
	Result[int2(xPos + 208, yPos - 24)] = color;
	Result[int2(xPos + 209, yPos - 24)] = color;
	Result[int2(xPos + 218, yPos - 24)] = color;
	Result[int2(xPos + 223, yPos - 24)] = color;
	Result[int2(xPos + 7, yPos - 25)] = color;
	Result[int2(xPos + 8, yPos - 25)] = color;
	Result[int2(xPos + 16, yPos - 25)] = color;
	Result[int2(xPos + 17, yPos - 25)] = color;
	Result[int2(xPos + 19, yPos - 25)] = color;
	Result[int2(xPos + 20, yPos - 25)] = color;
	Result[int2(xPos + 21, yPos - 25)] = color;
	Result[int2(xPos + 22, yPos - 25)] = color;
	Result[int2(xPos + 24, yPos - 25)] = color;
	Result[int2(xPos + 25, yPos - 25)] = color;
	Result[int2(xPos + 66, yPos - 25)] = color;
	Result[int2(xPos + 67, yPos - 25)] = color;
	Result[int2(xPos + 69, yPos - 25)] = color;
	Result[int2(xPos + 70, yPos - 25)] = color;
	Result[int2(xPos + 71, yPos - 25)] = color;
	Result[int2(xPos + 72, yPos - 25)] = color;
	Result[int2(xPos + 74, yPos - 25)] = color;
	Result[int2(xPos + 75, yPos - 25)] = color;
	Result[int2(xPos + 116, yPos - 25)] = color;
	Result[int2(xPos + 117, yPos - 25)] = color;
	Result[int2(xPos + 119, yPos - 25)] = color;
	Result[int2(xPos + 120, yPos - 25)] = color;
	Result[int2(xPos + 121, yPos - 25)] = color;
	Result[int2(xPos + 122, yPos - 25)] = color;
	Result[int2(xPos + 124, yPos - 25)] = color;
	Result[int2(xPos + 125, yPos - 25)] = color;
	Result[int2(xPos + 144, yPos - 25)] = color;
	Result[int2(xPos + 157, yPos - 25)] = color;
	Result[int2(xPos + 158, yPos - 25)] = color;
	Result[int2(xPos + 166, yPos - 25)] = color;
	Result[int2(xPos + 167, yPos - 25)] = color;
	Result[int2(xPos + 169, yPos - 25)] = color;
	Result[int2(xPos + 170, yPos - 25)] = color;
	Result[int2(xPos + 171, yPos - 25)] = color;
	Result[int2(xPos + 172, yPos - 25)] = color;
	Result[int2(xPos + 174, yPos - 25)] = color;
	Result[int2(xPos + 175, yPos - 25)] = color;
	Result[int2(xPos + 207, yPos - 25)] = color;
	Result[int2(xPos + 208, yPos - 25)] = color;
	Result[int2(xPos + 216, yPos - 25)] = color;
	Result[int2(xPos + 217, yPos - 25)] = color;
	Result[int2(xPos + 219, yPos - 25)] = color;
	Result[int2(xPos + 220, yPos - 25)] = color;
	Result[int2(xPos + 221, yPos - 25)] = color;
	Result[int2(xPos + 222, yPos - 25)] = color;
	Result[int2(xPos + 224, yPos - 25)] = color;
	Result[int2(xPos + 225, yPos - 25)] = color;
	Result[int2(xPos + 7, yPos - 26)] = color;
	Result[int2(xPos + 9, yPos - 26)] = color;
	Result[int2(xPos + 18, yPos - 26)] = color;
	Result[int2(xPos + 23, yPos - 26)] = color;
	Result[int2(xPos + 68, yPos - 26)] = color;
	Result[int2(xPos + 73, yPos - 26)] = color;
	Result[int2(xPos + 118, yPos - 26)] = color;
	Result[int2(xPos + 123, yPos - 26)] = color;
	Result[int2(xPos + 168, yPos - 26)] = color;
	Result[int2(xPos + 173, yPos - 26)] = color;
	Result[int2(xPos + 218, yPos - 26)] = color;
	Result[int2(xPos + 223, yPos - 26)] = color;
	Result[int2(xPos + 1, yPos - 27)] = color;
	Result[int2(xPos + 7, yPos - 27)] = color;
	Result[int2(xPos, yPos - 28)] = color;
	Result[int2(xPos + 1, yPos - 28)] = color;
	Result[int2(xPos, yPos - 29)] = color;
	Result[int2(xPos + 2, yPos - 29)] = color;
}