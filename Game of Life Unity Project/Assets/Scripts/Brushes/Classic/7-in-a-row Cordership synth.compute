#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 56, yPos)] = color;
	Result[int2(xPos + 58, yPos)] = color;
	Result[int2(xPos + 57, yPos - 1)] = color;
	Result[int2(xPos + 58, yPos - 1)] = color;
	Result[int2(xPos + 57, yPos - 2)] = color;
	Result[int2(xPos + 170, yPos - 2)] = color;
	Result[int2(xPos + 169, yPos - 3)] = color;
	Result[int2(xPos + 169, yPos - 4)] = color;
	Result[int2(xPos + 170, yPos - 4)] = color;
	Result[int2(xPos + 171, yPos - 4)] = color;
	Result[int2(xPos + 64, yPos - 31)] = color;
	Result[int2(xPos + 62, yPos - 32)] = color;
	Result[int2(xPos + 64, yPos - 32)] = color;
	Result[int2(xPos + 63, yPos - 33)] = color;
	Result[int2(xPos + 64, yPos - 33)] = color;
	Result[int2(xPos + 153, yPos - 34)] = color;
	Result[int2(xPos + 155, yPos - 34)] = color;
	Result[int2(xPos + 153, yPos - 35)] = color;
	Result[int2(xPos + 154, yPos - 35)] = color;
	Result[int2(xPos + 154, yPos - 36)] = color;
	Result[int2(xPos + 68, yPos - 62)] = color;
	Result[int2(xPos + 66, yPos - 63)] = color;
	Result[int2(xPos + 68, yPos - 63)] = color;
	Result[int2(xPos + 67, yPos - 64)] = color;
	Result[int2(xPos + 68, yPos - 64)] = color;
	Result[int2(xPos + 125, yPos - 65)] = color;
	Result[int2(xPos + 127, yPos - 65)] = color;
	Result[int2(xPos + 125, yPos - 66)] = color;
	Result[int2(xPos + 126, yPos - 66)] = color;
	Result[int2(xPos + 126, yPos - 67)] = color;
	Result[int2(xPos, yPos - 88)] = color;
	Result[int2(xPos + 67, yPos - 88)] = color;
	Result[int2(xPos + 69, yPos - 88)] = color;
	Result[int2(xPos + 1, yPos - 89)] = color;
	Result[int2(xPos + 2, yPos - 89)] = color;
	Result[int2(xPos + 68, yPos - 89)] = color;
	Result[int2(xPos + 69, yPos - 89)] = color;
	Result[int2(xPos, yPos - 90)] = color;
	Result[int2(xPos + 1, yPos - 90)] = color;
	Result[int2(xPos + 68, yPos - 90)] = color;
	Result[int2(xPos + 99, yPos - 90)] = color;
	Result[int2(xPos + 98, yPos - 91)] = color;
	Result[int2(xPos + 98, yPos - 92)] = color;
	Result[int2(xPos + 99, yPos - 92)] = color;
	Result[int2(xPos + 100, yPos - 92)] = color;
	Result[int2(xPos + 32, yPos - 94)] = color;
	Result[int2(xPos + 33, yPos - 95)] = color;
	Result[int2(xPos + 31, yPos - 96)] = color;
	Result[int2(xPos + 32, yPos - 96)] = color;
	Result[int2(xPos + 33, yPos - 96)] = color;
	Result[int2(xPos + 63, yPos - 98)] = color;
	Result[int2(xPos + 64, yPos - 99)] = color;
	Result[int2(xPos + 62, yPos - 100)] = color;
	Result[int2(xPos + 63, yPos - 100)] = color;
	Result[int2(xPos + 64, yPos - 100)] = color;
	Result[int2(xPos + 173, yPos - 111)] = color;
	Result[int2(xPos + 174, yPos - 111)] = color;
	Result[int2(xPos + 173, yPos - 112)] = color;
	Result[int2(xPos + 175, yPos - 112)] = color;
	Result[int2(xPos + 173, yPos - 113)] = color;
	Result[int2(xPos + 102, yPos - 117)] = color;
	Result[int2(xPos + 103, yPos - 117)] = color;
	Result[int2(xPos + 102, yPos - 118)] = color;
	Result[int2(xPos + 104, yPos - 118)] = color;
	Result[int2(xPos + 102, yPos - 119)] = color;
	Result[int2(xPos + 129, yPos - 119)] = color;
	Result[int2(xPos + 130, yPos - 119)] = color;
	Result[int2(xPos + 128, yPos - 120)] = color;
	Result[int2(xPos + 129, yPos - 120)] = color;
	Result[int2(xPos + 157, yPos - 120)] = color;
	Result[int2(xPos + 158, yPos - 120)] = color;
	Result[int2(xPos + 130, yPos - 121)] = color;
	Result[int2(xPos + 156, yPos - 121)] = color;
	Result[int2(xPos + 157, yPos - 121)] = color;
	Result[int2(xPos + 158, yPos - 122)] = color;
	Result[int2(xPos + 65, yPos - 133)] = color;
	Result[int2(xPos + 66, yPos - 133)] = color;
	Result[int2(xPos + 66, yPos - 134)] = color;
	Result[int2(xPos + 67, yPos - 134)] = color;
	Result[int2(xPos + 65, yPos - 135)] = color;
	Result[int2(xPos + 96, yPos - 136)] = color;
	Result[int2(xPos + 95, yPos - 137)] = color;
	Result[int2(xPos + 96, yPos - 137)] = color;
	Result[int2(xPos + 95, yPos - 138)] = color;
	Result[int2(xPos + 97, yPos - 138)] = color;
	Result[int2(xPos + 211, yPos - 153)] = color;
	Result[int2(xPos + 210, yPos - 154)] = color;
	Result[int2(xPos + 211, yPos - 154)] = color;
	Result[int2(xPos + 210, yPos - 155)] = color;
	Result[int2(xPos + 212, yPos - 155)] = color;
	Result[int2(xPos + 34, yPos - 161)] = color;
	Result[int2(xPos + 35, yPos - 161)] = color;
	Result[int2(xPos + 35, yPos - 162)] = color;
	Result[int2(xPos + 36, yPos - 162)] = color;
	Result[int2(xPos + 34, yPos - 163)] = color;
	Result[int2(xPos + 97, yPos - 164)] = color;
	Result[int2(xPos + 162, yPos - 164)] = color;
	Result[int2(xPos + 163, yPos - 164)] = color;
	Result[int2(xPos + 96, yPos - 165)] = color;
	Result[int2(xPos + 97, yPos - 165)] = color;
	Result[int2(xPos + 162, yPos - 165)] = color;
	Result[int2(xPos + 164, yPos - 165)] = color;
	Result[int2(xPos + 96, yPos - 166)] = color;
	Result[int2(xPos + 98, yPos - 166)] = color;
	Result[int2(xPos + 162, yPos - 166)] = color;
	Result[int2(xPos + 140, yPos - 170)] = color;
	Result[int2(xPos + 141, yPos - 170)] = color;
	Result[int2(xPos + 142, yPos - 170)] = color;
	Result[int2(xPos + 140, yPos - 171)] = color;
	Result[int2(xPos + 141, yPos - 172)] = color;
	Result[int2(xPos + 3, yPos - 177)] = color;
	Result[int2(xPos + 4, yPos - 177)] = color;
	Result[int2(xPos + 2, yPos - 178)] = color;
	Result[int2(xPos + 4, yPos - 178)] = color;
	Result[int2(xPos + 4, yPos - 179)] = color;
	Result[int2(xPos + 87, yPos - 181)] = color;
	Result[int2(xPos + 88, yPos - 181)] = color;
	Result[int2(xPos + 89, yPos - 181)] = color;
	Result[int2(xPos + 87, yPos - 182)] = color;
	Result[int2(xPos + 88, yPos - 183)] = color;
	Result[int2(xPos + 130, yPos - 218)] = color;
	Result[int2(xPos + 131, yPos - 218)] = color;
	Result[int2(xPos + 129, yPos - 219)] = color;
	Result[int2(xPos + 130, yPos - 219)] = color;
	Result[int2(xPos + 131, yPos - 220)] = color;
}