#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 2)] = color;
	Result[int2(xPos, yPos - 3)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 2, yPos - 4)] = color;
	Result[int2(xPos, yPos - 20)] = color;
	Result[int2(xPos + 1, yPos - 20)] = color;
	Result[int2(xPos + 2, yPos - 20)] = color;
	Result[int2(xPos + 21, yPos - 20)] = color;
	Result[int2(xPos + 40, yPos - 20)] = color;
	Result[int2(xPos + 41, yPos - 20)] = color;
	Result[int2(xPos + 1, yPos - 21)] = color;
	Result[int2(xPos + 4, yPos - 21)] = color;
	Result[int2(xPos + 21, yPos - 21)] = color;
	Result[int2(xPos + 24, yPos - 21)] = color;
	Result[int2(xPos + 42, yPos - 21)] = color;
	Result[int2(xPos + 5, yPos - 22)] = color;
	Result[int2(xPos + 20, yPos - 22)] = color;
	Result[int2(xPos + 22, yPos - 22)] = color;
	Result[int2(xPos + 24, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 22)] = color;
	Result[int2(xPos + 2, yPos - 23)] = color;
	Result[int2(xPos + 4, yPos - 23)] = color;
	Result[int2(xPos + 43, yPos - 23)] = color;
	Result[int2(xPos + 44, yPos - 23)] = color;
	Result[int2(xPos + 45, yPos - 23)] = color;
	Result[int2(xPos + 46, yPos - 23)] = color;
	Result[int2(xPos + 24, yPos - 24)] = color;
	Result[int2(xPos + 25, yPos - 24)] = color;
	Result[int2(xPos, yPos - 40)] = color;
	Result[int2(xPos + 1, yPos - 40)] = color;
	Result[int2(xPos + 2, yPos - 40)] = color;
	Result[int2(xPos, yPos - 41)] = color;
	Result[int2(xPos + 2, yPos - 41)] = color;
	Result[int2(xPos, yPos - 42)] = color;
	Result[int2(xPos + 1, yPos - 42)] = color;
	Result[int2(xPos + 2, yPos - 42)] = color;
	Result[int2(xPos + 2, yPos - 43)] = color;
	Result[int2(xPos + 2, yPos - 44)] = color;
	Result[int2(xPos, yPos - 60)] = color;
	Result[int2(xPos + 1, yPos - 60)] = color;
	Result[int2(xPos + 20, yPos - 60)] = color;
	Result[int2(xPos + 42, yPos - 60)] = color;
	Result[int2(xPos + 20, yPos - 61)] = color;
	Result[int2(xPos + 21, yPos - 61)] = color;
	Result[int2(xPos + 40, yPos - 61)] = color;
	Result[int2(xPos + 1, yPos - 62)] = color;
	Result[int2(xPos + 41, yPos - 62)] = color;
	Result[int2(xPos + 2, yPos - 63)] = color;
	Result[int2(xPos + 3, yPos - 63)] = color;
	Result[int2(xPos + 5, yPos - 63)] = color;
	Result[int2(xPos + 7, yPos - 63)] = color;
	Result[int2(xPos + 21, yPos - 63)] = color;
	Result[int2(xPos + 22, yPos - 63)] = color;
	Result[int2(xPos + 23, yPos - 63)] = color;
	Result[int2(xPos + 41, yPos - 63)] = color;
	Result[int2(xPos + 24, yPos - 64)] = color;
	Result[int2(xPos + 4, yPos - 65)] = color;
	Result[int2(xPos + 6, yPos - 65)] = color;
	Result[int2(xPos + 22, yPos - 65)] = color;
	Result[int2(xPos + 23, yPos - 65)] = color;
	Result[int2(xPos + 40, yPos - 65)] = color;
	Result[int2(xPos + 42, yPos - 65)] = color;
	Result[int2(xPos + 43, yPos - 65)] = color;
	Result[int2(xPos + 44, yPos - 65)] = color;
	Result[int2(xPos + 43, yPos - 67)] = color;
}