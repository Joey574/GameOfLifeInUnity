#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 63, yPos)] = color;
	Result[int2(xPos + 63, yPos - 1)] = color;
	Result[int2(xPos + 64, yPos - 1)] = color;
	Result[int2(xPos + 67, yPos - 1)] = color;
	Result[int2(xPos + 68, yPos - 1)] = color;
	Result[int2(xPos + 62, yPos - 2)] = color;
	Result[int2(xPos + 64, yPos - 2)] = color;
	Result[int2(xPos + 67, yPos - 2)] = color;
	Result[int2(xPos + 69, yPos - 2)] = color;
	Result[int2(xPos + 48, yPos - 3)] = color;
	Result[int2(xPos + 50, yPos - 3)] = color;
	Result[int2(xPos + 67, yPos - 3)] = color;
	Result[int2(xPos + 75, yPos - 3)] = color;
	Result[int2(xPos + 77, yPos - 3)] = color;
	Result[int2(xPos + 49, yPos - 4)] = color;
	Result[int2(xPos + 50, yPos - 4)] = color;
	Result[int2(xPos + 75, yPos - 4)] = color;
	Result[int2(xPos + 76, yPos - 4)] = color;
	Result[int2(xPos + 49, yPos - 5)] = color;
	Result[int2(xPos + 76, yPos - 5)] = color;
	Result[int2(xPos + 65, yPos - 6)] = color;
	Result[int2(xPos + 66, yPos - 6)] = color;
	Result[int2(xPos + 64, yPos - 7)] = color;
	Result[int2(xPos + 66, yPos - 7)] = color;
	Result[int2(xPos + 66, yPos - 8)] = color;
	Result[int2(xPos + 92, yPos - 8)] = color;
	Result[int2(xPos + 93, yPos - 8)] = color;
	Result[int2(xPos + 91, yPos - 9)] = color;
	Result[int2(xPos + 94, yPos - 9)] = color;
	Result[int2(xPos + 91, yPos - 10)] = color;
	Result[int2(xPos + 92, yPos - 10)] = color;
	Result[int2(xPos + 93, yPos - 10)] = color;
	Result[int2(xPos + 94, yPos - 10)] = color;
	Result[int2(xPos + 89, yPos - 11)] = color;
	Result[int2(xPos + 91, yPos - 11)] = color;
	Result[int2(xPos + 94, yPos - 11)] = color;
	Result[int2(xPos + 96, yPos - 11)] = color;
	Result[int2(xPos + 57, yPos - 12)] = color;
	Result[int2(xPos + 62, yPos - 12)] = color;
	Result[int2(xPos + 63, yPos - 12)] = color;
	Result[int2(xPos + 88, yPos - 12)] = color;
	Result[int2(xPos + 97, yPos - 12)] = color;
	Result[int2(xPos + 58, yPos - 13)] = color;
	Result[int2(xPos + 59, yPos - 13)] = color;
	Result[int2(xPos + 62, yPos - 13)] = color;
	Result[int2(xPos + 64, yPos - 13)] = color;
	Result[int2(xPos + 88, yPos - 13)] = color;
	Result[int2(xPos + 97, yPos - 13)] = color;
	Result[int2(xPos + 57, yPos - 14)] = color;
	Result[int2(xPos + 58, yPos - 14)] = color;
	Result[int2(xPos + 62, yPos - 14)] = color;
	Result[int2(xPos + 89, yPos - 14)] = color;
	Result[int2(xPos + 91, yPos - 14)] = color;
	Result[int2(xPos + 94, yPos - 14)] = color;
	Result[int2(xPos + 96, yPos - 14)] = color;
	Result[int2(xPos + 91, yPos - 15)] = color;
	Result[int2(xPos + 92, yPos - 15)] = color;
	Result[int2(xPos + 93, yPos - 15)] = color;
	Result[int2(xPos + 94, yPos - 15)] = color;
	Result[int2(xPos + 91, yPos - 16)] = color;
	Result[int2(xPos + 94, yPos - 16)] = color;
	Result[int2(xPos + 92, yPos - 17)] = color;
	Result[int2(xPos + 93, yPos - 17)] = color;
	Result[int2(xPos + 52, yPos - 18)] = color;
	Result[int2(xPos + 54, yPos - 18)] = color;
	Result[int2(xPos + 53, yPos - 19)] = color;
	Result[int2(xPos + 54, yPos - 19)] = color;
	Result[int2(xPos + 53, yPos - 20)] = color;
	Result[int2(xPos + 62, yPos - 21)] = color;
	Result[int2(xPos + 64, yPos - 21)] = color;
	Result[int2(xPos + 63, yPos - 22)] = color;
	Result[int2(xPos + 64, yPos - 22)] = color;
	Result[int2(xPos + 46, yPos - 23)] = color;
	Result[int2(xPos + 47, yPos - 23)] = color;
	Result[int2(xPos + 63, yPos - 23)] = color;
	Result[int2(xPos + 78, yPos - 23)] = color;
	Result[int2(xPos + 79, yPos - 23)] = color;
	Result[int2(xPos + 47, yPos - 24)] = color;
	Result[int2(xPos + 48, yPos - 24)] = color;
	Result[int2(xPos + 77, yPos - 24)] = color;
	Result[int2(xPos + 78, yPos - 24)] = color;
	Result[int2(xPos + 46, yPos - 25)] = color;
	Result[int2(xPos + 79, yPos - 25)] = color;
	Result[int2(xPos + 62, yPos - 26)] = color;
	Result[int2(xPos + 62, yPos - 27)] = color;
	Result[int2(xPos + 63, yPos - 27)] = color;
	Result[int2(xPos + 61, yPos - 28)] = color;
	Result[int2(xPos + 63, yPos - 28)] = color;
	Result[int2(xPos + 52, yPos - 34)] = color;
	Result[int2(xPos + 53, yPos - 34)] = color;
	Result[int2(xPos + 51, yPos - 35)] = color;
	Result[int2(xPos + 53, yPos - 35)] = color;
	Result[int2(xPos + 53, yPos - 36)] = color;
	Result[int2(xPos + 72, yPos - 49)] = color;
	Result[int2(xPos + 72, yPos - 50)] = color;
	Result[int2(xPos + 74, yPos - 50)] = color;
	Result[int2(xPos + 72, yPos - 51)] = color;
	Result[int2(xPos + 73, yPos - 51)] = color;
	Result[int2(xPos + 62, yPos - 57)] = color;
	Result[int2(xPos + 64, yPos - 57)] = color;
	Result[int2(xPos + 62, yPos - 58)] = color;
	Result[int2(xPos + 63, yPos - 58)] = color;
	Result[int2(xPos + 63, yPos - 59)] = color;
	Result[int2(xPos + 79, yPos - 60)] = color;
	Result[int2(xPos + 77, yPos - 61)] = color;
	Result[int2(xPos + 78, yPos - 61)] = color;
	Result[int2(xPos + 62, yPos - 62)] = color;
	Result[int2(xPos + 78, yPos - 62)] = color;
	Result[int2(xPos + 79, yPos - 62)] = color;
	Result[int2(xPos + 48, yPos - 63)] = color;
	Result[int2(xPos + 50, yPos - 63)] = color;
	Result[int2(xPos + 61, yPos - 63)] = color;
	Result[int2(xPos + 62, yPos - 63)] = color;
	Result[int2(xPos + 49, yPos - 64)] = color;
	Result[int2(xPos + 50, yPos - 64)] = color;
	Result[int2(xPos + 61, yPos - 64)] = color;
	Result[int2(xPos + 63, yPos - 64)] = color;
	Result[int2(xPos + 49, yPos - 65)] = color;
	Result[int2(xPos + 72, yPos - 65)] = color;
	Result[int2(xPos + 71, yPos - 66)] = color;
	Result[int2(xPos + 72, yPos - 66)] = color;
	Result[int2(xPos + 71, yPos - 67)] = color;
	Result[int2(xPos + 73, yPos - 67)] = color;
	Result[int2(xPos + 92, yPos - 68)] = color;
	Result[int2(xPos + 93, yPos - 68)] = color;
	Result[int2(xPos + 91, yPos - 69)] = color;
	Result[int2(xPos + 94, yPos - 69)] = color;
	Result[int2(xPos + 91, yPos - 70)] = color;
	Result[int2(xPos + 92, yPos - 70)] = color;
	Result[int2(xPos + 93, yPos - 70)] = color;
	Result[int2(xPos + 94, yPos - 70)] = color;
	Result[int2(xPos + 32, yPos - 71)] = color;
	Result[int2(xPos + 33, yPos - 71)] = color;
	Result[int2(xPos + 62, yPos - 71)] = color;
	Result[int2(xPos + 63, yPos - 71)] = color;
	Result[int2(xPos + 89, yPos - 71)] = color;
	Result[int2(xPos + 91, yPos - 71)] = color;
	Result[int2(xPos + 94, yPos - 71)] = color;
	Result[int2(xPos + 96, yPos - 71)] = color;
	Result[int2(xPos + 1, yPos - 72)] = color;
	Result[int2(xPos + 3, yPos - 72)] = color;
	Result[int2(xPos + 31, yPos - 72)] = color;
	Result[int2(xPos + 34, yPos - 72)] = color;
	Result[int2(xPos + 61, yPos - 72)] = color;
	Result[int2(xPos + 64, yPos - 72)] = color;
	Result[int2(xPos + 88, yPos - 72)] = color;
	Result[int2(xPos + 97, yPos - 72)] = color;
	Result[int2(xPos + 2, yPos - 73)] = color;
	Result[int2(xPos + 3, yPos - 73)] = color;
	Result[int2(xPos + 31, yPos - 73)] = color;
	Result[int2(xPos + 34, yPos - 73)] = color;
	Result[int2(xPos + 61, yPos - 73)] = color;
	Result[int2(xPos + 64, yPos - 73)] = color;
	Result[int2(xPos + 88, yPos - 73)] = color;
	Result[int2(xPos + 97, yPos - 73)] = color;
	Result[int2(xPos + 2, yPos - 74)] = color;
	Result[int2(xPos + 32, yPos - 74)] = color;
	Result[int2(xPos + 33, yPos - 74)] = color;
	Result[int2(xPos + 62, yPos - 74)] = color;
	Result[int2(xPos + 63, yPos - 74)] = color;
	Result[int2(xPos + 89, yPos - 74)] = color;
	Result[int2(xPos + 91, yPos - 74)] = color;
	Result[int2(xPos + 94, yPos - 74)] = color;
	Result[int2(xPos + 96, yPos - 74)] = color;
	Result[int2(xPos + 91, yPos - 75)] = color;
	Result[int2(xPos + 92, yPos - 75)] = color;
	Result[int2(xPos + 93, yPos - 75)] = color;
	Result[int2(xPos + 94, yPos - 75)] = color;
	Result[int2(xPos + 1, yPos - 76)] = color;
	Result[int2(xPos + 2, yPos - 76)] = color;
	Result[int2(xPos + 91, yPos - 76)] = color;
	Result[int2(xPos + 94, yPos - 76)] = color;
	Result[int2(xPos, yPos - 77)] = color;
	Result[int2(xPos + 2, yPos - 77)] = color;
	Result[int2(xPos + 92, yPos - 77)] = color;
	Result[int2(xPos + 93, yPos - 77)] = color;
	Result[int2(xPos + 2, yPos - 78)] = color;
	Result[int2(xPos + 52, yPos - 78)] = color;
	Result[int2(xPos + 54, yPos - 78)] = color;
	Result[int2(xPos + 53, yPos - 79)] = color;
	Result[int2(xPos + 54, yPos - 79)] = color;
	Result[int2(xPos + 53, yPos - 80)] = color;
	Result[int2(xPos + 76, yPos - 80)] = color;
	Result[int2(xPos + 62, yPos - 81)] = color;
	Result[int2(xPos + 64, yPos - 81)] = color;
	Result[int2(xPos + 75, yPos - 81)] = color;
	Result[int2(xPos + 76, yPos - 81)] = color;
	Result[int2(xPos + 63, yPos - 82)] = color;
	Result[int2(xPos + 64, yPos - 82)] = color;
	Result[int2(xPos + 75, yPos - 82)] = color;
	Result[int2(xPos + 77, yPos - 82)] = color;
	Result[int2(xPos + 46, yPos - 83)] = color;
	Result[int2(xPos + 47, yPos - 83)] = color;
	Result[int2(xPos + 63, yPos - 83)] = color;
	Result[int2(xPos + 47, yPos - 84)] = color;
	Result[int2(xPos + 48, yPos - 84)] = color;
	Result[int2(xPos + 46, yPos - 85)] = color;
	Result[int2(xPos + 62, yPos - 86)] = color;
	Result[int2(xPos + 62, yPos - 87)] = color;
	Result[int2(xPos + 63, yPos - 87)] = color;
	Result[int2(xPos + 61, yPos - 88)] = color;
	Result[int2(xPos + 63, yPos - 88)] = color;
	Result[int2(xPos + 52, yPos - 94)] = color;
	Result[int2(xPos + 53, yPos - 94)] = color;
	Result[int2(xPos + 51, yPos - 95)] = color;
	Result[int2(xPos + 53, yPos - 95)] = color;
	Result[int2(xPos + 53, yPos - 96)] = color;
}