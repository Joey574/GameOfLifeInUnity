#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 81)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 91)) * yMult)] = color;
}