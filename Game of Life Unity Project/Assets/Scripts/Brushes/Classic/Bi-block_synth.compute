#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 81, yPos)] = color;
	Result[int2(xPos + 43, yPos - 1)] = color;
	Result[int2(xPos + 81, yPos - 1)] = color;
	Result[int2(xPos + 82, yPos - 1)] = color;
	Result[int2(xPos + 3, yPos - 2)] = color;
	Result[int2(xPos + 42, yPos - 2)] = color;
	Result[int2(xPos + 80, yPos - 2)] = color;
	Result[int2(xPos + 82, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 3)] = color;
	Result[int2(xPos + 3, yPos - 3)] = color;
	Result[int2(xPos + 23, yPos - 3)] = color;
	Result[int2(xPos + 24, yPos - 3)] = color;
	Result[int2(xPos + 42, yPos - 3)] = color;
	Result[int2(xPos + 43, yPos - 3)] = color;
	Result[int2(xPos + 44, yPos - 3)] = color;
	Result[int2(xPos + 63, yPos - 3)] = color;
	Result[int2(xPos + 64, yPos - 3)] = color;
	Result[int2(xPos + 85, yPos - 3)] = color;
	Result[int2(xPos + 86, yPos - 3)] = color;
	Result[int2(xPos + 87, yPos - 3)] = color;
	Result[int2(xPos + 103, yPos - 3)] = color;
	Result[int2(xPos + 104, yPos - 3)] = color;
	Result[int2(xPos + 2, yPos - 4)] = color;
	Result[int2(xPos + 3, yPos - 4)] = color;
	Result[int2(xPos + 23, yPos - 4)] = color;
	Result[int2(xPos + 24, yPos - 4)] = color;
	Result[int2(xPos + 39, yPos - 4)] = color;
	Result[int2(xPos + 40, yPos - 4)] = color;
	Result[int2(xPos + 63, yPos - 4)] = color;
	Result[int2(xPos + 64, yPos - 4)] = color;
	Result[int2(xPos + 85, yPos - 4)] = color;
	Result[int2(xPos + 103, yPos - 4)] = color;
	Result[int2(xPos + 104, yPos - 4)] = color;
	Result[int2(xPos + 38, yPos - 5)] = color;
	Result[int2(xPos + 40, yPos - 5)] = color;
	Result[int2(xPos + 86, yPos - 5)] = color;
	Result[int2(xPos + 2, yPos - 6)] = color;
	Result[int2(xPos + 3, yPos - 6)] = color;
	Result[int2(xPos + 23, yPos - 6)] = color;
	Result[int2(xPos + 24, yPos - 6)] = color;
	Result[int2(xPos + 40, yPos - 6)] = color;
	Result[int2(xPos + 44, yPos - 6)] = color;
	Result[int2(xPos + 63, yPos - 6)] = color;
	Result[int2(xPos + 64, yPos - 6)] = color;
	Result[int2(xPos + 83, yPos - 6)] = color;
	Result[int2(xPos + 84, yPos - 6)] = color;
	Result[int2(xPos + 103, yPos - 6)] = color;
	Result[int2(xPos + 104, yPos - 6)] = color;
	Result[int2(xPos + 1, yPos - 7)] = color;
	Result[int2(xPos + 3, yPos - 7)] = color;
	Result[int2(xPos + 23, yPos - 7)] = color;
	Result[int2(xPos + 24, yPos - 7)] = color;
	Result[int2(xPos + 43, yPos - 7)] = color;
	Result[int2(xPos + 44, yPos - 7)] = color;
	Result[int2(xPos + 63, yPos - 7)] = color;
	Result[int2(xPos + 64, yPos - 7)] = color;
	Result[int2(xPos + 82, yPos - 7)] = color;
	Result[int2(xPos + 84, yPos - 7)] = color;
	Result[int2(xPos + 103, yPos - 7)] = color;
	Result[int2(xPos + 104, yPos - 7)] = color;
	Result[int2(xPos + 3, yPos - 8)] = color;
	Result[int2(xPos + 43, yPos - 8)] = color;
	Result[int2(xPos + 45, yPos - 8)] = color;
	Result[int2(xPos + 84, yPos - 8)] = color;
	Result[int2(xPos + 81, yPos - 27)] = color;
	Result[int2(xPos + 82, yPos - 28)] = color;
	Result[int2(xPos + 80, yPos - 29)] = color;
	Result[int2(xPos + 81, yPos - 29)] = color;
	Result[int2(xPos + 82, yPos - 29)] = color;
	Result[int2(xPos + 84, yPos - 30)] = color;
	Result[int2(xPos, yPos - 31)] = color;
	Result[int2(xPos + 10, yPos - 31)] = color;
	Result[int2(xPos + 11, yPos - 31)] = color;
	Result[int2(xPos + 39, yPos - 31)] = color;
	Result[int2(xPos + 48, yPos - 31)] = color;
	Result[int2(xPos + 83, yPos - 31)] = color;
	Result[int2(xPos + 1, yPos - 32)] = color;
	Result[int2(xPos + 2, yPos - 32)] = color;
	Result[int2(xPos + 7, yPos - 32)] = color;
	Result[int2(xPos + 10, yPos - 32)] = color;
	Result[int2(xPos + 12, yPos - 32)] = color;
	Result[int2(xPos + 23, yPos - 32)] = color;
	Result[int2(xPos + 24, yPos - 32)] = color;
	Result[int2(xPos + 40, yPos - 32)] = color;
	Result[int2(xPos + 41, yPos - 32)] = color;
	Result[int2(xPos + 46, yPos - 32)] = color;
	Result[int2(xPos + 47, yPos - 32)] = color;
	Result[int2(xPos + 63, yPos - 32)] = color;
	Result[int2(xPos + 64, yPos - 32)] = color;
	Result[int2(xPos + 83, yPos - 32)] = color;
	Result[int2(xPos + 84, yPos - 32)] = color;
	Result[int2(xPos + 85, yPos - 32)] = color;
	Result[int2(xPos + 103, yPos - 32)] = color;
	Result[int2(xPos + 104, yPos - 32)] = color;
	Result[int2(xPos, yPos - 33)] = color;
	Result[int2(xPos + 1, yPos - 33)] = color;
	Result[int2(xPos + 5, yPos - 33)] = color;
	Result[int2(xPos + 7, yPos - 33)] = color;
	Result[int2(xPos + 10, yPos - 33)] = color;
	Result[int2(xPos + 23, yPos - 33)] = color;
	Result[int2(xPos + 24, yPos - 33)] = color;
	Result[int2(xPos + 39, yPos - 33)] = color;
	Result[int2(xPos + 40, yPos - 33)] = color;
	Result[int2(xPos + 47, yPos - 33)] = color;
	Result[int2(xPos + 48, yPos - 33)] = color;
	Result[int2(xPos + 63, yPos - 33)] = color;
	Result[int2(xPos + 64, yPos - 33)] = color;
	Result[int2(xPos + 103, yPos - 33)] = color;
	Result[int2(xPos + 104, yPos - 33)] = color;
	Result[int2(xPos + 6, yPos - 34)] = color;
	Result[int2(xPos + 7, yPos - 34)] = color;
	Result[int2(xPos + 36, yPos - 34)] = color;
	Result[int2(xPos + 37, yPos - 34)] = color;
	Result[int2(xPos + 50, yPos - 34)] = color;
	Result[int2(xPos + 51, yPos - 34)] = color;
	Result[int2(xPos + 23, yPos - 35)] = color;
	Result[int2(xPos + 24, yPos - 35)] = color;
	Result[int2(xPos + 35, yPos - 35)] = color;
	Result[int2(xPos + 37, yPos - 35)] = color;
	Result[int2(xPos + 50, yPos - 35)] = color;
	Result[int2(xPos + 52, yPos - 35)] = color;
	Result[int2(xPos + 63, yPos - 35)] = color;
	Result[int2(xPos + 64, yPos - 35)] = color;
	Result[int2(xPos + 103, yPos - 35)] = color;
	Result[int2(xPos + 104, yPos - 35)] = color;
	Result[int2(xPos + 23, yPos - 36)] = color;
	Result[int2(xPos + 24, yPos - 36)] = color;
	Result[int2(xPos + 37, yPos - 36)] = color;
	Result[int2(xPos + 50, yPos - 36)] = color;
	Result[int2(xPos + 63, yPos - 36)] = color;
	Result[int2(xPos + 64, yPos - 36)] = color;
	Result[int2(xPos + 83, yPos - 36)] = color;
	Result[int2(xPos + 84, yPos - 36)] = color;
	Result[int2(xPos + 85, yPos - 36)] = color;
	Result[int2(xPos + 103, yPos - 36)] = color;
	Result[int2(xPos + 104, yPos - 36)] = color;
	Result[int2(xPos + 83, yPos - 37)] = color;
	Result[int2(xPos + 84, yPos - 38)] = color;
	Result[int2(xPos + 80, yPos - 39)] = color;
	Result[int2(xPos + 81, yPos - 39)] = color;
	Result[int2(xPos + 82, yPos - 39)] = color;
	Result[int2(xPos + 82, yPos - 40)] = color;
	Result[int2(xPos + 81, yPos - 41)] = color;
	Result[int2(xPos + 43, yPos - 62)] = color;
	Result[int2(xPos + 41, yPos - 63)] = color;
	Result[int2(xPos + 43, yPos - 63)] = color;
	Result[int2(xPos + 63, yPos - 63)] = color;
	Result[int2(xPos + 64, yPos - 63)] = color;
	Result[int2(xPos + 83, yPos - 63)] = color;
	Result[int2(xPos + 84, yPos - 63)] = color;
	Result[int2(xPos + 103, yPos - 63)] = color;
	Result[int2(xPos + 104, yPos - 63)] = color;
	Result[int2(xPos + 42, yPos - 64)] = color;
	Result[int2(xPos + 43, yPos - 64)] = color;
	Result[int2(xPos + 63, yPos - 64)] = color;
	Result[int2(xPos + 64, yPos - 64)] = color;
	Result[int2(xPos + 83, yPos - 64)] = color;
	Result[int2(xPos + 84, yPos - 64)] = color;
	Result[int2(xPos + 103, yPos - 64)] = color;
	Result[int2(xPos + 104, yPos - 64)] = color;
	Result[int2(xPos + 39, yPos - 65)] = color;
	Result[int2(xPos + 40, yPos - 65)] = color;
	Result[int2(xPos + 38, yPos - 66)] = color;
	Result[int2(xPos + 40, yPos - 66)] = color;
	Result[int2(xPos + 103, yPos - 66)] = color;
	Result[int2(xPos + 104, yPos - 66)] = color;
	Result[int2(xPos + 40, yPos - 67)] = color;
	Result[int2(xPos + 103, yPos - 67)] = color;
	Result[int2(xPos + 104, yPos - 67)] = color;
	Result[int2(xPos + 83, yPos - 69)] = color;
	Result[int2(xPos + 85, yPos - 69)] = color;
	Result[int2(xPos + 83, yPos - 70)] = color;
	Result[int2(xPos + 84, yPos - 70)] = color;
	Result[int2(xPos + 84, yPos - 71)] = color;
	Result[int2(xPos + 83, yPos - 73)] = color;
	Result[int2(xPos + 84, yPos - 73)] = color;
	Result[int2(xPos + 85, yPos - 73)] = color;
	Result[int2(xPos + 83, yPos - 74)] = color;
	Result[int2(xPos + 84, yPos - 75)] = color;
	Result[int2(xPos + 68, yPos - 89)] = color;
	Result[int2(xPos + 69, yPos - 89)] = color;
	Result[int2(xPos + 67, yPos - 90)] = color;
	Result[int2(xPos + 69, yPos - 90)] = color;
	Result[int2(xPos + 69, yPos - 91)] = color;
}