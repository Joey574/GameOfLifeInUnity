#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos + 7, yPos)] = color;
	Result[int2(xPos + 13, yPos)] = color;
	Result[int2(xPos + 19, yPos)] = color;
	Result[int2(xPos + 25, yPos)] = color;
	Result[int2(xPos + 31, yPos)] = color;
	Result[int2(xPos + 37, yPos)] = color;
	Result[int2(xPos + 43, yPos)] = color;
	Result[int2(xPos + 49, yPos)] = color;
	Result[int2(xPos + 55, yPos)] = color;
	Result[int2(xPos + 61, yPos)] = color;
	Result[int2(xPos, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos + 7, yPos - 1)] = color;
	Result[int2(xPos + 13, yPos - 1)] = color;
	Result[int2(xPos + 19, yPos - 1)] = color;
	Result[int2(xPos + 25, yPos - 1)] = color;
	Result[int2(xPos + 31, yPos - 1)] = color;
	Result[int2(xPos + 37, yPos - 1)] = color;
	Result[int2(xPos + 43, yPos - 1)] = color;
	Result[int2(xPos + 49, yPos - 1)] = color;
	Result[int2(xPos + 55, yPos - 1)] = color;
	Result[int2(xPos + 61, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 2)] = color;
	Result[int2(xPos + 7, yPos - 2)] = color;
	Result[int2(xPos + 13, yPos - 2)] = color;
	Result[int2(xPos + 19, yPos - 2)] = color;
	Result[int2(xPos + 25, yPos - 2)] = color;
	Result[int2(xPos + 31, yPos - 2)] = color;
	Result[int2(xPos + 37, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 49, yPos - 2)] = color;
	Result[int2(xPos + 55, yPos - 2)] = color;
	Result[int2(xPos + 61, yPos - 2)] = color;
}