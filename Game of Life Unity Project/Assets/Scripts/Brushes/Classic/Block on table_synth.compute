#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 87, yPos)] = color;
	Result[int2(xPos + 85, yPos - 1)] = color;
	Result[int2(xPos + 87, yPos - 1)] = color;
	Result[int2(xPos + 86, yPos - 2)] = color;
	Result[int2(xPos + 87, yPos - 2)] = color;
	Result[int2(xPos + 88, yPos - 4)] = color;
	Result[int2(xPos + 88, yPos - 5)] = color;
	Result[int2(xPos + 90, yPos - 5)] = color;
	Result[int2(xPos + 80, yPos - 6)] = color;
	Result[int2(xPos + 81, yPos - 6)] = color;
	Result[int2(xPos + 88, yPos - 6)] = color;
	Result[int2(xPos + 89, yPos - 6)] = color;
	Result[int2(xPos + 105, yPos - 6)] = color;
	Result[int2(xPos + 108, yPos - 6)] = color;
	Result[int2(xPos + 81, yPos - 7)] = color;
	Result[int2(xPos + 82, yPos - 7)] = color;
	Result[int2(xPos + 105, yPos - 7)] = color;
	Result[int2(xPos + 106, yPos - 7)] = color;
	Result[int2(xPos + 107, yPos - 7)] = color;
	Result[int2(xPos + 108, yPos - 7)] = color;
	Result[int2(xPos + 80, yPos - 8)] = color;
	Result[int2(xPos + 105, yPos - 9)] = color;
	Result[int2(xPos + 106, yPos - 9)] = color;
	Result[int2(xPos + 83, yPos - 10)] = color;
	Result[int2(xPos + 105, yPos - 10)] = color;
	Result[int2(xPos + 106, yPos - 10)] = color;
	Result[int2(xPos + 83, yPos - 11)] = color;
	Result[int2(xPos + 84, yPos - 11)] = color;
	Result[int2(xPos + 82, yPos - 12)] = color;
	Result[int2(xPos + 84, yPos - 12)] = color;
	Result[int2(xPos + 90, yPos - 20)] = color;
	Result[int2(xPos + 41, yPos - 21)] = color;
	Result[int2(xPos + 42, yPos - 21)] = color;
	Result[int2(xPos + 88, yPos - 21)] = color;
	Result[int2(xPos + 90, yPos - 21)] = color;
	Result[int2(xPos + 40, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 22)] = color;
	Result[int2(xPos + 44, yPos - 22)] = color;
	Result[int2(xPos + 89, yPos - 22)] = color;
	Result[int2(xPos + 90, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 23)] = color;
	Result[int2(xPos + 44, yPos - 23)] = color;
	Result[int2(xPos + 46, yPos - 23)] = color;
	Result[int2(xPos + 44, yPos - 24)] = color;
	Result[int2(xPos + 45, yPos - 24)] = color;
	Result[int2(xPos + 91, yPos - 24)] = color;
	Result[int2(xPos + 49, yPos - 25)] = color;
	Result[int2(xPos + 50, yPos - 25)] = color;
	Result[int2(xPos + 66, yPos - 25)] = color;
	Result[int2(xPos + 86, yPos - 25)] = color;
	Result[int2(xPos + 89, yPos - 25)] = color;
	Result[int2(xPos + 90, yPos - 25)] = color;
	Result[int2(xPos + 48, yPos - 26)] = color;
	Result[int2(xPos + 49, yPos - 26)] = color;
	Result[int2(xPos + 65, yPos - 26)] = color;
	Result[int2(xPos + 67, yPos - 26)] = color;
	Result[int2(xPos + 85, yPos - 26)] = color;
	Result[int2(xPos + 87, yPos - 26)] = color;
	Result[int2(xPos + 90, yPos - 26)] = color;
	Result[int2(xPos + 91, yPos - 26)] = color;
	Result[int2(xPos + 105, yPos - 26)] = color;
	Result[int2(xPos + 108, yPos - 26)] = color;
	Result[int2(xPos + 50, yPos - 27)] = color;
	Result[int2(xPos + 65, yPos - 27)] = color;
	Result[int2(xPos + 66, yPos - 27)] = color;
	Result[int2(xPos + 85, yPos - 27)] = color;
	Result[int2(xPos + 86, yPos - 27)] = color;
	Result[int2(xPos + 105, yPos - 27)] = color;
	Result[int2(xPos + 106, yPos - 27)] = color;
	Result[int2(xPos + 107, yPos - 27)] = color;
	Result[int2(xPos + 108, yPos - 27)] = color;
	Result[int2(xPos + 5, yPos - 28)] = color;
	Result[int2(xPos + 92, yPos - 28)] = color;
	Result[int2(xPos + 93, yPos - 28)] = color;
	Result[int2(xPos + 94, yPos - 28)] = color;
	Result[int2(xPos + 3, yPos - 29)] = color;
	Result[int2(xPos + 5, yPos - 29)] = color;
	Result[int2(xPos + 25, yPos - 29)] = color;
	Result[int2(xPos + 26, yPos - 29)] = color;
	Result[int2(xPos + 45, yPos - 29)] = color;
	Result[int2(xPos + 46, yPos - 29)] = color;
	Result[int2(xPos + 65, yPos - 29)] = color;
	Result[int2(xPos + 66, yPos - 29)] = color;
	Result[int2(xPos + 85, yPos - 29)] = color;
	Result[int2(xPos + 86, yPos - 29)] = color;
	Result[int2(xPos + 92, yPos - 29)] = color;
	Result[int2(xPos + 105, yPos - 29)] = color;
	Result[int2(xPos + 106, yPos - 29)] = color;
	Result[int2(xPos + 4, yPos - 30)] = color;
	Result[int2(xPos + 5, yPos - 30)] = color;
	Result[int2(xPos + 25, yPos - 30)] = color;
	Result[int2(xPos + 26, yPos - 30)] = color;
	Result[int2(xPos + 45, yPos - 30)] = color;
	Result[int2(xPos + 46, yPos - 30)] = color;
	Result[int2(xPos + 65, yPos - 30)] = color;
	Result[int2(xPos + 66, yPos - 30)] = color;
	Result[int2(xPos + 85, yPos - 30)] = color;
	Result[int2(xPos + 86, yPos - 30)] = color;
	Result[int2(xPos + 93, yPos - 30)] = color;
	Result[int2(xPos + 105, yPos - 30)] = color;
	Result[int2(xPos + 106, yPos - 30)] = color;
	Result[int2(xPos + 1, yPos - 31)] = color;
	Result[int2(xPos + 2, yPos - 31)] = color;
	Result[int2(xPos, yPos - 32)] = color;
	Result[int2(xPos + 2, yPos - 32)] = color;
	Result[int2(xPos + 2, yPos - 33)] = color;
	Result[int2(xPos + 84, yPos - 38)] = color;
	Result[int2(xPos + 85, yPos - 39)] = color;
	Result[int2(xPos + 83, yPos - 40)] = color;
	Result[int2(xPos + 84, yPos - 40)] = color;
	Result[int2(xPos + 85, yPos - 40)] = color;
	Result[int2(xPos + 92, yPos - 41)] = color;
	Result[int2(xPos + 90, yPos - 42)] = color;
	Result[int2(xPos + 91, yPos - 42)] = color;
	Result[int2(xPos + 91, yPos - 43)] = color;
	Result[int2(xPos + 92, yPos - 43)] = color;
	Result[int2(xPos + 94, yPos - 44)] = color;
	Result[int2(xPos + 95, yPos - 44)] = color;
	Result[int2(xPos + 86, yPos - 45)] = color;
	Result[int2(xPos + 94, yPos - 45)] = color;
	Result[int2(xPos + 96, yPos - 45)] = color;
	Result[int2(xPos + 85, yPos - 46)] = color;
	Result[int2(xPos + 87, yPos - 46)] = color;
	Result[int2(xPos + 94, yPos - 46)] = color;
	Result[int2(xPos + 105, yPos - 46)] = color;
	Result[int2(xPos + 108, yPos - 46)] = color;
	Result[int2(xPos + 85, yPos - 47)] = color;
	Result[int2(xPos + 86, yPos - 47)] = color;
	Result[int2(xPos + 105, yPos - 47)] = color;
	Result[int2(xPos + 106, yPos - 47)] = color;
	Result[int2(xPos + 107, yPos - 47)] = color;
	Result[int2(xPos + 108, yPos - 47)] = color;
	Result[int2(xPos + 85, yPos - 49)] = color;
	Result[int2(xPos + 86, yPos - 49)] = color;
	Result[int2(xPos + 105, yPos - 49)] = color;
	Result[int2(xPos + 106, yPos - 49)] = color;
	Result[int2(xPos + 85, yPos - 50)] = color;
	Result[int2(xPos + 86, yPos - 50)] = color;
	Result[int2(xPos + 105, yPos - 50)] = color;
	Result[int2(xPos + 106, yPos - 50)] = color;
}