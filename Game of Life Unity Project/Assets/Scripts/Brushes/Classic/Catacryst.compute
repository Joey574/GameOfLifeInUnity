#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (2350 * xMult), yPos)] = color;
	Result[int2(xPos + (2350 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (2348 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (2349 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (2347 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (2347 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (2347 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (2347 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (2377 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (2376 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (2377 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (2374 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (2377 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (2374 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (2376 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (2375 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (2552 * xMult), yPos - (150 * yMult))] = color;
	Result[int2(xPos + (2553 * xMult), yPos - (150 * yMult))] = color;
	Result[int2(xPos + (2553 * xMult), yPos - (151 * yMult))] = color;
	Result[int2(xPos + (2554 * xMult), yPos - (151 * yMult))] = color;
	Result[int2(xPos + (2553 * xMult), yPos - (152 * yMult))] = color;
	Result[int2(xPos + (2538 * xMult), yPos - (181 * yMult))] = color;
	Result[int2(xPos + (2537 * xMult), yPos - (182 * yMult))] = color;
	Result[int2(xPos + (2539 * xMult), yPos - (182 * yMult))] = color;
	Result[int2(xPos + (2539 * xMult), yPos - (183 * yMult))] = color;
	Result[int2(xPos + (2540 * xMult), yPos - (184 * yMult))] = color;
	Result[int2(xPos + (1201 * xMult), yPos - (1673 * yMult))] = color;
	Result[int2(xPos + (1201 * xMult), yPos - (1674 * yMult))] = color;
	Result[int2(xPos + (1202 * xMult), yPos - (1675 * yMult))] = color;
	Result[int2(xPos + (1203 * xMult), yPos - (1675 * yMult))] = color;
	Result[int2(xPos + (1204 * xMult), yPos - (1676 * yMult))] = color;
	Result[int2(xPos + (1204 * xMult), yPos - (1677 * yMult))] = color;
	Result[int2(xPos + (1204 * xMult), yPos - (1678 * yMult))] = color;
	Result[int2(xPos + (1204 * xMult), yPos - (1679 * yMult))] = color;
	Result[int2(xPos + (1180 * xMult), yPos - (1696 * yMult))] = color;
	Result[int2(xPos + (1181 * xMult), yPos - (1696 * yMult))] = color;
	Result[int2(xPos + (1182 * xMult), yPos - (1697 * yMult))] = color;
	Result[int2(xPos + (1182 * xMult), yPos - (1698 * yMult))] = color;
	Result[int2(xPos + (1183 * xMult), yPos - (1699 * yMult))] = color;
	Result[int2(xPos + (1184 * xMult), yPos - (1699 * yMult))] = color;
	Result[int2(xPos + (1185 * xMult), yPos - (1699 * yMult))] = color;
	Result[int2(xPos + (1186 * xMult), yPos - (1699 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (1749 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (1750 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (1750 * yMult))] = color;
	Result[int2(xPos, yPos - (1751 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (1751 * yMult))] = color;
	Result[int2(xPos, yPos - (1753 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (1753 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (1754 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (1765 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (1766 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (1767 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (1767 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (1768 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (1769 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (1770 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (1771 * yMult))] = color;
}