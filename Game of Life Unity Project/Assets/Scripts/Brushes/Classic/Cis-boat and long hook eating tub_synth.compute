#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 80, yPos)] = color;
	Result[int2(xPos + 82, yPos)] = color;
	Result[int2(xPos + 81, yPos - 1)] = color;
	Result[int2(xPos + 82, yPos - 1)] = color;
	Result[int2(xPos + 88, yPos - 1)] = color;
	Result[int2(xPos + 125, yPos - 1)] = color;
	Result[int2(xPos + 81, yPos - 2)] = color;
	Result[int2(xPos + 89, yPos - 2)] = color;
	Result[int2(xPos + 123, yPos - 2)] = color;
	Result[int2(xPos + 125, yPos - 2)] = color;
	Result[int2(xPos + 87, yPos - 3)] = color;
	Result[int2(xPos + 88, yPos - 3)] = color;
	Result[int2(xPos + 89, yPos - 3)] = color;
	Result[int2(xPos + 120, yPos - 3)] = color;
	Result[int2(xPos + 121, yPos - 3)] = color;
	Result[int2(xPos + 124, yPos - 3)] = color;
	Result[int2(xPos + 125, yPos - 3)] = color;
	Result[int2(xPos + 40, yPos - 4)] = color;
	Result[int2(xPos + 42, yPos - 4)] = color;
	Result[int2(xPos + 121, yPos - 4)] = color;
	Result[int2(xPos + 122, yPos - 4)] = color;
	Result[int2(xPos + 130, yPos - 4)] = color;
	Result[int2(xPos + 40, yPos - 5)] = color;
	Result[int2(xPos + 41, yPos - 5)] = color;
	Result[int2(xPos + 90, yPos - 5)] = color;
	Result[int2(xPos + 120, yPos - 5)] = color;
	Result[int2(xPos + 128, yPos - 5)] = color;
	Result[int2(xPos + 129, yPos - 5)] = color;
	Result[int2(xPos + 144, yPos - 5)] = color;
	Result[int2(xPos + 1, yPos - 6)] = color;
	Result[int2(xPos + 5, yPos - 6)] = color;
	Result[int2(xPos + 41, yPos - 6)] = color;
	Result[int2(xPos + 79, yPos - 6)] = color;
	Result[int2(xPos + 80, yPos - 6)] = color;
	Result[int2(xPos + 90, yPos - 6)] = color;
	Result[int2(xPos + 92, yPos - 6)] = color;
	Result[int2(xPos + 105, yPos - 6)] = color;
	Result[int2(xPos + 125, yPos - 6)] = color;
	Result[int2(xPos + 129, yPos - 6)] = color;
	Result[int2(xPos + 130, yPos - 6)] = color;
	Result[int2(xPos + 143, yPos - 6)] = color;
	Result[int2(xPos + 145, yPos - 6)] = color;
	Result[int2(xPos + 2, yPos - 7)] = color;
	Result[int2(xPos + 4, yPos - 7)] = color;
	Result[int2(xPos + 80, yPos - 7)] = color;
	Result[int2(xPos + 81, yPos - 7)] = color;
	Result[int2(xPos + 90, yPos - 7)] = color;
	Result[int2(xPos + 91, yPos - 7)] = color;
	Result[int2(xPos + 104, yPos - 7)] = color;
	Result[int2(xPos + 106, yPos - 7)] = color;
	Result[int2(xPos + 124, yPos - 7)] = color;
	Result[int2(xPos + 126, yPos - 7)] = color;
	Result[int2(xPos + 144, yPos - 7)] = color;
	Result[int2(xPos, yPos - 8)] = color;
	Result[int2(xPos + 1, yPos - 8)] = color;
	Result[int2(xPos + 2, yPos - 8)] = color;
	Result[int2(xPos + 4, yPos - 8)] = color;
	Result[int2(xPos + 5, yPos - 8)] = color;
	Result[int2(xPos + 6, yPos - 8)] = color;
	Result[int2(xPos + 21, yPos - 8)] = color;
	Result[int2(xPos + 22, yPos - 8)] = color;
	Result[int2(xPos + 24, yPos - 8)] = color;
	Result[int2(xPos + 25, yPos - 8)] = color;
	Result[int2(xPos + 41, yPos - 8)] = color;
	Result[int2(xPos + 42, yPos - 8)] = color;
	Result[int2(xPos + 44, yPos - 8)] = color;
	Result[int2(xPos + 45, yPos - 8)] = color;
	Result[int2(xPos + 79, yPos - 8)] = color;
	Result[int2(xPos + 104, yPos - 8)] = color;
	Result[int2(xPos + 107, yPos - 8)] = color;
	Result[int2(xPos + 124, yPos - 8)] = color;
	Result[int2(xPos + 127, yPos - 8)] = color;
	Result[int2(xPos + 145, yPos - 8)] = color;
	Result[int2(xPos + 21, yPos - 9)] = color;
	Result[int2(xPos + 22, yPos - 9)] = color;
	Result[int2(xPos + 24, yPos - 9)] = color;
	Result[int2(xPos + 25, yPos - 9)] = color;
	Result[int2(xPos + 41, yPos - 9)] = color;
	Result[int2(xPos + 42, yPos - 9)] = color;
	Result[int2(xPos + 44, yPos - 9)] = color;
	Result[int2(xPos + 45, yPos - 9)] = color;
	Result[int2(xPos + 65, yPos - 9)] = color;
	Result[int2(xPos + 66, yPos - 9)] = color;
	Result[int2(xPos + 85, yPos - 9)] = color;
	Result[int2(xPos + 86, yPos - 9)] = color;
	Result[int2(xPos + 105, yPos - 9)] = color;
	Result[int2(xPos + 107, yPos - 9)] = color;
	Result[int2(xPos + 125, yPos - 9)] = color;
	Result[int2(xPos + 127, yPos - 9)] = color;
	Result[int2(xPos + 145, yPos - 9)] = color;
	Result[int2(xPos + 62, yPos - 10)] = color;
	Result[int2(xPos + 66, yPos - 10)] = color;
	Result[int2(xPos + 82, yPos - 10)] = color;
	Result[int2(xPos + 86, yPos - 10)] = color;
	Result[int2(xPos + 102, yPos - 10)] = color;
	Result[int2(xPos + 106, yPos - 10)] = color;
	Result[int2(xPos + 122, yPos - 10)] = color;
	Result[int2(xPos + 126, yPos - 10)] = color;
	Result[int2(xPos + 142, yPos - 10)] = color;
	Result[int2(xPos + 146, yPos - 10)] = color;
	Result[int2(xPos + 62, yPos - 11)] = color;
	Result[int2(xPos + 63, yPos - 11)] = color;
	Result[int2(xPos + 64, yPos - 11)] = color;
	Result[int2(xPos + 65, yPos - 11)] = color;
	Result[int2(xPos + 82, yPos - 11)] = color;
	Result[int2(xPos + 83, yPos - 11)] = color;
	Result[int2(xPos + 84, yPos - 11)] = color;
	Result[int2(xPos + 85, yPos - 11)] = color;
	Result[int2(xPos + 102, yPos - 11)] = color;
	Result[int2(xPos + 103, yPos - 11)] = color;
	Result[int2(xPos + 104, yPos - 11)] = color;
	Result[int2(xPos + 105, yPos - 11)] = color;
	Result[int2(xPos + 122, yPos - 11)] = color;
	Result[int2(xPos + 123, yPos - 11)] = color;
	Result[int2(xPos + 124, yPos - 11)] = color;
	Result[int2(xPos + 125, yPos - 11)] = color;
	Result[int2(xPos + 142, yPos - 11)] = color;
	Result[int2(xPos + 143, yPos - 11)] = color;
	Result[int2(xPos + 144, yPos - 11)] = color;
	Result[int2(xPos + 145, yPos - 11)] = color;
	Result[int2(xPos + 46, yPos - 13)] = color;
	Result[int2(xPos + 62, yPos - 13)] = color;
	Result[int2(xPos + 63, yPos - 13)] = color;
	Result[int2(xPos + 82, yPos - 13)] = color;
	Result[int2(xPos + 83, yPos - 13)] = color;
	Result[int2(xPos + 102, yPos - 13)] = color;
	Result[int2(xPos + 103, yPos - 13)] = color;
	Result[int2(xPos + 122, yPos - 13)] = color;
	Result[int2(xPos + 123, yPos - 13)] = color;
	Result[int2(xPos + 142, yPos - 13)] = color;
	Result[int2(xPos + 143, yPos - 13)] = color;
	Result[int2(xPos + 46, yPos - 14)] = color;
	Result[int2(xPos + 48, yPos - 14)] = color;
	Result[int2(xPos + 62, yPos - 14)] = color;
	Result[int2(xPos + 64, yPos - 14)] = color;
	Result[int2(xPos + 82, yPos - 14)] = color;
	Result[int2(xPos + 84, yPos - 14)] = color;
	Result[int2(xPos + 102, yPos - 14)] = color;
	Result[int2(xPos + 104, yPos - 14)] = color;
	Result[int2(xPos + 122, yPos - 14)] = color;
	Result[int2(xPos + 124, yPos - 14)] = color;
	Result[int2(xPos + 142, yPos - 14)] = color;
	Result[int2(xPos + 144, yPos - 14)] = color;
	Result[int2(xPos + 46, yPos - 15)] = color;
	Result[int2(xPos + 47, yPos - 15)] = color;
	Result[int2(xPos + 63, yPos - 15)] = color;
	Result[int2(xPos + 83, yPos - 15)] = color;
	Result[int2(xPos + 103, yPos - 15)] = color;
	Result[int2(xPos + 123, yPos - 15)] = color;
	Result[int2(xPos + 143, yPos - 15)] = color;
	Result[int2(xPos + 42, yPos - 16)] = color;
	Result[int2(xPos + 37, yPos - 17)] = color;
	Result[int2(xPos + 39, yPos - 17)] = color;
	Result[int2(xPos + 41, yPos - 17)] = color;
	Result[int2(xPos + 42, yPos - 17)] = color;
	Result[int2(xPos + 38, yPos - 18)] = color;
	Result[int2(xPos + 39, yPos - 18)] = color;
	Result[int2(xPos + 41, yPos - 18)] = color;
	Result[int2(xPos + 43, yPos - 18)] = color;
	Result[int2(xPos + 38, yPos - 19)] = color;
}