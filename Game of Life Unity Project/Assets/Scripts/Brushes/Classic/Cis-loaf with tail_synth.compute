#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (20 * xMult), yPos)] = color;
	Result[int2(xPos + (21 * xMult), yPos)] = color;
	Result[int2(xPos + (40 * xMult), yPos)] = color;
	Result[int2(xPos + (41 * xMult), yPos)] = color;
	Result[int2(xPos + (60 * xMult), yPos)] = color;
	Result[int2(xPos + (61 * xMult), yPos)] = color;
	Result[int2(xPos + (21 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos, yPos - (2 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos, yPos - (4 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (57 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (57 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (57 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (65 * yMult))] = color;
}