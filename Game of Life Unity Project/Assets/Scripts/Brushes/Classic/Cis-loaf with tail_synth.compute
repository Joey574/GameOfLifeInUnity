#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 20, yPos)] = color;
	Result[int2(xPos + 21, yPos)] = color;
	Result[int2(xPos + 40, yPos)] = color;
	Result[int2(xPos + 41, yPos)] = color;
	Result[int2(xPos + 60, yPos)] = color;
	Result[int2(xPos + 61, yPos)] = color;
	Result[int2(xPos + 21, yPos - 1)] = color;
	Result[int2(xPos + 41, yPos - 1)] = color;
	Result[int2(xPos + 61, yPos - 1)] = color;
	Result[int2(xPos + 64, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 21, yPos - 2)] = color;
	Result[int2(xPos + 23, yPos - 2)] = color;
	Result[int2(xPos + 41, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 61, yPos - 2)] = color;
	Result[int2(xPos + 63, yPos - 2)] = color;
	Result[int2(xPos + 65, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 3)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos + 22, yPos - 3)] = color;
	Result[int2(xPos + 23, yPos - 3)] = color;
	Result[int2(xPos + 42, yPos - 3)] = color;
	Result[int2(xPos + 43, yPos - 3)] = color;
	Result[int2(xPos + 62, yPos - 3)] = color;
	Result[int2(xPos + 65, yPos - 3)] = color;
	Result[int2(xPos, yPos - 4)] = color;
	Result[int2(xPos + 4, yPos - 4)] = color;
	Result[int2(xPos + 5, yPos - 4)] = color;
	Result[int2(xPos + 49, yPos - 4)] = color;
	Result[int2(xPos + 63, yPos - 4)] = color;
	Result[int2(xPos + 64, yPos - 4)] = color;
	Result[int2(xPos + 4, yPos - 5)] = color;
	Result[int2(xPos + 6, yPos - 5)] = color;
	Result[int2(xPos + 49, yPos - 5)] = color;
	Result[int2(xPos + 51, yPos - 5)] = color;
	Result[int2(xPos + 4, yPos - 6)] = color;
	Result[int2(xPos + 49, yPos - 6)] = color;
	Result[int2(xPos + 50, yPos - 6)] = color;
	Result[int2(xPos + 45, yPos - 7)] = color;
	Result[int2(xPos + 46, yPos - 7)] = color;
	Result[int2(xPos + 47, yPos - 7)] = color;
	Result[int2(xPos + 45, yPos - 8)] = color;
	Result[int2(xPos + 46, yPos - 9)] = color;
	Result[int2(xPos + 40, yPos - 30)] = color;
	Result[int2(xPos + 41, yPos - 30)] = color;
	Result[int2(xPos + 60, yPos - 30)] = color;
	Result[int2(xPos + 61, yPos - 30)] = color;
	Result[int2(xPos + 41, yPos - 31)] = color;
	Result[int2(xPos + 61, yPos - 31)] = color;
	Result[int2(xPos + 64, yPos - 31)] = color;
	Result[int2(xPos + 41, yPos - 32)] = color;
	Result[int2(xPos + 43, yPos - 32)] = color;
	Result[int2(xPos + 61, yPos - 32)] = color;
	Result[int2(xPos + 63, yPos - 32)] = color;
	Result[int2(xPos + 65, yPos - 32)] = color;
	Result[int2(xPos + 42, yPos - 33)] = color;
	Result[int2(xPos + 43, yPos - 33)] = color;
	Result[int2(xPos + 62, yPos - 33)] = color;
	Result[int2(xPos + 65, yPos - 33)] = color;
	Result[int2(xPos + 63, yPos - 34)] = color;
	Result[int2(xPos + 64, yPos - 34)] = color;
	Result[int2(xPos + 45, yPos - 35)] = color;
	Result[int2(xPos + 46, yPos - 35)] = color;
	Result[int2(xPos + 44, yPos - 36)] = color;
	Result[int2(xPos + 46, yPos - 36)] = color;
	Result[int2(xPos + 49, yPos - 36)] = color;
	Result[int2(xPos + 46, yPos - 37)] = color;
	Result[int2(xPos + 49, yPos - 37)] = color;
	Result[int2(xPos + 51, yPos - 37)] = color;
	Result[int2(xPos + 49, yPos - 38)] = color;
	Result[int2(xPos + 50, yPos - 38)] = color;
	Result[int2(xPos + 37, yPos - 51)] = color;
	Result[int2(xPos + 36, yPos - 52)] = color;
	Result[int2(xPos + 36, yPos - 53)] = color;
	Result[int2(xPos + 37, yPos - 53)] = color;
	Result[int2(xPos + 38, yPos - 53)] = color;
	Result[int2(xPos + 33, yPos - 55)] = color;
	Result[int2(xPos + 35, yPos - 55)] = color;
	Result[int2(xPos + 34, yPos - 56)] = color;
	Result[int2(xPos + 35, yPos - 56)] = color;
	Result[int2(xPos + 41, yPos - 56)] = color;
	Result[int2(xPos + 34, yPos - 57)] = color;
	Result[int2(xPos + 41, yPos - 57)] = color;
	Result[int2(xPos + 43, yPos - 57)] = color;
	Result[int2(xPos + 41, yPos - 58)] = color;
	Result[int2(xPos + 42, yPos - 58)] = color;
	Result[int2(xPos + 35, yPos - 60)] = color;
	Result[int2(xPos + 37, yPos - 60)] = color;
	Result[int2(xPos + 60, yPos - 60)] = color;
	Result[int2(xPos + 61, yPos - 60)] = color;
	Result[int2(xPos + 7, yPos - 61)] = color;
	Result[int2(xPos + 24, yPos - 61)] = color;
	Result[int2(xPos + 36, yPos - 61)] = color;
	Result[int2(xPos + 37, yPos - 61)] = color;
	Result[int2(xPos + 44, yPos - 61)] = color;
	Result[int2(xPos + 61, yPos - 61)] = color;
	Result[int2(xPos + 64, yPos - 61)] = color;
	Result[int2(xPos + 6, yPos - 62)] = color;
	Result[int2(xPos + 23, yPos - 62)] = color;
	Result[int2(xPos + 25, yPos - 62)] = color;
	Result[int2(xPos + 36, yPos - 62)] = color;
	Result[int2(xPos + 43, yPos - 62)] = color;
	Result[int2(xPos + 45, yPos - 62)] = color;
	Result[int2(xPos + 61, yPos - 62)] = color;
	Result[int2(xPos + 63, yPos - 62)] = color;
	Result[int2(xPos + 65, yPos - 62)] = color;
	Result[int2(xPos + 3, yPos - 63)] = color;
	Result[int2(xPos + 4, yPos - 63)] = color;
	Result[int2(xPos + 6, yPos - 63)] = color;
	Result[int2(xPos + 7, yPos - 63)] = color;
	Result[int2(xPos + 8, yPos - 63)] = color;
	Result[int2(xPos + 22, yPos - 63)] = color;
	Result[int2(xPos + 25, yPos - 63)] = color;
	Result[int2(xPos + 42, yPos - 63)] = color;
	Result[int2(xPos + 45, yPos - 63)] = color;
	Result[int2(xPos + 62, yPos - 63)] = color;
	Result[int2(xPos + 65, yPos - 63)] = color;
	Result[int2(xPos + 2, yPos - 64)] = color;
	Result[int2(xPos + 4, yPos - 64)] = color;
	Result[int2(xPos + 23, yPos - 64)] = color;
	Result[int2(xPos + 24, yPos - 64)] = color;
	Result[int2(xPos + 43, yPos - 64)] = color;
	Result[int2(xPos + 44, yPos - 64)] = color;
	Result[int2(xPos + 63, yPos - 64)] = color;
	Result[int2(xPos + 64, yPos - 64)] = color;
	Result[int2(xPos + 4, yPos - 65)] = color;
}