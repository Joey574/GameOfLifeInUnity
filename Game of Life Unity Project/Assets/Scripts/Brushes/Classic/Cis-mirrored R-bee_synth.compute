#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 77, yPos)] = color;
	Result[int2(xPos + 79, yPos)] = color;
	Result[int2(xPos + 77, yPos - 1)] = color;
	Result[int2(xPos + 78, yPos - 1)] = color;
	Result[int2(xPos + 78, yPos - 2)] = color;
	Result[int2(xPos + 70, yPos - 5)] = color;
	Result[int2(xPos + 19, yPos - 6)] = color;
	Result[int2(xPos + 68, yPos - 6)] = color;
	Result[int2(xPos + 70, yPos - 6)] = color;
	Result[int2(xPos + 73, yPos - 6)] = color;
	Result[int2(xPos + 17, yPos - 7)] = color;
	Result[int2(xPos + 19, yPos - 7)] = color;
	Result[int2(xPos + 69, yPos - 7)] = color;
	Result[int2(xPos + 70, yPos - 7)] = color;
	Result[int2(xPos + 73, yPos - 7)] = color;
	Result[int2(xPos + 75, yPos - 7)] = color;
	Result[int2(xPos + 18, yPos - 8)] = color;
	Result[int2(xPos + 19, yPos - 8)] = color;
	Result[int2(xPos + 42, yPos - 8)] = color;
	Result[int2(xPos + 43, yPos - 8)] = color;
	Result[int2(xPos + 73, yPos - 8)] = color;
	Result[int2(xPos + 74, yPos - 8)] = color;
	Result[int2(xPos + 92, yPos - 8)] = color;
	Result[int2(xPos + 93, yPos - 8)] = color;
	Result[int2(xPos + 29, yPos - 9)] = color;
	Result[int2(xPos + 41, yPos - 9)] = color;
	Result[int2(xPos + 44, yPos - 9)] = color;
	Result[int2(xPos + 91, yPos - 9)] = color;
	Result[int2(xPos + 94, yPos - 9)] = color;
	Result[int2(xPos + 29, yPos - 10)] = color;
	Result[int2(xPos + 31, yPos - 10)] = color;
	Result[int2(xPos + 42, yPos - 10)] = color;
	Result[int2(xPos + 43, yPos - 10)] = color;
	Result[int2(xPos + 44, yPos - 10)] = color;
	Result[int2(xPos + 92, yPos - 10)] = color;
	Result[int2(xPos + 93, yPos - 10)] = color;
	Result[int2(xPos + 94, yPos - 10)] = color;
	Result[int2(xPos + 29, yPos - 11)] = color;
	Result[int2(xPos + 30, yPos - 11)] = color;
	Result[int2(xPos + 26, yPos - 12)] = color;
	Result[int2(xPos + 27, yPos - 12)] = color;
	Result[int2(xPos + 42, yPos - 12)] = color;
	Result[int2(xPos + 43, yPos - 12)] = color;
	Result[int2(xPos + 44, yPos - 12)] = color;
	Result[int2(xPos + 92, yPos - 12)] = color;
	Result[int2(xPos + 93, yPos - 12)] = color;
	Result[int2(xPos + 94, yPos - 12)] = color;
	Result[int2(xPos + 25, yPos - 13)] = color;
	Result[int2(xPos + 26, yPos - 13)] = color;
	Result[int2(xPos + 41, yPos - 13)] = color;
	Result[int2(xPos + 44, yPos - 13)] = color;
	Result[int2(xPos + 91, yPos - 13)] = color;
	Result[int2(xPos + 94, yPos - 13)] = color;
	Result[int2(xPos + 18, yPos - 14)] = color;
	Result[int2(xPos + 19, yPos - 14)] = color;
	Result[int2(xPos + 27, yPos - 14)] = color;
	Result[int2(xPos + 42, yPos - 14)] = color;
	Result[int2(xPos + 43, yPos - 14)] = color;
	Result[int2(xPos + 73, yPos - 14)] = color;
	Result[int2(xPos + 74, yPos - 14)] = color;
	Result[int2(xPos + 92, yPos - 14)] = color;
	Result[int2(xPos + 93, yPos - 14)] = color;
	Result[int2(xPos + 17, yPos - 15)] = color;
	Result[int2(xPos + 19, yPos - 15)] = color;
	Result[int2(xPos + 69, yPos - 15)] = color;
	Result[int2(xPos + 70, yPos - 15)] = color;
	Result[int2(xPos + 73, yPos - 15)] = color;
	Result[int2(xPos + 75, yPos - 15)] = color;
	Result[int2(xPos + 19, yPos - 16)] = color;
	Result[int2(xPos + 68, yPos - 16)] = color;
	Result[int2(xPos + 70, yPos - 16)] = color;
	Result[int2(xPos + 73, yPos - 16)] = color;
	Result[int2(xPos + 70, yPos - 17)] = color;
	Result[int2(xPos + 78, yPos - 20)] = color;
	Result[int2(xPos + 77, yPos - 21)] = color;
	Result[int2(xPos + 78, yPos - 21)] = color;
	Result[int2(xPos + 77, yPos - 22)] = color;
	Result[int2(xPos + 79, yPos - 22)] = color;
	Result[int2(xPos + 13, yPos - 37)] = color;
	Result[int2(xPos + 15, yPos - 37)] = color;
	Result[int2(xPos + 13, yPos - 38)] = color;
	Result[int2(xPos + 14, yPos - 38)] = color;
	Result[int2(xPos + 32, yPos - 38)] = color;
	Result[int2(xPos + 33, yPos - 38)] = color;
	Result[int2(xPos + 42, yPos - 38)] = color;
	Result[int2(xPos + 43, yPos - 38)] = color;
	Result[int2(xPos + 57, yPos - 38)] = color;
	Result[int2(xPos + 58, yPos - 38)] = color;
	Result[int2(xPos + 62, yPos - 38)] = color;
	Result[int2(xPos + 63, yPos - 38)] = color;
	Result[int2(xPos + 72, yPos - 38)] = color;
	Result[int2(xPos + 73, yPos - 38)] = color;
	Result[int2(xPos + 92, yPos - 38)] = color;
	Result[int2(xPos + 93, yPos - 38)] = color;
	Result[int2(xPos + 3, yPos - 39)] = color;
	Result[int2(xPos + 14, yPos - 39)] = color;
	Result[int2(xPos + 31, yPos - 39)] = color;
	Result[int2(xPos + 34, yPos - 39)] = color;
	Result[int2(xPos + 41, yPos - 39)] = color;
	Result[int2(xPos + 44, yPos - 39)] = color;
	Result[int2(xPos + 58, yPos - 39)] = color;
	Result[int2(xPos + 59, yPos - 39)] = color;
	Result[int2(xPos + 61, yPos - 39)] = color;
	Result[int2(xPos + 64, yPos - 39)] = color;
	Result[int2(xPos + 71, yPos - 39)] = color;
	Result[int2(xPos + 74, yPos - 39)] = color;
	Result[int2(xPos + 91, yPos - 39)] = color;
	Result[int2(xPos + 94, yPos - 39)] = color;
	Result[int2(xPos + 1, yPos - 40)] = color;
	Result[int2(xPos + 3, yPos - 40)] = color;
	Result[int2(xPos + 31, yPos - 40)] = color;
	Result[int2(xPos + 32, yPos - 40)] = color;
	Result[int2(xPos + 33, yPos - 40)] = color;
	Result[int2(xPos + 42, yPos - 40)] = color;
	Result[int2(xPos + 43, yPos - 40)] = color;
	Result[int2(xPos + 44, yPos - 40)] = color;
	Result[int2(xPos + 57, yPos - 40)] = color;
	Result[int2(xPos + 61, yPos - 40)] = color;
	Result[int2(xPos + 62, yPos - 40)] = color;
	Result[int2(xPos + 63, yPos - 40)] = color;
	Result[int2(xPos + 72, yPos - 40)] = color;
	Result[int2(xPos + 73, yPos - 40)] = color;
	Result[int2(xPos + 74, yPos - 40)] = color;
	Result[int2(xPos + 92, yPos - 40)] = color;
	Result[int2(xPos + 93, yPos - 40)] = color;
	Result[int2(xPos + 94, yPos - 40)] = color;
	Result[int2(xPos + 2, yPos - 41)] = color;
	Result[int2(xPos + 3, yPos - 41)] = color;
	Result[int2(xPos + 12, yPos - 41)] = color;
	Result[int2(xPos + 13, yPos - 41)] = color;
	Result[int2(xPos + 12, yPos - 42)] = color;
	Result[int2(xPos + 14, yPos - 42)] = color;
	Result[int2(xPos + 31, yPos - 42)] = color;
	Result[int2(xPos + 32, yPos - 42)] = color;
	Result[int2(xPos + 33, yPos - 42)] = color;
	Result[int2(xPos + 42, yPos - 42)] = color;
	Result[int2(xPos + 43, yPos - 42)] = color;
	Result[int2(xPos + 44, yPos - 42)] = color;
	Result[int2(xPos + 61, yPos - 42)] = color;
	Result[int2(xPos + 62, yPos - 42)] = color;
	Result[int2(xPos + 63, yPos - 42)] = color;
	Result[int2(xPos + 72, yPos - 42)] = color;
	Result[int2(xPos + 73, yPos - 42)] = color;
	Result[int2(xPos + 74, yPos - 42)] = color;
	Result[int2(xPos + 92, yPos - 42)] = color;
	Result[int2(xPos + 93, yPos - 42)] = color;
	Result[int2(xPos + 94, yPos - 42)] = color;
	Result[int2(xPos + 1, yPos - 43)] = color;
	Result[int2(xPos + 12, yPos - 43)] = color;
	Result[int2(xPos + 31, yPos - 43)] = color;
	Result[int2(xPos + 34, yPos - 43)] = color;
	Result[int2(xPos + 41, yPos - 43)] = color;
	Result[int2(xPos + 44, yPos - 43)] = color;
	Result[int2(xPos + 61, yPos - 43)] = color;
	Result[int2(xPos + 64, yPos - 43)] = color;
	Result[int2(xPos + 71, yPos - 43)] = color;
	Result[int2(xPos + 74, yPos - 43)] = color;
	Result[int2(xPos + 91, yPos - 43)] = color;
	Result[int2(xPos + 94, yPos - 43)] = color;
	Result[int2(xPos + 1, yPos - 44)] = color;
	Result[int2(xPos + 2, yPos - 44)] = color;
	Result[int2(xPos + 32, yPos - 44)] = color;
	Result[int2(xPos + 33, yPos - 44)] = color;
	Result[int2(xPos + 42, yPos - 44)] = color;
	Result[int2(xPos + 43, yPos - 44)] = color;
	Result[int2(xPos + 62, yPos - 44)] = color;
	Result[int2(xPos + 63, yPos - 44)] = color;
	Result[int2(xPos + 72, yPos - 44)] = color;
	Result[int2(xPos + 73, yPos - 44)] = color;
	Result[int2(xPos + 92, yPos - 44)] = color;
	Result[int2(xPos + 93, yPos - 44)] = color;
	Result[int2(xPos, yPos - 45)] = color;
	Result[int2(xPos + 2, yPos - 45)] = color;
}