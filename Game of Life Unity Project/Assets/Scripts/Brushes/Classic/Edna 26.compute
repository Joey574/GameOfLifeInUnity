#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 12, yPos - 2)] = color;
	Result[int2(xPos + 12, yPos - 3)] = color;
	Result[int2(xPos + 13, yPos - 3)] = color;
	Result[int2(xPos + 14, yPos - 3)] = color;
	Result[int2(xPos + 29, yPos - 3)] = color;
	Result[int2(xPos + 30, yPos - 3)] = color;
	Result[int2(xPos + 31, yPos - 3)] = color;
	Result[int2(xPos + 3, yPos - 8)] = color;
	Result[int2(xPos + 4, yPos - 8)] = color;
	Result[int2(xPos + 3, yPos - 9)] = color;
	Result[int2(xPos + 29, yPos - 21)] = color;
	Result[int2(xPos + 41, yPos - 21)] = color;
	Result[int2(xPos + 29, yPos - 22)] = color;
	Result[int2(xPos + 30, yPos - 22)] = color;
	Result[int2(xPos + 31, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 23)] = color;
	Result[int2(xPos + 25, yPos - 24)] = color;
	Result[int2(xPos + 41, yPos - 24)] = color;
	Result[int2(xPos + 42, yPos - 24)] = color;
	Result[int2(xPos + 24, yPos - 25)] = color;
	Result[int2(xPos + 25, yPos - 25)] = color;
}