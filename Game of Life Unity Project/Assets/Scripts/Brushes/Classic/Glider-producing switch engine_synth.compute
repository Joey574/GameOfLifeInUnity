#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (1 * xMult), yPos)] = color;
	Result[int2(xPos + (2 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos, yPos - (2 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (163 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (163 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (163 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (149 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (149 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (147 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (147 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (163 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (165 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (167 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (150 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (162 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (166 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (149 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (161 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (147 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (162 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (163 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (164 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (146 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (149 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (162 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (163 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (146 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (147 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (148 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (149 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (151 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (151 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (153 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (151 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (152 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (154 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (160 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (161 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (154 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (160 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (161 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (152 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (154 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (152 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (153 * xMult), yPos - (53 * yMult))] = color;
}