#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 2)] = color;
	Result[int2(xPos + 58, yPos - 13)] = color;
	Result[int2(xPos + 56, yPos - 14)] = color;
	Result[int2(xPos + 57, yPos - 14)] = color;
	Result[int2(xPos + 57, yPos - 15)] = color;
	Result[int2(xPos + 58, yPos - 15)] = color;
	Result[int2(xPos + 34, yPos - 16)] = color;
	Result[int2(xPos + 32, yPos - 17)] = color;
	Result[int2(xPos + 34, yPos - 17)] = color;
	Result[int2(xPos + 33, yPos - 18)] = color;
	Result[int2(xPos + 34, yPos - 18)] = color;
	Result[int2(xPos + 165, yPos - 24)] = color;
	Result[int2(xPos + 164, yPos - 25)] = color;
	Result[int2(xPos + 166, yPos - 25)] = color;
	Result[int2(xPos + 163, yPos - 27)] = color;
	Result[int2(xPos + 166, yPos - 27)] = color;
	Result[int2(xPos + 163, yPos - 28)] = color;
	Result[int2(xPos + 164, yPos - 28)] = color;
	Result[int2(xPos + 163, yPos - 29)] = color;
	Result[int2(xPos + 148, yPos - 30)] = color;
	Result[int2(xPos + 149, yPos - 30)] = color;
	Result[int2(xPos + 148, yPos - 31)] = color;
	Result[int2(xPos + 149, yPos - 31)] = color;
	Result[int2(xPos + 165, yPos - 34)] = color;
	Result[int2(xPos + 166, yPos - 34)] = color;
	Result[int2(xPos + 164, yPos - 35)] = color;
	Result[int2(xPos + 29, yPos - 36)] = color;
	Result[int2(xPos + 30, yPos - 36)] = color;
	Result[int2(xPos + 31, yPos - 36)] = color;
	Result[int2(xPos + 164, yPos - 36)] = color;
	Result[int2(xPos + 165, yPos - 36)] = color;
	Result[int2(xPos + 31, yPos - 37)] = color;
	Result[int2(xPos + 148, yPos - 37)] = color;
	Result[int2(xPos + 164, yPos - 37)] = color;
	Result[int2(xPos + 165, yPos - 37)] = color;
	Result[int2(xPos + 166, yPos - 37)] = color;
	Result[int2(xPos + 30, yPos - 38)] = color;
	Result[int2(xPos + 147, yPos - 38)] = color;
	Result[int2(xPos + 148, yPos - 38)] = color;
	Result[int2(xPos + 165, yPos - 38)] = color;
	Result[int2(xPos + 166, yPos - 38)] = color;
	Result[int2(xPos + 147, yPos - 39)] = color;
	Result[int2(xPos + 148, yPos - 39)] = color;
	Result[int2(xPos + 163, yPos - 39)] = color;
	Result[int2(xPos + 165, yPos - 39)] = color;
	Result[int2(xPos + 166, yPos - 39)] = color;
	Result[int2(xPos + 167, yPos - 39)] = color;
	Result[int2(xPos + 148, yPos - 40)] = color;
	Result[int2(xPos + 150, yPos - 40)] = color;
	Result[int2(xPos + 162, yPos - 40)] = color;
	Result[int2(xPos + 166, yPos - 40)] = color;
	Result[int2(xPos + 148, yPos - 41)] = color;
	Result[int2(xPos + 149, yPos - 41)] = color;
	Result[int2(xPos + 161, yPos - 41)] = color;
	Result[int2(xPos + 164, yPos - 41)] = color;
	Result[int2(xPos + 147, yPos - 42)] = color;
	Result[int2(xPos + 162, yPos - 42)] = color;
	Result[int2(xPos + 163, yPos - 42)] = color;
	Result[int2(xPos + 164, yPos - 42)] = color;
	Result[int2(xPos + 146, yPos - 43)] = color;
	Result[int2(xPos + 149, yPos - 43)] = color;
	Result[int2(xPos + 162, yPos - 43)] = color;
	Result[int2(xPos + 163, yPos - 43)] = color;
	Result[int2(xPos + 146, yPos - 44)] = color;
	Result[int2(xPos + 147, yPos - 45)] = color;
	Result[int2(xPos + 148, yPos - 45)] = color;
	Result[int2(xPos + 149, yPos - 45)] = color;
	Result[int2(xPos + 151, yPos - 47)] = color;
	Result[int2(xPos + 151, yPos - 48)] = color;
	Result[int2(xPos + 153, yPos - 48)] = color;
	Result[int2(xPos + 151, yPos - 49)] = color;
	Result[int2(xPos + 152, yPos - 50)] = color;
	Result[int2(xPos + 154, yPos - 50)] = color;
	Result[int2(xPos + 160, yPos - 50)] = color;
	Result[int2(xPos + 161, yPos - 50)] = color;
	Result[int2(xPos + 154, yPos - 51)] = color;
	Result[int2(xPos + 160, yPos - 51)] = color;
	Result[int2(xPos + 161, yPos - 51)] = color;
	Result[int2(xPos + 152, yPos - 52)] = color;
	Result[int2(xPos + 154, yPos - 52)] = color;
	Result[int2(xPos + 152, yPos - 53)] = color;
	Result[int2(xPos + 153, yPos - 53)] = color;
}