#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 65)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 70)) * yMult)] = color;
}