#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 25)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 72)) * yMult)] = color;
}