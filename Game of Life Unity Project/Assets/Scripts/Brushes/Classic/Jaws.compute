#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 508)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 508)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 503)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 504)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 509)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 506)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 508)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 505)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 506)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 508)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 518)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 516)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 517)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 519)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 520)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 516)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 517)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 516)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 518)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 518)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 387)) * xMult), (yPos - 316)) * yMult)] = color;
	Result[int2((xPos + 389)) * xMult), (yPos - 316)) * yMult)] = color;
	Result[int2((xPos + 390)) * xMult), (yPos - 317)) * yMult)] = color;
	Result[int2((xPos + 386)) * xMult), (yPos - 318)) * yMult)] = color;
	Result[int2((xPos + 389)) * xMult), (yPos - 318)) * yMult)] = color;
	Result[int2((xPos + 385)) * xMult), (yPos - 319)) * yMult)] = color;
	Result[int2((xPos + 386)) * xMult), (yPos - 319)) * yMult)] = color;
	Result[int2((xPos + 387)) * xMult), (yPos - 319)) * yMult)] = color;
	Result[int2((xPos + 398)) * xMult), (yPos - 325)) * yMult)] = color;
	Result[int2((xPos + 397)) * xMult), (yPos - 326)) * yMult)] = color;
	Result[int2((xPos + 399)) * xMult), (yPos - 326)) * yMult)] = color;
	Result[int2((xPos + 396)) * xMult), (yPos - 328)) * yMult)] = color;
	Result[int2((xPos + 399)) * xMult), (yPos - 328)) * yMult)] = color;
	Result[int2((xPos + 396)) * xMult), (yPos - 329)) * yMult)] = color;
	Result[int2((xPos + 397)) * xMult), (yPos - 329)) * yMult)] = color;
	Result[int2((xPos + 396)) * xMult), (yPos - 330)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 548)) * yMult)] = color;
	Result[int2((xPos + 190)) * xMult), (yPos - 549)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 549)) * yMult)] = color;
	Result[int2((xPos + 192)) * xMult), (yPos - 549)) * yMult)] = color;
	Result[int2((xPos + 190)) * xMult), (yPos - 550)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 550)) * yMult)] = color;
	Result[int2((xPos + 192)) * xMult), (yPos - 550)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 551)) * yMult)] = color;
	Result[int2((xPos + 194)) * xMult), (yPos - 551)) * yMult)] = color;
	Result[int2((xPos + 195)) * xMult), (yPos - 551)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 577)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 577)) * yMult)] = color;
	Result[int2((xPos + 164)) * xMult), (yPos - 578)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 578)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 578)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 579)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 579)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 580)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 581)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 582)) * yMult)] = color;
	Result[int2((xPos + 436)) * xMult), (yPos - 636)) * yMult)] = color;
	Result[int2((xPos + 437)) * xMult), (yPos - 636)) * yMult)] = color;
	Result[int2((xPos + 438)) * xMult), (yPos - 636)) * yMult)] = color;
	Result[int2((xPos + 433)) * xMult), (yPos - 637)) * yMult)] = color;
	Result[int2((xPos + 434)) * xMult), (yPos - 637)) * yMult)] = color;
	Result[int2((xPos + 435)) * xMult), (yPos - 637)) * yMult)] = color;
	Result[int2((xPos + 433)) * xMult), (yPos - 638)) * yMult)] = color;
	Result[int2((xPos + 434)) * xMult), (yPos - 638)) * yMult)] = color;
	Result[int2((xPos + 435)) * xMult), (yPos - 638)) * yMult)] = color;
	Result[int2((xPos + 434)) * xMult), (yPos - 639)) * yMult)] = color;
	Result[int2((xPos + 446)) * xMult), (yPos - 644)) * yMult)] = color;
	Result[int2((xPos + 446)) * xMult), (yPos - 645)) * yMult)] = color;
	Result[int2((xPos + 446)) * xMult), (yPos - 646)) * yMult)] = color;
	Result[int2((xPos + 444)) * xMult), (yPos - 647)) * yMult)] = color;
	Result[int2((xPos + 445)) * xMult), (yPos - 647)) * yMult)] = color;
	Result[int2((xPos + 443)) * xMult), (yPos - 648)) * yMult)] = color;
	Result[int2((xPos + 444)) * xMult), (yPos - 648)) * yMult)] = color;
	Result[int2((xPos + 445)) * xMult), (yPos - 648)) * yMult)] = color;
	Result[int2((xPos + 444)) * xMult), (yPos - 649)) * yMult)] = color;
	Result[int2((xPos + 445)) * xMult), (yPos - 649)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 733)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 734)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 734)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 734)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 735)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 735)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 735)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 736)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 736)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 736)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 762)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 762)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 763)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 763)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 763)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 764)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 764)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 765)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 766)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 767)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 1286)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 1286)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 1286)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 1287)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 1287)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 1288)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 1289)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 1289)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 1314)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 1315)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 1315)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 1316)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 1316)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 1318)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 1318)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 1319)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 1704)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 1704)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 1704)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 1705)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 1705)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 1706)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 1707)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 1707)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 1732)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 1733)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 1733)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 1734)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 1734)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 1736)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 1736)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 1737)) * yMult)] = color;
	Result[int2((xPos + 649)) * xMult), (yPos - 2848)) * yMult)] = color;
	Result[int2((xPos + 650)) * xMult), (yPos - 2848)) * yMult)] = color;
	Result[int2((xPos + 648)) * xMult), (yPos - 2849)) * yMult)] = color;
	Result[int2((xPos + 650)) * xMult), (yPos - 2849)) * yMult)] = color;
	Result[int2((xPos + 652)) * xMult), (yPos - 2849)) * yMult)] = color;
	Result[int2((xPos + 653)) * xMult), (yPos - 2849)) * yMult)] = color;
	Result[int2((xPos + 651)) * xMult), (yPos - 2850)) * yMult)] = color;
	Result[int2((xPos + 652)) * xMult), (yPos - 2850)) * yMult)] = color;
	Result[int2((xPos + 653)) * xMult), (yPos - 2850)) * yMult)] = color;
	Result[int2((xPos + 652)) * xMult), (yPos - 2851)) * yMult)] = color;
	Result[int2((xPos + 653)) * xMult), (yPos - 2851)) * yMult)] = color;
	Result[int2((xPos + 625)) * xMult), (yPos - 2875)) * yMult)] = color;
	Result[int2((xPos + 624)) * xMult), (yPos - 2876)) * yMult)] = color;
	Result[int2((xPos + 624)) * xMult), (yPos - 2877)) * yMult)] = color;
	Result[int2((xPos + 625)) * xMult), (yPos - 2877)) * yMult)] = color;
	Result[int2((xPos + 626)) * xMult), (yPos - 2878)) * yMult)] = color;
	Result[int2((xPos + 625)) * xMult), (yPos - 2879)) * yMult)] = color;
	Result[int2((xPos + 626)) * xMult), (yPos - 2879)) * yMult)] = color;
	Result[int2((xPos + 627)) * xMult), (yPos - 2879)) * yMult)] = color;
	Result[int2((xPos + 625)) * xMult), (yPos - 2880)) * yMult)] = color;
	Result[int2((xPos + 626)) * xMult), (yPos - 2880)) * yMult)] = color;
	Result[int2((xPos + 627)) * xMult), (yPos - 2880)) * yMult)] = color;
}