#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 79, yPos)] = color;
	Result[int2(xPos + 77, yPos - 1)] = color;
	Result[int2(xPos + 79, yPos - 1)] = color;
	Result[int2(xPos + 78, yPos - 2)] = color;
	Result[int2(xPos + 79, yPos - 2)] = color;
	Result[int2(xPos + 95, yPos - 7)] = color;
	Result[int2(xPos + 94, yPos - 8)] = color;
	Result[int2(xPos + 94, yPos - 9)] = color;
	Result[int2(xPos + 95, yPos - 9)] = color;
	Result[int2(xPos + 96, yPos - 9)] = color;
	Result[int2(xPos, yPos - 11)] = color;
	Result[int2(xPos + 2, yPos - 11)] = color;
	Result[int2(xPos + 28, yPos - 11)] = color;
	Result[int2(xPos + 29, yPos - 11)] = color;
	Result[int2(xPos + 48, yPos - 11)] = color;
	Result[int2(xPos + 68, yPos - 11)] = color;
	Result[int2(xPos + 69, yPos - 11)] = color;
	Result[int2(xPos + 97, yPos - 11)] = color;
	Result[int2(xPos + 108, yPos - 11)] = color;
	Result[int2(xPos + 109, yPos - 11)] = color;
	Result[int2(xPos + 1, yPos - 12)] = color;
	Result[int2(xPos + 2, yPos - 12)] = color;
	Result[int2(xPos + 28, yPos - 12)] = color;
	Result[int2(xPos + 30, yPos - 12)] = color;
	Result[int2(xPos + 48, yPos - 12)] = color;
	Result[int2(xPos + 50, yPos - 12)] = color;
	Result[int2(xPos + 68, yPos - 12)] = color;
	Result[int2(xPos + 70, yPos - 12)] = color;
	Result[int2(xPos + 83, yPos - 12)] = color;
	Result[int2(xPos + 85, yPos - 12)] = color;
	Result[int2(xPos + 96, yPos - 12)] = color;
	Result[int2(xPos + 97, yPos - 12)] = color;
	Result[int2(xPos + 108, yPos - 12)] = color;
	Result[int2(xPos + 110, yPos - 12)] = color;
	Result[int2(xPos + 1, yPos - 13)] = color;
	Result[int2(xPos + 10, yPos - 13)] = color;
	Result[int2(xPos + 31, yPos - 13)] = color;
	Result[int2(xPos + 33, yPos - 13)] = color;
	Result[int2(xPos + 48, yPos - 13)] = color;
	Result[int2(xPos + 49, yPos - 13)] = color;
	Result[int2(xPos + 71, yPos - 13)] = color;
	Result[int2(xPos + 73, yPos - 13)] = color;
	Result[int2(xPos + 84, yPos - 13)] = color;
	Result[int2(xPos + 85, yPos - 13)] = color;
	Result[int2(xPos + 96, yPos - 13)] = color;
	Result[int2(xPos + 98, yPos - 13)] = color;
	Result[int2(xPos + 111, yPos - 13)] = color;
	Result[int2(xPos + 113, yPos - 13)] = color;
	Result[int2(xPos + 9, yPos - 14)] = color;
	Result[int2(xPos + 10, yPos - 14)] = color;
	Result[int2(xPos + 32, yPos - 14)] = color;
	Result[int2(xPos + 33, yPos - 14)] = color;
	Result[int2(xPos + 72, yPos - 14)] = color;
	Result[int2(xPos + 73, yPos - 14)] = color;
	Result[int2(xPos + 84, yPos - 14)] = color;
	Result[int2(xPos + 112, yPos - 14)] = color;
	Result[int2(xPos + 113, yPos - 14)] = color;
	Result[int2(xPos + 5, yPos - 15)] = color;
	Result[int2(xPos + 6, yPos - 15)] = color;
	Result[int2(xPos + 9, yPos - 15)] = color;
	Result[int2(xPos + 11, yPos - 15)] = color;
	Result[int2(xPos + 41, yPos - 15)] = color;
	Result[int2(xPos + 42, yPos - 15)] = color;
	Result[int2(xPos + 43, yPos - 15)] = color;
	Result[int2(xPos + 45, yPos - 15)] = color;
	Result[int2(xPos + 46, yPos - 15)] = color;
	Result[int2(xPos + 47, yPos - 15)] = color;
	Result[int2(xPos + 55, yPos - 15)] = color;
	Result[int2(xPos + 6, yPos - 16)] = color;
	Result[int2(xPos + 7, yPos - 16)] = color;
	Result[int2(xPos + 43, yPos - 16)] = color;
	Result[int2(xPos + 45, yPos - 16)] = color;
	Result[int2(xPos + 54, yPos - 16)] = color;
	Result[int2(xPos + 55, yPos - 16)] = color;
	Result[int2(xPos + 85, yPos - 16)] = color;
	Result[int2(xPos + 86, yPos - 16)] = color;
	Result[int2(xPos + 87, yPos - 16)] = color;
	Result[int2(xPos + 5, yPos - 17)] = color;
	Result[int2(xPos + 15, yPos - 17)] = color;
	Result[int2(xPos + 16, yPos - 17)] = color;
	Result[int2(xPos + 17, yPos - 17)] = color;
	Result[int2(xPos + 42, yPos - 17)] = color;
	Result[int2(xPos + 46, yPos - 17)] = color;
	Result[int2(xPos + 54, yPos - 17)] = color;
	Result[int2(xPos + 56, yPos - 17)] = color;
	Result[int2(xPos + 87, yPos - 17)] = color;
	Result[int2(xPos + 15, yPos - 18)] = color;
	Result[int2(xPos + 86, yPos - 18)] = color;
	Result[int2(xPos + 16, yPos - 19)] = color;
	Result[int2(xPos + 50, yPos - 19)] = color;
	Result[int2(xPos + 50, yPos - 20)] = color;
	Result[int2(xPos + 51, yPos - 20)] = color;
	Result[int2(xPos + 8, yPos - 21)] = color;
	Result[int2(xPos + 9, yPos - 21)] = color;
	Result[int2(xPos + 10, yPos - 21)] = color;
	Result[int2(xPos + 49, yPos - 21)] = color;
	Result[int2(xPos + 51, yPos - 21)] = color;
	Result[int2(xPos + 10, yPos - 22)] = color;
	Result[int2(xPos + 9, yPos - 23)] = color;
	Result[int2(xPos + 102, yPos - 23)] = color;
	Result[int2(xPos + 103, yPos - 23)] = color;
	Result[int2(xPos + 102, yPos - 24)] = color;
	Result[int2(xPos + 104, yPos - 24)] = color;
	Result[int2(xPos + 102, yPos - 25)] = color;
}