#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (79 * xMult), yPos)] = color;
	Result[int2(xPos + (77 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos, yPos - (11 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (108 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (113 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (112 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (113 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (25 * yMult))] = color;
}