#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 6, yPos)] = color;
	Result[int2(xPos + 7, yPos - 1)] = color;
	Result[int2(xPos + 42, yPos - 1)] = color;
	Result[int2(xPos + 5, yPos - 2)] = color;
	Result[int2(xPos + 6, yPos - 2)] = color;
	Result[int2(xPos + 7, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 41, yPos - 3)] = color;
	Result[int2(xPos + 42, yPos - 3)] = color;
	Result[int2(xPos + 43, yPos - 3)] = color;
	Result[int2(xPos + 25, yPos - 5)] = color;
	Result[int2(xPos + 65, yPos - 5)] = color;
	Result[int2(xPos + 24, yPos - 6)] = color;
	Result[int2(xPos + 26, yPos - 6)] = color;
	Result[int2(xPos + 64, yPos - 6)] = color;
	Result[int2(xPos + 66, yPos - 6)] = color;
	Result[int2(xPos + 46, yPos - 7)] = color;
	Result[int2(xPos + 23, yPos - 8)] = color;
	Result[int2(xPos + 24, yPos - 8)] = color;
	Result[int2(xPos + 28, yPos - 8)] = color;
	Result[int2(xPos + 46, yPos - 8)] = color;
	Result[int2(xPos + 48, yPos - 8)] = color;
	Result[int2(xPos + 63, yPos - 8)] = color;
	Result[int2(xPos + 64, yPos - 8)] = color;
	Result[int2(xPos + 68, yPos - 8)] = color;
	Result[int2(xPos + 23, yPos - 9)] = color;
	Result[int2(xPos + 29, yPos - 9)] = color;
	Result[int2(xPos + 35, yPos - 9)] = color;
	Result[int2(xPos + 46, yPos - 9)] = color;
	Result[int2(xPos + 47, yPos - 9)] = color;
	Result[int2(xPos + 63, yPos - 9)] = color;
	Result[int2(xPos + 69, yPos - 9)] = color;
	Result[int2(xPos + 26, yPos - 10)] = color;
	Result[int2(xPos + 28, yPos - 10)] = color;
	Result[int2(xPos + 33, yPos - 10)] = color;
	Result[int2(xPos + 35, yPos - 10)] = color;
	Result[int2(xPos + 44, yPos - 10)] = color;
	Result[int2(xPos + 66, yPos - 10)] = color;
	Result[int2(xPos + 68, yPos - 10)] = color;
	Result[int2(xPos + 6, yPos - 11)] = color;
	Result[int2(xPos + 25, yPos - 11)] = color;
	Result[int2(xPos + 26, yPos - 11)] = color;
	Result[int2(xPos + 34, yPos - 11)] = color;
	Result[int2(xPos + 35, yPos - 11)] = color;
	Result[int2(xPos + 43, yPos - 11)] = color;
	Result[int2(xPos + 44, yPos - 11)] = color;
	Result[int2(xPos + 51, yPos - 11)] = color;
	Result[int2(xPos + 52, yPos - 11)] = color;
	Result[int2(xPos + 60, yPos - 11)] = color;
	Result[int2(xPos + 61, yPos - 11)] = color;
	Result[int2(xPos + 65, yPos - 11)] = color;
	Result[int2(xPos + 66, yPos - 11)] = color;
	Result[int2(xPos + 6, yPos - 12)] = color;
	Result[int2(xPos + 7, yPos - 12)] = color;
	Result[int2(xPos + 17, yPos - 12)] = color;
	Result[int2(xPos + 18, yPos - 12)] = color;
	Result[int2(xPos + 43, yPos - 12)] = color;
	Result[int2(xPos + 45, yPos - 12)] = color;
	Result[int2(xPos + 51, yPos - 12)] = color;
	Result[int2(xPos + 53, yPos - 12)] = color;
	Result[int2(xPos + 58, yPos - 12)] = color;
	Result[int2(xPos + 60, yPos - 12)] = color;
	Result[int2(xPos + 5, yPos - 13)] = color;
	Result[int2(xPos + 7, yPos - 13)] = color;
	Result[int2(xPos + 17, yPos - 13)] = color;
	Result[int2(xPos + 19, yPos - 13)] = color;
	Result[int2(xPos + 51, yPos - 13)] = color;
	Result[int2(xPos + 57, yPos - 13)] = color;
	Result[int2(xPos + 63, yPos - 13)] = color;
	Result[int2(xPos + 17, yPos - 14)] = color;
	Result[int2(xPos + 58, yPos - 14)] = color;
	Result[int2(xPos + 62, yPos - 14)] = color;
	Result[int2(xPos + 63, yPos - 14)] = color;
	Result[int2(xPos + 10, yPos - 15)] = color;
	Result[int2(xPos + 9, yPos - 16)] = color;
	Result[int2(xPos + 10, yPos - 16)] = color;
	Result[int2(xPos + 60, yPos - 16)] = color;
	Result[int2(xPos + 62, yPos - 16)] = color;
	Result[int2(xPos + 1, yPos - 17)] = color;
	Result[int2(xPos + 9, yPos - 17)] = color;
	Result[int2(xPos + 11, yPos - 17)] = color;
	Result[int2(xPos + 61, yPos - 17)] = color;
	Result[int2(xPos + 1, yPos - 18)] = color;
	Result[int2(xPos + 2, yPos - 18)] = color;
	Result[int2(xPos, yPos - 19)] = color;
	Result[int2(xPos + 2, yPos - 19)] = color;
	Result[int2(xPos + 43, yPos - 19)] = color;
	Result[int2(xPos + 44, yPos - 19)] = color;
	Result[int2(xPos + 45, yPos - 19)] = color;
	Result[int2(xPos + 43, yPos - 20)] = color;
	Result[int2(xPos + 44, yPos - 21)] = color;
}