#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 88, yPos)] = color;
	Result[int2(xPos + 89, yPos - 1)] = color;
	Result[int2(xPos + 90, yPos - 1)] = color;
	Result[int2(xPos + 140, yPos - 1)] = color;
	Result[int2(xPos + 141, yPos - 1)] = color;
	Result[int2(xPos + 88, yPos - 2)] = color;
	Result[int2(xPos + 89, yPos - 2)] = color;
	Result[int2(xPos + 139, yPos - 2)] = color;
	Result[int2(xPos + 141, yPos - 2)] = color;
	Result[int2(xPos + 139, yPos - 3)] = color;
	Result[int2(xPos + 138, yPos - 4)] = color;
	Result[int2(xPos + 139, yPos - 4)] = color;
	Result[int2(xPos + 137, yPos - 5)] = color;
	Result[int2(xPos + 138, yPos - 6)] = color;
	Result[int2(xPos + 139, yPos - 6)] = color;
	Result[int2(xPos + 139, yPos - 7)] = color;
	Result[int2(xPos + 139, yPos - 8)] = color;
	Result[int2(xPos + 141, yPos - 8)] = color;
	Result[int2(xPos + 140, yPos - 9)] = color;
	Result[int2(xPos + 141, yPos - 9)] = color;
	Result[int2(xPos + 90, yPos - 12)] = color;
	Result[int2(xPos + 91, yPos - 12)] = color;
	Result[int2(xPos + 92, yPos - 12)] = color;
	Result[int2(xPos + 95, yPos - 12)] = color;
	Result[int2(xPos + 96, yPos - 12)] = color;
	Result[int2(xPos + 92, yPos - 13)] = color;
	Result[int2(xPos + 94, yPos - 13)] = color;
	Result[int2(xPos + 95, yPos - 13)] = color;
	Result[int2(xPos + 91, yPos - 14)] = color;
	Result[int2(xPos + 96, yPos - 14)] = color;
	Result[int2(xPos + 134, yPos - 56)] = color;
	Result[int2(xPos + 135, yPos - 56)] = color;
	Result[int2(xPos + 134, yPos - 57)] = color;
	Result[int2(xPos + 136, yPos - 57)] = color;
	Result[int2(xPos + 134, yPos - 58)] = color;
	Result[int2(xPos, yPos - 66)] = color;
	Result[int2(xPos + 2, yPos - 66)] = color;
	Result[int2(xPos + 18, yPos - 66)] = color;
	Result[int2(xPos + 38, yPos - 66)] = color;
	Result[int2(xPos + 58, yPos - 66)] = color;
	Result[int2(xPos + 78, yPos - 66)] = color;
	Result[int2(xPos, yPos - 67)] = color;
	Result[int2(xPos + 1, yPos - 67)] = color;
	Result[int2(xPos + 18, yPos - 67)] = color;
	Result[int2(xPos + 19, yPos - 67)] = color;
	Result[int2(xPos + 20, yPos - 67)] = color;
	Result[int2(xPos + 38, yPos - 67)] = color;
	Result[int2(xPos + 39, yPos - 67)] = color;
	Result[int2(xPos + 40, yPos - 67)] = color;
	Result[int2(xPos + 58, yPos - 67)] = color;
	Result[int2(xPos + 59, yPos - 67)] = color;
	Result[int2(xPos + 60, yPos - 67)] = color;
	Result[int2(xPos + 78, yPos - 67)] = color;
	Result[int2(xPos + 79, yPos - 67)] = color;
	Result[int2(xPos + 80, yPos - 67)] = color;
	Result[int2(xPos + 1, yPos - 68)] = color;
	Result[int2(xPos + 21, yPos - 68)] = color;
	Result[int2(xPos + 41, yPos - 68)] = color;
	Result[int2(xPos + 61, yPos - 68)] = color;
	Result[int2(xPos + 81, yPos - 68)] = color;
	Result[int2(xPos + 20, yPos - 69)] = color;
	Result[int2(xPos + 21, yPos - 69)] = color;
	Result[int2(xPos + 40, yPos - 69)] = color;
	Result[int2(xPos + 41, yPos - 69)] = color;
	Result[int2(xPos + 60, yPos - 69)] = color;
	Result[int2(xPos + 61, yPos - 69)] = color;
	Result[int2(xPos + 80, yPos - 69)] = color;
	Result[int2(xPos + 81, yPos - 69)] = color;
	Result[int2(xPos + 2, yPos - 70)] = color;
	Result[int2(xPos + 3, yPos - 70)] = color;
	Result[int2(xPos + 4, yPos - 70)] = color;
	Result[int2(xPos + 2, yPos - 71)] = color;
	Result[int2(xPos + 100, yPos - 71)] = color;
	Result[int2(xPos + 101, yPos - 71)] = color;
	Result[int2(xPos + 120, yPos - 71)] = color;
	Result[int2(xPos + 121, yPos - 71)] = color;
	Result[int2(xPos + 140, yPos - 71)] = color;
	Result[int2(xPos + 141, yPos - 71)] = color;
	Result[int2(xPos + 3, yPos - 72)] = color;
	Result[int2(xPos + 99, yPos - 72)] = color;
	Result[int2(xPos + 101, yPos - 72)] = color;
	Result[int2(xPos + 119, yPos - 72)] = color;
	Result[int2(xPos + 121, yPos - 72)] = color;
	Result[int2(xPos + 139, yPos - 72)] = color;
	Result[int2(xPos + 141, yPos - 72)] = color;
	Result[int2(xPos + 94, yPos - 73)] = color;
	Result[int2(xPos + 99, yPos - 73)] = color;
	Result[int2(xPos + 119, yPos - 73)] = color;
	Result[int2(xPos + 139, yPos - 73)] = color;
	Result[int2(xPos + 93, yPos - 74)] = color;
	Result[int2(xPos + 98, yPos - 74)] = color;
	Result[int2(xPos + 99, yPos - 74)] = color;
	Result[int2(xPos + 104, yPos - 74)] = color;
	Result[int2(xPos + 105, yPos - 74)] = color;
	Result[int2(xPos + 118, yPos - 74)] = color;
	Result[int2(xPos + 119, yPos - 74)] = color;
	Result[int2(xPos + 124, yPos - 74)] = color;
	Result[int2(xPos + 125, yPos - 74)] = color;
	Result[int2(xPos + 138, yPos - 74)] = color;
	Result[int2(xPos + 139, yPos - 74)] = color;
	Result[int2(xPos + 93, yPos - 75)] = color;
	Result[int2(xPos + 94, yPos - 75)] = color;
	Result[int2(xPos + 95, yPos - 75)] = color;
	Result[int2(xPos + 97, yPos - 75)] = color;
	Result[int2(xPos + 103, yPos - 75)] = color;
	Result[int2(xPos + 106, yPos - 75)] = color;
	Result[int2(xPos + 117, yPos - 75)] = color;
	Result[int2(xPos + 123, yPos - 75)] = color;
	Result[int2(xPos + 126, yPos - 75)] = color;
	Result[int2(xPos + 137, yPos - 75)] = color;
	Result[int2(xPos + 89, yPos - 76)] = color;
	Result[int2(xPos + 90, yPos - 76)] = color;
	Result[int2(xPos + 91, yPos - 76)] = color;
	Result[int2(xPos + 98, yPos - 76)] = color;
	Result[int2(xPos + 99, yPos - 76)] = color;
	Result[int2(xPos + 104, yPos - 76)] = color;
	Result[int2(xPos + 105, yPos - 76)] = color;
	Result[int2(xPos + 118, yPos - 76)] = color;
	Result[int2(xPos + 119, yPos - 76)] = color;
	Result[int2(xPos + 124, yPos - 76)] = color;
	Result[int2(xPos + 125, yPos - 76)] = color;
	Result[int2(xPos + 138, yPos - 76)] = color;
	Result[int2(xPos + 139, yPos - 76)] = color;
	Result[int2(xPos + 89, yPos - 77)] = color;
	Result[int2(xPos + 99, yPos - 77)] = color;
	Result[int2(xPos + 119, yPos - 77)] = color;
	Result[int2(xPos + 127, yPos - 77)] = color;
	Result[int2(xPos + 128, yPos - 77)] = color;
	Result[int2(xPos + 129, yPos - 77)] = color;
	Result[int2(xPos + 139, yPos - 77)] = color;
	Result[int2(xPos + 43, yPos - 78)] = color;
	Result[int2(xPos + 90, yPos - 78)] = color;
	Result[int2(xPos + 99, yPos - 78)] = color;
	Result[int2(xPos + 101, yPos - 78)] = color;
	Result[int2(xPos + 119, yPos - 78)] = color;
	Result[int2(xPos + 121, yPos - 78)] = color;
	Result[int2(xPos + 127, yPos - 78)] = color;
	Result[int2(xPos + 139, yPos - 78)] = color;
	Result[int2(xPos + 141, yPos - 78)] = color;
	Result[int2(xPos + 42, yPos - 79)] = color;
	Result[int2(xPos + 100, yPos - 79)] = color;
	Result[int2(xPos + 101, yPos - 79)] = color;
	Result[int2(xPos + 120, yPos - 79)] = color;
	Result[int2(xPos + 121, yPos - 79)] = color;
	Result[int2(xPos + 128, yPos - 79)] = color;
	Result[int2(xPos + 140, yPos - 79)] = color;
	Result[int2(xPos + 141, yPos - 79)] = color;
	Result[int2(xPos + 42, yPos - 80)] = color;
	Result[int2(xPos + 43, yPos - 80)] = color;
	Result[int2(xPos + 44, yPos - 80)] = color;
	Result[int2(xPos + 60, yPos - 81)] = color;
	Result[int2(xPos + 61, yPos - 81)] = color;
	Result[int2(xPos + 80, yPos - 81)] = color;
	Result[int2(xPos + 81, yPos - 81)] = color;
	Result[int2(xPos + 41, yPos - 82)] = color;
	Result[int2(xPos + 61, yPos - 82)] = color;
	Result[int2(xPos + 81, yPos - 82)] = color;
	Result[int2(xPos + 40, yPos - 83)] = color;
	Result[int2(xPos + 41, yPos - 83)] = color;
	Result[int2(xPos + 58, yPos - 83)] = color;
	Result[int2(xPos + 59, yPos - 83)] = color;
	Result[int2(xPos + 60, yPos - 83)] = color;
	Result[int2(xPos + 78, yPos - 83)] = color;
	Result[int2(xPos + 79, yPos - 83)] = color;
	Result[int2(xPos + 80, yPos - 83)] = color;
	Result[int2(xPos + 40, yPos - 84)] = color;
	Result[int2(xPos + 42, yPos - 84)] = color;
	Result[int2(xPos + 58, yPos - 84)] = color;
	Result[int2(xPos + 78, yPos - 84)] = color;
	Result[int2(xPos + 79, yPos - 97)] = color;
	Result[int2(xPos + 77, yPos - 98)] = color;
	Result[int2(xPos + 79, yPos - 98)] = color;
	Result[int2(xPos + 78, yPos - 99)] = color;
	Result[int2(xPos + 79, yPos - 99)] = color;
	Result[int2(xPos + 35, yPos - 100)] = color;
	Result[int2(xPos + 36, yPos - 101)] = color;
	Result[int2(xPos + 100, yPos - 101)] = color;
	Result[int2(xPos + 101, yPos - 101)] = color;
	Result[int2(xPos + 120, yPos - 101)] = color;
	Result[int2(xPos + 121, yPos - 101)] = color;
	Result[int2(xPos + 140, yPos - 101)] = color;
	Result[int2(xPos + 141, yPos - 101)] = color;
	Result[int2(xPos + 34, yPos - 102)] = color;
	Result[int2(xPos + 35, yPos - 102)] = color;
	Result[int2(xPos + 36, yPos - 102)] = color;
	Result[int2(xPos + 99, yPos - 102)] = color;
	Result[int2(xPos + 101, yPos - 102)] = color;
	Result[int2(xPos + 119, yPos - 102)] = color;
	Result[int2(xPos + 121, yPos - 102)] = color;
	Result[int2(xPos + 139, yPos - 102)] = color;
	Result[int2(xPos + 141, yPos - 102)] = color;
	Result[int2(xPos + 88, yPos - 103)] = color;
	Result[int2(xPos + 99, yPos - 103)] = color;
	Result[int2(xPos + 119, yPos - 103)] = color;
	Result[int2(xPos + 139, yPos - 103)] = color;
	Result[int2(xPos + 32, yPos - 104)] = color;
	Result[int2(xPos + 33, yPos - 104)] = color;
	Result[int2(xPos + 88, yPos - 104)] = color;
	Result[int2(xPos + 90, yPos - 104)] = color;
	Result[int2(xPos + 98, yPos - 104)] = color;
	Result[int2(xPos + 99, yPos - 104)] = color;
	Result[int2(xPos + 107, yPos - 104)] = color;
	Result[int2(xPos + 118, yPos - 104)] = color;
	Result[int2(xPos + 119, yPos - 104)] = color;
	Result[int2(xPos + 127, yPos - 104)] = color;
	Result[int2(xPos + 138, yPos - 104)] = color;
	Result[int2(xPos + 139, yPos - 104)] = color;
	Result[int2(xPos + 31, yPos - 105)] = color;
	Result[int2(xPos + 33, yPos - 105)] = color;
	Result[int2(xPos + 58, yPos - 105)] = color;
	Result[int2(xPos + 59, yPos - 105)] = color;
	Result[int2(xPos + 60, yPos - 105)] = color;
	Result[int2(xPos + 78, yPos - 105)] = color;
	Result[int2(xPos + 79, yPos - 105)] = color;
	Result[int2(xPos + 80, yPos - 105)] = color;
	Result[int2(xPos + 84, yPos - 105)] = color;
	Result[int2(xPos + 85, yPos - 105)] = color;
	Result[int2(xPos + 88, yPos - 105)] = color;
	Result[int2(xPos + 89, yPos - 105)] = color;
	Result[int2(xPos + 97, yPos - 105)] = color;
	Result[int2(xPos + 107, yPos - 105)] = color;
	Result[int2(xPos + 117, yPos - 105)] = color;
	Result[int2(xPos + 127, yPos - 105)] = color;
	Result[int2(xPos + 137, yPos - 105)] = color;
	Result[int2(xPos + 33, yPos - 106)] = color;
	Result[int2(xPos + 84, yPos - 106)] = color;
	Result[int2(xPos + 86, yPos - 106)] = color;
	Result[int2(xPos + 98, yPos - 106)] = color;
	Result[int2(xPos + 99, yPos - 106)] = color;
	Result[int2(xPos + 107, yPos - 106)] = color;
	Result[int2(xPos + 118, yPos - 106)] = color;
	Result[int2(xPos + 119, yPos - 106)] = color;
	Result[int2(xPos + 127, yPos - 106)] = color;
	Result[int2(xPos + 138, yPos - 106)] = color;
	Result[int2(xPos + 139, yPos - 106)] = color;
	Result[int2(xPos + 84, yPos - 107)] = color;
	Result[int2(xPos + 99, yPos - 107)] = color;
	Result[int2(xPos + 119, yPos - 107)] = color;
	Result[int2(xPos + 139, yPos - 107)] = color;
	Result[int2(xPos + 99, yPos - 108)] = color;
	Result[int2(xPos + 101, yPos - 108)] = color;
	Result[int2(xPos + 119, yPos - 108)] = color;
	Result[int2(xPos + 121, yPos - 108)] = color;
	Result[int2(xPos + 128, yPos - 108)] = color;
	Result[int2(xPos + 129, yPos - 108)] = color;
	Result[int2(xPos + 139, yPos - 108)] = color;
	Result[int2(xPos + 141, yPos - 108)] = color;
	Result[int2(xPos + 100, yPos - 109)] = color;
	Result[int2(xPos + 101, yPos - 109)] = color;
	Result[int2(xPos + 120, yPos - 109)] = color;
	Result[int2(xPos + 121, yPos - 109)] = color;
	Result[int2(xPos + 128, yPos - 109)] = color;
	Result[int2(xPos + 130, yPos - 109)] = color;
	Result[int2(xPos + 140, yPos - 109)] = color;
	Result[int2(xPos + 141, yPos - 109)] = color;
	Result[int2(xPos + 128, yPos - 110)] = color;
	Result[int2(xPos + 78, yPos - 111)] = color;
	Result[int2(xPos + 79, yPos - 111)] = color;
	Result[int2(xPos + 77, yPos - 112)] = color;
	Result[int2(xPos + 79, yPos - 112)] = color;
	Result[int2(xPos + 79, yPos - 113)] = color;
}