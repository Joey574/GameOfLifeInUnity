#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 88)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 97)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 130)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 113)) * yMult)] = color;
}