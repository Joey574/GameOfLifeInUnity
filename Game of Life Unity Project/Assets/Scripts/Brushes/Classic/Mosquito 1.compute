#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 1660, yPos)] = color;
	Result[int2(xPos + 1661, yPos)] = color;
	Result[int2(xPos + 1662, yPos)] = color;
	Result[int2(xPos + 1663, yPos)] = color;
	Result[int2(xPos + 1659, yPos - 1)] = color;
	Result[int2(xPos + 1663, yPos - 1)] = color;
	Result[int2(xPos + 1663, yPos - 2)] = color;
	Result[int2(xPos + 1662, yPos - 3)] = color;
	Result[int2(xPos + 1790, yPos - 32)] = color;
	Result[int2(xPos + 1791, yPos - 32)] = color;
	Result[int2(xPos + 1792, yPos - 32)] = color;
	Result[int2(xPos + 1793, yPos - 32)] = color;
	Result[int2(xPos + 1789, yPos - 33)] = color;
	Result[int2(xPos + 1793, yPos - 33)] = color;
	Result[int2(xPos + 1793, yPos - 34)] = color;
	Result[int2(xPos + 1792, yPos - 35)] = color;
	Result[int2(xPos + 1790, yPos - 38)] = color;
	Result[int2(xPos + 1791, yPos - 39)] = color;
	Result[int2(xPos + 1791, yPos - 40)] = color;
	Result[int2(xPos + 1790, yPos - 41)] = color;
	Result[int2(xPos + 1791, yPos - 41)] = color;
	Result[int2(xPos + 1789, yPos - 42)] = color;
	Result[int2(xPos + 1790, yPos - 46)] = color;
	Result[int2(xPos + 1791, yPos - 46)] = color;
	Result[int2(xPos + 1792, yPos - 46)] = color;
	Result[int2(xPos + 1793, yPos - 46)] = color;
	Result[int2(xPos + 1789, yPos - 47)] = color;
	Result[int2(xPos + 1793, yPos - 47)] = color;
	Result[int2(xPos + 1793, yPos - 48)] = color;
	Result[int2(xPos + 1792, yPos - 49)] = color;
	Result[int2(xPos + 108, yPos - 330)] = color;
	Result[int2(xPos + 109, yPos - 330)] = color;
	Result[int2(xPos + 107, yPos - 331)] = color;
	Result[int2(xPos + 108, yPos - 331)] = color;
	Result[int2(xPos + 109, yPos - 331)] = color;
	Result[int2(xPos + 110, yPos - 331)] = color;
	Result[int2(xPos + 107, yPos - 332)] = color;
	Result[int2(xPos + 108, yPos - 332)] = color;
	Result[int2(xPos + 110, yPos - 332)] = color;
	Result[int2(xPos + 111, yPos - 332)] = color;
	Result[int2(xPos + 109, yPos - 333)] = color;
	Result[int2(xPos + 110, yPos - 333)] = color;
	Result[int2(xPos + 95, yPos - 364)] = color;
	Result[int2(xPos + 96, yPos - 364)] = color;
	Result[int2(xPos + 94, yPos - 365)] = color;
	Result[int2(xPos + 95, yPos - 365)] = color;
	Result[int2(xPos + 96, yPos - 365)] = color;
	Result[int2(xPos + 97, yPos - 365)] = color;
	Result[int2(xPos + 94, yPos - 366)] = color;
	Result[int2(xPos + 95, yPos - 366)] = color;
	Result[int2(xPos + 97, yPos - 366)] = color;
	Result[int2(xPos + 98, yPos - 366)] = color;
	Result[int2(xPos + 96, yPos - 367)] = color;
	Result[int2(xPos + 97, yPos - 367)] = color;
	Result[int2(xPos + 98, yPos - 381)] = color;
	Result[int2(xPos + 99, yPos - 382)] = color;
	Result[int2(xPos + 94, yPos - 383)] = color;
	Result[int2(xPos + 99, yPos - 383)] = color;
	Result[int2(xPos + 95, yPos - 384)] = color;
	Result[int2(xPos + 96, yPos - 384)] = color;
	Result[int2(xPos + 97, yPos - 384)] = color;
	Result[int2(xPos + 98, yPos - 384)] = color;
	Result[int2(xPos + 99, yPos - 384)] = color;
	Result[int2(xPos + 201, yPos - 390)] = color;
	Result[int2(xPos + 202, yPos - 390)] = color;
	Result[int2(xPos + 203, yPos - 390)] = color;
	Result[int2(xPos + 204, yPos - 390)] = color;
	Result[int2(xPos + 205, yPos - 390)] = color;
	Result[int2(xPos + 206, yPos - 390)] = color;
	Result[int2(xPos + 133, yPos - 391)] = color;
	Result[int2(xPos + 134, yPos - 391)] = color;
	Result[int2(xPos + 135, yPos - 391)] = color;
	Result[int2(xPos + 136, yPos - 391)] = color;
	Result[int2(xPos + 137, yPos - 391)] = color;
	Result[int2(xPos + 202, yPos - 391)] = color;
	Result[int2(xPos + 203, yPos - 391)] = color;
	Result[int2(xPos + 204, yPos - 391)] = color;
	Result[int2(xPos + 132, yPos - 392)] = color;
	Result[int2(xPos + 137, yPos - 392)] = color;
	Result[int2(xPos + 205, yPos - 392)] = color;
	Result[int2(xPos + 137, yPos - 393)] = color;
	Result[int2(xPos + 136, yPos - 394)] = color;
	Result[int2(xPos + 1, yPos - 397)] = color;
	Result[int2(xPos + 2, yPos - 397)] = color;
	Result[int2(xPos + 3, yPos - 397)] = color;
	Result[int2(xPos + 4, yPos - 397)] = color;
	Result[int2(xPos + 5, yPos - 397)] = color;
	Result[int2(xPos, yPos - 398)] = color;
	Result[int2(xPos + 5, yPos - 398)] = color;
	Result[int2(xPos + 5, yPos - 399)] = color;
	Result[int2(xPos + 4, yPos - 400)] = color;
	Result[int2(xPos + 180, yPos - 408)] = color;
	Result[int2(xPos + 181, yPos - 408)] = color;
	Result[int2(xPos + 178, yPos - 409)] = color;
	Result[int2(xPos + 179, yPos - 409)] = color;
	Result[int2(xPos + 181, yPos - 409)] = color;
	Result[int2(xPos + 182, yPos - 409)] = color;
	Result[int2(xPos + 178, yPos - 410)] = color;
	Result[int2(xPos + 179, yPos - 410)] = color;
	Result[int2(xPos + 180, yPos - 410)] = color;
	Result[int2(xPos + 181, yPos - 410)] = color;
	Result[int2(xPos + 179, yPos - 411)] = color;
	Result[int2(xPos + 180, yPos - 411)] = color;
}