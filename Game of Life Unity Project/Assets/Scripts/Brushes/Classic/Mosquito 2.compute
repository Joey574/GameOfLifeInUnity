#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (1510 * xMult), yPos)] = color;
	Result[int2(xPos + (1511 * xMult), yPos)] = color;
	Result[int2(xPos + (1512 * xMult), yPos)] = color;
	Result[int2(xPos + (1513 * xMult), yPos)] = color;
	Result[int2(xPos + (1509 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (1513 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (1513 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (1512 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (1640 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (1641 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (1642 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (1643 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (1639 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (1643 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (1643 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (1642 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (1640 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (1641 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (1641 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (1640 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (1641 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (1639 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (1640 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (1641 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (1642 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (1643 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (1639 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (1643 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (1643 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (1642 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (175 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (175 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (175 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (175 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (176 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (176 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (176 * yMult))] = color;
	Result[int2(xPos + (98 * xMult), yPos - (176 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (177 * yMult))] = color;
	Result[int2(xPos + (99 * xMult), yPos - (178 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (207 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (207 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (207 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (207 * yMult))] = color;
	Result[int2(xPos, yPos - (208 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (208 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (209 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (210 * yMult))] = color;
	Result[int2(xPos + (411 * xMult), yPos - (270 * yMult))] = color;
	Result[int2(xPos + (412 * xMult), yPos - (270 * yMult))] = color;
	Result[int2(xPos + (413 * xMult), yPos - (270 * yMult))] = color;
	Result[int2(xPos + (414 * xMult), yPos - (270 * yMult))] = color;
	Result[int2(xPos + (415 * xMult), yPos - (270 * yMult))] = color;
	Result[int2(xPos + (416 * xMult), yPos - (270 * yMult))] = color;
	Result[int2(xPos + (412 * xMult), yPos - (271 * yMult))] = color;
	Result[int2(xPos + (413 * xMult), yPos - (271 * yMult))] = color;
	Result[int2(xPos + (414 * xMult), yPos - (271 * yMult))] = color;
	Result[int2(xPos + (415 * xMult), yPos - (272 * yMult))] = color;
	Result[int2(xPos + (393 * xMult), yPos - (287 * yMult))] = color;
	Result[int2(xPos + (388 * xMult), yPos - (288 * yMult))] = color;
	Result[int2(xPos + (389 * xMult), yPos - (289 * yMult))] = color;
	Result[int2(xPos + (390 * xMult), yPos - (289 * yMult))] = color;
	Result[int2(xPos + (391 * xMult), yPos - (289 * yMult))] = color;
	Result[int2(xPos + (392 * xMult), yPos - (289 * yMult))] = color;
	Result[int2(xPos + (388 * xMult), yPos - (290 * yMult))] = color;
	Result[int2(xPos + (390 * xMult), yPos - (290 * yMult))] = color;
	Result[int2(xPos + (391 * xMult), yPos - (290 * yMult))] = color;
	Result[int2(xPos + (392 * xMult), yPos - (290 * yMult))] = color;
	Result[int2(xPos + (203 * xMult), yPos - (296 * yMult))] = color;
	Result[int2(xPos + (204 * xMult), yPos - (297 * yMult))] = color;
	Result[int2(xPos + (199 * xMult), yPos - (298 * yMult))] = color;
	Result[int2(xPos + (204 * xMult), yPos - (298 * yMult))] = color;
	Result[int2(xPos + (200 * xMult), yPos - (299 * yMult))] = color;
	Result[int2(xPos + (201 * xMult), yPos - (299 * yMult))] = color;
	Result[int2(xPos + (202 * xMult), yPos - (299 * yMult))] = color;
	Result[int2(xPos + (203 * xMult), yPos - (299 * yMult))] = color;
	Result[int2(xPos + (204 * xMult), yPos - (299 * yMult))] = color;
	Result[int2(xPos + (173 * xMult), yPos - (311 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (311 * yMult))] = color;
	Result[int2(xPos + (175 * xMult), yPos - (311 * yMult))] = color;
	Result[int2(xPos + (176 * xMult), yPos - (311 * yMult))] = color;
	Result[int2(xPos + (172 * xMult), yPos - (312 * yMult))] = color;
	Result[int2(xPos + (176 * xMult), yPos - (312 * yMult))] = color;
	Result[int2(xPos + (176 * xMult), yPos - (313 * yMult))] = color;
	Result[int2(xPos + (175 * xMult), yPos - (314 * yMult))] = color;
}