#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (2622 * xMult), yPos)] = color;
	Result[int2(xPos + (2623 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (2619 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (2623 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (2620 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (2621 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (2622 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (2623 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (2752 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (2753 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (2749 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (2753 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (2750 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (2751 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (2752 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (2753 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (2749 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (2750 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (2751 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (2751 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (2751 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (2750 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (2752 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (2753 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (2749 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (2753 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (2750 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (2751 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (2752 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (2753 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (175 * xMult), yPos - (394 * yMult))] = color;
	Result[int2(xPos + (173 * xMult), yPos - (395 * yMult))] = color;
	Result[int2(xPos + (176 * xMult), yPos - (395 * yMult))] = color;
	Result[int2(xPos + (177 * xMult), yPos - (395 * yMult))] = color;
	Result[int2(xPos + (173 * xMult), yPos - (396 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (396 * yMult))] = color;
	Result[int2(xPos + (175 * xMult), yPos - (396 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (397 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (437 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (438 * yMult))] = color;
	Result[int2(xPos, yPos - (439 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (439 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (440 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (440 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (440 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (440 * yMult))] = color;
	Result[int2(xPos + (793 * xMult), yPos - (580 * yMult))] = color;
	Result[int2(xPos + (792 * xMult), yPos - (581 * yMult))] = color;
	Result[int2(xPos + (793 * xMult), yPos - (581 * yMult))] = color;
	Result[int2(xPos + (791 * xMult), yPos - (582 * yMult))] = color;
	Result[int2(xPos + (793 * xMult), yPos - (582 * yMult))] = color;
	Result[int2(xPos + (824 * xMult), yPos - (599 * yMult))] = color;
	Result[int2(xPos + (825 * xMult), yPos - (599 * yMult))] = color;
	Result[int2(xPos + (826 * xMult), yPos - (599 * yMult))] = color;
	Result[int2(xPos + (305 * xMult), yPos - (633 * yMult))] = color;
	Result[int2(xPos + (306 * xMult), yPos - (633 * yMult))] = color;
	Result[int2(xPos + (307 * xMult), yPos - (633 * yMult))] = color;
	Result[int2(xPos + (308 * xMult), yPos - (633 * yMult))] = color;
	Result[int2(xPos + (309 * xMult), yPos - (633 * yMult))] = color;
	Result[int2(xPos + (304 * xMult), yPos - (634 * yMult))] = color;
	Result[int2(xPos + (309 * xMult), yPos - (634 * yMult))] = color;
	Result[int2(xPos + (309 * xMult), yPos - (635 * yMult))] = color;
	Result[int2(xPos + (308 * xMult), yPos - (636 * yMult))] = color;
	Result[int2(xPos + (280 * xMult), yPos - (646 * yMult))] = color;
	Result[int2(xPos + (281 * xMult), yPos - (647 * yMult))] = color;
	Result[int2(xPos + (277 * xMult), yPos - (648 * yMult))] = color;
	Result[int2(xPos + (281 * xMult), yPos - (648 * yMult))] = color;
	Result[int2(xPos + (278 * xMult), yPos - (649 * yMult))] = color;
	Result[int2(xPos + (279 * xMult), yPos - (649 * yMult))] = color;
	Result[int2(xPos + (280 * xMult), yPos - (649 * yMult))] = color;
	Result[int2(xPos + (281 * xMult), yPos - (649 * yMult))] = color;
}