#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 98, yPos)] = color;
	Result[int2(xPos + 96, yPos - 1)] = color;
	Result[int2(xPos + 98, yPos - 1)] = color;
	Result[int2(xPos + 118, yPos - 1)] = color;
	Result[int2(xPos + 97, yPos - 2)] = color;
	Result[int2(xPos + 98, yPos - 2)] = color;
	Result[int2(xPos + 117, yPos - 2)] = color;
	Result[int2(xPos + 118, yPos - 2)] = color;
	Result[int2(xPos + 20, yPos - 3)] = color;
	Result[int2(xPos + 21, yPos - 3)] = color;
	Result[int2(xPos + 40, yPos - 3)] = color;
	Result[int2(xPos + 41, yPos - 3)] = color;
	Result[int2(xPos + 60, yPos - 3)] = color;
	Result[int2(xPos + 61, yPos - 3)] = color;
	Result[int2(xPos + 90, yPos - 3)] = color;
	Result[int2(xPos + 91, yPos - 3)] = color;
	Result[int2(xPos + 110, yPos - 3)] = color;
	Result[int2(xPos + 111, yPos - 3)] = color;
	Result[int2(xPos + 117, yPos - 3)] = color;
	Result[int2(xPos + 119, yPos - 3)] = color;
	Result[int2(xPos + 21, yPos - 4)] = color;
	Result[int2(xPos + 41, yPos - 4)] = color;
	Result[int2(xPos + 61, yPos - 4)] = color;
	Result[int2(xPos + 91, yPos - 4)] = color;
	Result[int2(xPos + 99, yPos - 4)] = color;
	Result[int2(xPos + 111, yPos - 4)] = color;
	Result[int2(xPos, yPos - 5)] = color;
	Result[int2(xPos + 1, yPos - 5)] = color;
	Result[int2(xPos + 21, yPos - 5)] = color;
	Result[int2(xPos + 23, yPos - 5)] = color;
	Result[int2(xPos + 41, yPos - 5)] = color;
	Result[int2(xPos + 43, yPos - 5)] = color;
	Result[int2(xPos + 61, yPos - 5)] = color;
	Result[int2(xPos + 63, yPos - 5)] = color;
	Result[int2(xPos + 91, yPos - 5)] = color;
	Result[int2(xPos + 93, yPos - 5)] = color;
	Result[int2(xPos + 97, yPos - 5)] = color;
	Result[int2(xPos + 98, yPos - 5)] = color;
	Result[int2(xPos + 111, yPos - 5)] = color;
	Result[int2(xPos + 113, yPos - 5)] = color;
	Result[int2(xPos + 1, yPos - 6)] = color;
	Result[int2(xPos + 2, yPos - 6)] = color;
	Result[int2(xPos + 22, yPos - 6)] = color;
	Result[int2(xPos + 23, yPos - 6)] = color;
	Result[int2(xPos + 42, yPos - 6)] = color;
	Result[int2(xPos + 43, yPos - 6)] = color;
	Result[int2(xPos + 62, yPos - 6)] = color;
	Result[int2(xPos + 63, yPos - 6)] = color;
	Result[int2(xPos + 92, yPos - 6)] = color;
	Result[int2(xPos + 93, yPos - 6)] = color;
	Result[int2(xPos + 98, yPos - 6)] = color;
	Result[int2(xPos + 99, yPos - 6)] = color;
	Result[int2(xPos + 112, yPos - 6)] = color;
	Result[int2(xPos + 113, yPos - 6)] = color;
	Result[int2(xPos, yPos - 7)] = color;
	Result[int2(xPos + 4, yPos - 7)] = color;
	Result[int2(xPos + 5, yPos - 7)] = color;
	Result[int2(xPos + 116, yPos - 7)] = color;
	Result[int2(xPos + 117, yPos - 7)] = color;
	Result[int2(xPos + 4, yPos - 8)] = color;
	Result[int2(xPos + 6, yPos - 8)] = color;
	Result[int2(xPos + 116, yPos - 8)] = color;
	Result[int2(xPos + 4, yPos - 9)] = color;
	Result[int2(xPos + 116, yPos - 9)] = color;
	Result[int2(xPos + 115, yPos - 10)] = color;
	Result[int2(xPos + 116, yPos - 10)] = color;
	Result[int2(xPos + 69, yPos - 11)] = color;
	Result[int2(xPos + 70, yPos - 11)] = color;
	Result[int2(xPos + 93, yPos - 11)] = color;
	Result[int2(xPos + 94, yPos - 11)] = color;
	Result[int2(xPos + 99, yPos - 11)] = color;
	Result[int2(xPos + 100, yPos - 11)] = color;
	Result[int2(xPos + 119, yPos - 11)] = color;
	Result[int2(xPos + 120, yPos - 11)] = color;
	Result[int2(xPos + 69, yPos - 12)] = color;
	Result[int2(xPos + 71, yPos - 12)] = color;
	Result[int2(xPos + 94, yPos - 12)] = color;
	Result[int2(xPos + 95, yPos - 12)] = color;
	Result[int2(xPos + 99, yPos - 12)] = color;
	Result[int2(xPos + 101, yPos - 12)] = color;
	Result[int2(xPos + 119, yPos - 12)] = color;
	Result[int2(xPos + 121, yPos - 12)] = color;
	Result[int2(xPos + 47, yPos - 13)] = color;
	Result[int2(xPos + 48, yPos - 13)] = color;
	Result[int2(xPos + 49, yPos - 13)] = color;
	Result[int2(xPos + 71, yPos - 13)] = color;
	Result[int2(xPos + 93, yPos - 13)] = color;
	Result[int2(xPos + 101, yPos - 13)] = color;
	Result[int2(xPos + 121, yPos - 13)] = color;
	Result[int2(xPos + 49, yPos - 14)] = color;
	Result[int2(xPos + 71, yPos - 14)] = color;
	Result[int2(xPos + 72, yPos - 14)] = color;
	Result[int2(xPos + 101, yPos - 14)] = color;
	Result[int2(xPos + 102, yPos - 14)] = color;
	Result[int2(xPos + 113, yPos - 14)] = color;
	Result[int2(xPos + 115, yPos - 14)] = color;
	Result[int2(xPos + 121, yPos - 14)] = color;
	Result[int2(xPos + 122, yPos - 14)] = color;
	Result[int2(xPos + 48, yPos - 15)] = color;
	Result[int2(xPos + 94, yPos - 15)] = color;
	Result[int2(xPos + 95, yPos - 15)] = color;
	Result[int2(xPos + 114, yPos - 15)] = color;
	Result[int2(xPos + 115, yPos - 15)] = color;
	Result[int2(xPos + 52, yPos - 16)] = color;
	Result[int2(xPos + 53, yPos - 16)] = color;
	Result[int2(xPos + 94, yPos - 16)] = color;
	Result[int2(xPos + 96, yPos - 16)] = color;
	Result[int2(xPos + 114, yPos - 16)] = color;
	Result[int2(xPos + 48, yPos - 17)] = color;
	Result[int2(xPos + 51, yPos - 17)] = color;
	Result[int2(xPos + 52, yPos - 17)] = color;
	Result[int2(xPos + 94, yPos - 17)] = color;
	Result[int2(xPos + 48, yPos - 18)] = color;
	Result[int2(xPos + 49, yPos - 18)] = color;
	Result[int2(xPos + 53, yPos - 18)] = color;
	Result[int2(xPos + 47, yPos - 19)] = color;
	Result[int2(xPos + 49, yPos - 19)] = color;
	Result[int2(xPos + 53, yPos - 22)] = color;
	Result[int2(xPos + 54, yPos - 22)] = color;
	Result[int2(xPos + 53, yPos - 23)] = color;
	Result[int2(xPos + 55, yPos - 23)] = color;
	Result[int2(xPos + 53, yPos - 24)] = color;
}