#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (175 * xMult), yPos)] = color;
	Result[int2(xPos + (174 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (175 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (176 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (259 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (259 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (261 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (254 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (255 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (259 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (260 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (253 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (256 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (175 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (253 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (256 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (173 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (174 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (254 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (255 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (175 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (228 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (230 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (229 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (230 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (265 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (229 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (265 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (267 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (251 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (265 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (266 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (237 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (239 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (250 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (251 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (237 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (238 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (250 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (252 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (260 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (232 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (234 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (238 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (258 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (259 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (233 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (234 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (259 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (260 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (233 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (259 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (260 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (261 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (259 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (260 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (257 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (256 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (257 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (222 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (223 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (256 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (258 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (141 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (142 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (223 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (142 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (220 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (221 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (222 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos, yPos - (31 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (139 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (140 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (141 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (220 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (139 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (233 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (234 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (152 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (153 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (234 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (153 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (231 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (232 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (233 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (150 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (151 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (152 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (231 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (150 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (37 * yMult))] = color;
}