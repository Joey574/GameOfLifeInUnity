#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (46 * xMult), yPos)] = color;
	Result[int2(xPos + (48 * xMult), yPos)] = color;
	Result[int2(xPos + (47 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (142 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (143 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (124 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (142 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (143 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos, yPos - (7 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (118 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (119 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (142 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (143 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (119 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (120 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (124 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (80 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (118 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (128 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (126 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (121 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (128 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (121 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (12 * yMult))] = color;
}