#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 78)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 116)) * yMult)] = color;
}