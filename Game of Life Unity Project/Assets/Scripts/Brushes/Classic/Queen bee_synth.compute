#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 9, yPos)] = color;
	Result[int2(xPos + 10, yPos - 1)] = color;
	Result[int2(xPos + 11, yPos - 1)] = color;
	Result[int2(xPos + 9, yPos - 2)] = color;
	Result[int2(xPos + 10, yPos - 2)] = color;
	Result[int2(xPos + 101, yPos - 2)] = color;
	Result[int2(xPos + 14, yPos - 3)] = color;
	Result[int2(xPos + 26, yPos - 3)] = color;
	Result[int2(xPos + 102, yPos - 3)] = color;
	Result[int2(xPos + 13, yPos - 4)] = color;
	Result[int2(xPos + 26, yPos - 4)] = color;
	Result[int2(xPos + 28, yPos - 4)] = color;
	Result[int2(xPos + 100, yPos - 4)] = color;
	Result[int2(xPos + 101, yPos - 4)] = color;
	Result[int2(xPos + 102, yPos - 4)] = color;
	Result[int2(xPos + 13, yPos - 5)] = color;
	Result[int2(xPos + 14, yPos - 5)] = color;
	Result[int2(xPos + 15, yPos - 5)] = color;
	Result[int2(xPos + 26, yPos - 5)] = color;
	Result[int2(xPos + 27, yPos - 5)] = color;
	Result[int2(xPos + 103, yPos - 6)] = color;
	Result[int2(xPos + 103, yPos - 7)] = color;
	Result[int2(xPos + 104, yPos - 7)] = color;
	Result[int2(xPos + 102, yPos - 8)] = color;
	Result[int2(xPos + 104, yPos - 8)] = color;
	Result[int2(xPos + 16, yPos - 10)] = color;
	Result[int2(xPos + 17, yPos - 10)] = color;
	Result[int2(xPos + 18, yPos - 10)] = color;
	Result[int2(xPos + 16, yPos - 11)] = color;
	Result[int2(xPos + 17, yPos - 12)] = color;
	Result[int2(xPos + 105, yPos - 12)] = color;
	Result[int2(xPos + 106, yPos - 12)] = color;
	Result[int2(xPos + 104, yPos - 13)] = color;
	Result[int2(xPos + 105, yPos - 13)] = color;
	Result[int2(xPos + 106, yPos - 14)] = color;
	Result[int2(xPos + 102, yPos - 28)] = color;
	Result[int2(xPos + 104, yPos - 28)] = color;
	Result[int2(xPos + 103, yPos - 29)] = color;
	Result[int2(xPos + 104, yPos - 29)] = color;
	Result[int2(xPos + 103, yPos - 30)] = color;
	Result[int2(xPos + 99, yPos - 31)] = color;
	Result[int2(xPos + 100, yPos - 31)] = color;
	Result[int2(xPos + 101, yPos - 31)] = color;
	Result[int2(xPos + 101, yPos - 32)] = color;
	Result[int2(xPos + 100, yPos - 33)] = color;
	Result[int2(xPos + 18, yPos - 34)] = color;
	Result[int2(xPos + 2, yPos - 35)] = color;
	Result[int2(xPos + 18, yPos - 35)] = color;
	Result[int2(xPos + 20, yPos - 35)] = color;
	Result[int2(xPos, yPos - 36)] = color;
	Result[int2(xPos + 2, yPos - 36)] = color;
	Result[int2(xPos + 18, yPos - 36)] = color;
	Result[int2(xPos + 19, yPos - 36)] = color;
	Result[int2(xPos + 1, yPos - 37)] = color;
	Result[int2(xPos + 2, yPos - 37)] = color;
	Result[int2(xPos + 106, yPos - 37)] = color;
	Result[int2(xPos + 107, yPos - 37)] = color;
	Result[int2(xPos + 105, yPos - 38)] = color;
	Result[int2(xPos + 106, yPos - 38)] = color;
	Result[int2(xPos + 107, yPos - 39)] = color;
	Result[int2(xPos + 19, yPos - 47)] = color;
	Result[int2(xPos + 20, yPos - 47)] = color;
	Result[int2(xPos + 18, yPos - 48)] = color;
	Result[int2(xPos + 19, yPos - 48)] = color;
	Result[int2(xPos + 102, yPos - 48)] = color;
	Result[int2(xPos + 104, yPos - 48)] = color;
	Result[int2(xPos + 20, yPos - 49)] = color;
	Result[int2(xPos + 103, yPos - 49)] = color;
	Result[int2(xPos + 104, yPos - 49)] = color;
	Result[int2(xPos + 103, yPos - 50)] = color;
	Result[int2(xPos + 99, yPos - 51)] = color;
	Result[int2(xPos + 100, yPos - 51)] = color;
	Result[int2(xPos + 101, yPos - 51)] = color;
	Result[int2(xPos + 101, yPos - 52)] = color;
	Result[int2(xPos + 100, yPos - 53)] = color;
	Result[int2(xPos + 100, yPos - 57)] = color;
	Result[int2(xPos + 101, yPos - 57)] = color;
	Result[int2(xPos + 101, yPos - 58)] = color;
	Result[int2(xPos + 102, yPos - 58)] = color;
	Result[int2(xPos + 100, yPos - 59)] = color;
	Result[int2(xPos + 27, yPos - 71)] = color;
	Result[int2(xPos + 29, yPos - 71)] = color;
	Result[int2(xPos + 27, yPos - 72)] = color;
	Result[int2(xPos + 28, yPos - 72)] = color;
	Result[int2(xPos + 97, yPos - 72)] = color;
	Result[int2(xPos + 99, yPos - 72)] = color;
	Result[int2(xPos + 28, yPos - 73)] = color;
	Result[int2(xPos + 98, yPos - 73)] = color;
	Result[int2(xPos + 99, yPos - 73)] = color;
	Result[int2(xPos + 98, yPos - 74)] = color;
	Result[int2(xPos + 16, yPos - 77)] = color;
	Result[int2(xPos + 17, yPos - 78)] = color;
	Result[int2(xPos + 18, yPos - 78)] = color;
	Result[int2(xPos + 16, yPos - 79)] = color;
	Result[int2(xPos + 17, yPos - 79)] = color;
	Result[int2(xPos + 22, yPos - 79)] = color;
	Result[int2(xPos + 22, yPos - 80)] = color;
	Result[int2(xPos + 24, yPos - 80)] = color;
	Result[int2(xPos + 96, yPos - 80)] = color;
	Result[int2(xPos + 97, yPos - 80)] = color;
	Result[int2(xPos + 22, yPos - 81)] = color;
	Result[int2(xPos + 23, yPos - 81)] = color;
	Result[int2(xPos + 97, yPos - 81)] = color;
	Result[int2(xPos + 98, yPos - 81)] = color;
	Result[int2(xPos + 108, yPos - 81)] = color;
	Result[int2(xPos + 96, yPos - 82)] = color;
	Result[int2(xPos + 107, yPos - 82)] = color;
	Result[int2(xPos + 108, yPos - 82)] = color;
	Result[int2(xPos + 107, yPos - 83)] = color;
	Result[int2(xPos + 109, yPos - 83)] = color;
}