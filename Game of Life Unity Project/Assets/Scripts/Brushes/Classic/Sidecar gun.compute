#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 182, yPos)] = color;
	Result[int2(xPos + 183, yPos)] = color;
	Result[int2(xPos + 182, yPos - 1)] = color;
	Result[int2(xPos + 183, yPos - 1)] = color;
	Result[int2(xPos + 162, yPos - 2)] = color;
	Result[int2(xPos + 150, yPos - 3)] = color;
	Result[int2(xPos + 162, yPos - 3)] = color;
	Result[int2(xPos + 163, yPos - 3)] = color;
	Result[int2(xPos + 164, yPos - 3)] = color;
	Result[int2(xPos + 148, yPos - 4)] = color;
	Result[int2(xPos + 149, yPos - 4)] = color;
	Result[int2(xPos + 150, yPos - 4)] = color;
	Result[int2(xPos + 165, yPos - 4)] = color;
	Result[int2(xPos + 132, yPos - 5)] = color;
	Result[int2(xPos + 147, yPos - 5)] = color;
	Result[int2(xPos + 164, yPos - 5)] = color;
	Result[int2(xPos + 165, yPos - 5)] = color;
	Result[int2(xPos + 132, yPos - 6)] = color;
	Result[int2(xPos + 133, yPos - 6)] = color;
	Result[int2(xPos + 134, yPos - 6)] = color;
	Result[int2(xPos + 147, yPos - 6)] = color;
	Result[int2(xPos + 148, yPos - 6)] = color;
	Result[int2(xPos + 135, yPos - 7)] = color;
	Result[int2(xPos + 134, yPos - 8)] = color;
	Result[int2(xPos + 135, yPos - 8)] = color;
	Result[int2(xPos + 135, yPos - 11)] = color;
	Result[int2(xPos + 136, yPos - 11)] = color;
	Result[int2(xPos + 135, yPos - 12)] = color;
	Result[int2(xPos + 136, yPos - 12)] = color;
	Result[int2(xPos + 154, yPos - 12)] = color;
	Result[int2(xPos + 155, yPos - 12)] = color;
	Result[int2(xPos + 154, yPos - 13)] = color;
	Result[int2(xPos + 155, yPos - 13)] = color;
	Result[int2(xPos + 192, yPos - 15)] = color;
	Result[int2(xPos + 193, yPos - 15)] = color;
	Result[int2(xPos + 192, yPos - 16)] = color;
	Result[int2(xPos + 193, yPos - 16)] = color;
	Result[int2(xPos + 151, yPos - 19)] = color;
	Result[int2(xPos + 152, yPos - 19)] = color;
	Result[int2(xPos + 151, yPos - 20)] = color;
	Result[int2(xPos + 171, yPos - 20)] = color;
	Result[int2(xPos + 172, yPos - 20)] = color;
	Result[int2(xPos + 152, yPos - 21)] = color;
	Result[int2(xPos + 153, yPos - 21)] = color;
	Result[int2(xPos + 154, yPos - 21)] = color;
	Result[int2(xPos + 170, yPos - 21)] = color;
	Result[int2(xPos + 172, yPos - 21)] = color;
	Result[int2(xPos + 154, yPos - 22)] = color;
	Result[int2(xPos + 170, yPos - 22)] = color;
	Result[int2(xPos + 148, yPos - 23)] = color;
	Result[int2(xPos + 149, yPos - 23)] = color;
	Result[int2(xPos + 169, yPos - 23)] = color;
	Result[int2(xPos + 170, yPos - 23)] = color;
	Result[int2(xPos + 148, yPos - 24)] = color;
	Result[int2(xPos + 149, yPos - 25)] = color;
	Result[int2(xPos + 150, yPos - 25)] = color;
	Result[int2(xPos + 151, yPos - 25)] = color;
	Result[int2(xPos + 151, yPos - 26)] = color;
	Result[int2(xPos + 132, yPos - 30)] = color;
	Result[int2(xPos + 133, yPos - 30)] = color;
	Result[int2(xPos + 131, yPos - 31)] = color;
	Result[int2(xPos + 133, yPos - 31)] = color;
	Result[int2(xPos + 131, yPos - 32)] = color;
	Result[int2(xPos + 157, yPos - 32)] = color;
	Result[int2(xPos + 158, yPos - 32)] = color;
	Result[int2(xPos + 130, yPos - 33)] = color;
	Result[int2(xPos + 131, yPos - 33)] = color;
	Result[int2(xPos + 157, yPos - 33)] = color;
	Result[int2(xPos + 138, yPos - 34)] = color;
	Result[int2(xPos + 139, yPos - 34)] = color;
	Result[int2(xPos + 155, yPos - 34)] = color;
	Result[int2(xPos + 157, yPos - 34)] = color;
	Result[int2(xPos + 138, yPos - 35)] = color;
	Result[int2(xPos + 139, yPos - 35)] = color;
	Result[int2(xPos + 155, yPos - 35)] = color;
	Result[int2(xPos + 156, yPos - 35)] = color;
	Result[int2(xPos + 137, yPos - 47)] = color;
	Result[int2(xPos + 138, yPos - 47)] = color;
	Result[int2(xPos + 136, yPos - 48)] = color;
	Result[int2(xPos + 138, yPos - 48)] = color;
	Result[int2(xPos + 136, yPos - 49)] = color;
	Result[int2(xPos + 135, yPos - 50)] = color;
	Result[int2(xPos + 136, yPos - 50)] = color;
	Result[int2(xPos + 147, yPos - 59)] = color;
	Result[int2(xPos + 148, yPos - 59)] = color;
	Result[int2(xPos + 147, yPos - 60)] = color;
	Result[int2(xPos + 148, yPos - 60)] = color;
	Result[int2(xPos + 136, yPos - 66)] = color;
	Result[int2(xPos + 137, yPos - 66)] = color;
	Result[int2(xPos + 137, yPos - 67)] = color;
	Result[int2(xPos + 157, yPos - 67)] = color;
	Result[int2(xPos + 158, yPos - 67)] = color;
	Result[int2(xPos + 137, yPos - 68)] = color;
	Result[int2(xPos + 139, yPos - 68)] = color;
	Result[int2(xPos + 157, yPos - 68)] = color;
	Result[int2(xPos + 138, yPos - 69)] = color;
	Result[int2(xPos + 139, yPos - 69)] = color;
	Result[int2(xPos + 155, yPos - 69)] = color;
	Result[int2(xPos + 157, yPos - 69)] = color;
	Result[int2(xPos + 150, yPos - 70)] = color;
	Result[int2(xPos + 155, yPos - 70)] = color;
	Result[int2(xPos + 156, yPos - 70)] = color;
	Result[int2(xPos + 149, yPos - 71)] = color;
	Result[int2(xPos + 151, yPos - 71)] = color;
	Result[int2(xPos + 149, yPos - 72)] = color;
	Result[int2(xPos + 151, yPos - 72)] = color;
	Result[int2(xPos + 138, yPos - 73)] = color;
	Result[int2(xPos + 139, yPos - 73)] = color;
	Result[int2(xPos + 150, yPos - 73)] = color;
	Result[int2(xPos + 137, yPos - 74)] = color;
	Result[int2(xPos + 139, yPos - 74)] = color;
	Result[int2(xPos + 137, yPos - 75)] = color;
	Result[int2(xPos + 136, yPos - 76)] = color;
	Result[int2(xPos + 137, yPos - 76)] = color;
	Result[int2(xPos + 151, yPos - 77)] = color;
	Result[int2(xPos + 152, yPos - 77)] = color;
	Result[int2(xPos + 151, yPos - 78)] = color;
	Result[int2(xPos + 152, yPos - 79)] = color;
	Result[int2(xPos + 153, yPos - 79)] = color;
	Result[int2(xPos + 154, yPos - 79)] = color;
	Result[int2(xPos + 154, yPos - 80)] = color;
	Result[int2(xPos + 125, yPos - 92)] = color;
	Result[int2(xPos + 126, yPos - 92)] = color;
	Result[int2(xPos + 124, yPos - 93)] = color;
	Result[int2(xPos + 126, yPos - 93)] = color;
	Result[int2(xPos + 126, yPos - 94)] = color;
	Result[int2(xPos + 1, yPos - 216)] = color;
	Result[int2(xPos + 1, yPos - 217)] = color;
	Result[int2(xPos + 2, yPos - 217)] = color;
	Result[int2(xPos, yPos - 218)] = color;
	Result[int2(xPos + 2, yPos - 218)] = color;
}