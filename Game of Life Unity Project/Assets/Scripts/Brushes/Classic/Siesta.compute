#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 182)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 182)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 163)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 164)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 164)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 192)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 192)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 130)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 155)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 154)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 216)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 217)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 217)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 218)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 218)) * yMult)] = color;
}