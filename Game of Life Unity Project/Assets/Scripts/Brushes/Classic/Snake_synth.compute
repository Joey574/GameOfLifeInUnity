#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (79 * xMult), yPos)] = color;
	Result[int2(xPos + (81 * xMult), yPos)] = color;
	Result[int2(xPos + (79 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (80 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (80 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (80 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos, yPos - (25 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (73 * yMult))] = color;
}