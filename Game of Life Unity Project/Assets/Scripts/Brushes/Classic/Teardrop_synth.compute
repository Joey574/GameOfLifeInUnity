#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 77, yPos)] = color;
	Result[int2(xPos + 79, yPos)] = color;
	Result[int2(xPos + 78, yPos - 1)] = color;
	Result[int2(xPos + 79, yPos - 1)] = color;
	Result[int2(xPos + 78, yPos - 2)] = color;
	Result[int2(xPos + 41, yPos - 4)] = color;
	Result[int2(xPos + 43, yPos - 4)] = color;
	Result[int2(xPos + 3, yPos - 5)] = color;
	Result[int2(xPos + 41, yPos - 5)] = color;
	Result[int2(xPos + 42, yPos - 5)] = color;
	Result[int2(xPos + 4, yPos - 6)] = color;
	Result[int2(xPos + 26, yPos - 6)] = color;
	Result[int2(xPos + 42, yPos - 6)] = color;
	Result[int2(xPos + 66, yPos - 6)] = color;
	Result[int2(xPos + 106, yPos - 6)] = color;
	Result[int2(xPos + 2, yPos - 7)] = color;
	Result[int2(xPos + 3, yPos - 7)] = color;
	Result[int2(xPos + 4, yPos - 7)] = color;
	Result[int2(xPos + 25, yPos - 7)] = color;
	Result[int2(xPos + 27, yPos - 7)] = color;
	Result[int2(xPos + 65, yPos - 7)] = color;
	Result[int2(xPos + 67, yPos - 7)] = color;
	Result[int2(xPos + 105, yPos - 7)] = color;
	Result[int2(xPos + 107, yPos - 7)] = color;
	Result[int2(xPos + 25, yPos - 8)] = color;
	Result[int2(xPos + 27, yPos - 8)] = color;
	Result[int2(xPos + 39, yPos - 8)] = color;
	Result[int2(xPos + 40, yPos - 8)] = color;
	Result[int2(xPos + 65, yPos - 8)] = color;
	Result[int2(xPos + 67, yPos - 8)] = color;
	Result[int2(xPos + 81, yPos - 8)] = color;
	Result[int2(xPos + 82, yPos - 8)] = color;
	Result[int2(xPos + 105, yPos - 8)] = color;
	Result[int2(xPos + 107, yPos - 8)] = color;
	Result[int2(xPos + 1, yPos - 9)] = color;
	Result[int2(xPos + 26, yPos - 9)] = color;
	Result[int2(xPos + 38, yPos - 9)] = color;
	Result[int2(xPos + 39, yPos - 9)] = color;
	Result[int2(xPos + 66, yPos - 9)] = color;
	Result[int2(xPos + 80, yPos - 9)] = color;
	Result[int2(xPos + 81, yPos - 9)] = color;
	Result[int2(xPos + 106, yPos - 9)] = color;
	Result[int2(xPos + 1, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 10)] = color;
	Result[int2(xPos + 40, yPos - 10)] = color;
	Result[int2(xPos + 82, yPos - 10)] = color;
	Result[int2(xPos, yPos - 11)] = color;
	Result[int2(xPos + 2, yPos - 11)] = color;
	Result[int2(xPos + 36, yPos - 11)] = color;
	Result[int2(xPos + 37, yPos - 11)] = color;
	Result[int2(xPos + 78, yPos - 11)] = color;
	Result[int2(xPos + 79, yPos - 11)] = color;
	Result[int2(xPos + 20, yPos - 12)] = color;
	Result[int2(xPos + 21, yPos - 12)] = color;
	Result[int2(xPos + 35, yPos - 12)] = color;
	Result[int2(xPos + 37, yPos - 12)] = color;
	Result[int2(xPos + 60, yPos - 12)] = color;
	Result[int2(xPos + 61, yPos - 12)] = color;
	Result[int2(xPos + 77, yPos - 12)] = color;
	Result[int2(xPos + 79, yPos - 12)] = color;
	Result[int2(xPos + 100, yPos - 12)] = color;
	Result[int2(xPos + 101, yPos - 12)] = color;
	Result[int2(xPos + 19, yPos - 13)] = color;
	Result[int2(xPos + 22, yPos - 13)] = color;
	Result[int2(xPos + 37, yPos - 13)] = color;
	Result[int2(xPos + 59, yPos - 13)] = color;
	Result[int2(xPos + 62, yPos - 13)] = color;
	Result[int2(xPos + 79, yPos - 13)] = color;
	Result[int2(xPos + 99, yPos - 13)] = color;
	Result[int2(xPos + 102, yPos - 13)] = color;
	Result[int2(xPos + 20, yPos - 14)] = color;
	Result[int2(xPos + 21, yPos - 14)] = color;
	Result[int2(xPos + 60, yPos - 14)] = color;
	Result[int2(xPos + 61, yPos - 14)] = color;
	Result[int2(xPos + 100, yPos - 14)] = color;
	Result[int2(xPos + 101, yPos - 14)] = color;
	Result[int2(xPos + 52, yPos - 26)] = color;
	Result[int2(xPos + 50, yPos - 27)] = color;
	Result[int2(xPos + 51, yPos - 27)] = color;
	Result[int2(xPos + 51, yPos - 28)] = color;
	Result[int2(xPos + 52, yPos - 28)] = color;
	Result[int2(xPos + 71, yPos - 34)] = color;
	Result[int2(xPos + 69, yPos - 35)] = color;
	Result[int2(xPos + 71, yPos - 35)] = color;
	Result[int2(xPos + 66, yPos - 36)] = color;
	Result[int2(xPos + 70, yPos - 36)] = color;
	Result[int2(xPos + 71, yPos - 36)] = color;
	Result[int2(xPos + 77, yPos - 36)] = color;
	Result[int2(xPos + 106, yPos - 36)] = color;
	Result[int2(xPos + 65, yPos - 37)] = color;
	Result[int2(xPos + 67, yPos - 37)] = color;
	Result[int2(xPos + 75, yPos - 37)] = color;
	Result[int2(xPos + 77, yPos - 37)] = color;
	Result[int2(xPos + 105, yPos - 37)] = color;
	Result[int2(xPos + 107, yPos - 37)] = color;
	Result[int2(xPos + 65, yPos - 38)] = color;
	Result[int2(xPos + 67, yPos - 38)] = color;
	Result[int2(xPos + 76, yPos - 38)] = color;
	Result[int2(xPos + 77, yPos - 38)] = color;
	Result[int2(xPos + 105, yPos - 38)] = color;
	Result[int2(xPos + 107, yPos - 38)] = color;
	Result[int2(xPos + 66, yPos - 39)] = color;
	Result[int2(xPos + 80, yPos - 39)] = color;
	Result[int2(xPos + 106, yPos - 39)] = color;
	Result[int2(xPos + 78, yPos - 40)] = color;
	Result[int2(xPos + 79, yPos - 40)] = color;
	Result[int2(xPos + 29, yPos - 41)] = color;
	Result[int2(xPos + 79, yPos - 41)] = color;
	Result[int2(xPos + 80, yPos - 41)] = color;
	Result[int2(xPos + 28, yPos - 42)] = color;
	Result[int2(xPos + 60, yPos - 42)] = color;
	Result[int2(xPos + 61, yPos - 42)] = color;
	Result[int2(xPos + 100, yPos - 42)] = color;
	Result[int2(xPos + 101, yPos - 42)] = color;
	Result[int2(xPos + 28, yPos - 43)] = color;
	Result[int2(xPos + 29, yPos - 43)] = color;
	Result[int2(xPos + 30, yPos - 43)] = color;
	Result[int2(xPos + 59, yPos - 43)] = color;
	Result[int2(xPos + 62, yPos - 43)] = color;
	Result[int2(xPos + 99, yPos - 43)] = color;
	Result[int2(xPos + 102, yPos - 43)] = color;
	Result[int2(xPos + 60, yPos - 44)] = color;
	Result[int2(xPos + 61, yPos - 44)] = color;
	Result[int2(xPos + 100, yPos - 44)] = color;
	Result[int2(xPos + 101, yPos - 44)] = color;
	Result[int2(xPos + 29, yPos - 46)] = color;
	Result[int2(xPos + 30, yPos - 46)] = color;
	Result[int2(xPos + 31, yPos - 46)] = color;
	Result[int2(xPos + 29, yPos - 47)] = color;
	Result[int2(xPos + 30, yPos - 48)] = color;
}