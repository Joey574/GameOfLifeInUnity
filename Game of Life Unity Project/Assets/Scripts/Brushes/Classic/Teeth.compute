#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 466, yPos)] = color;
	Result[int2(xPos + 467, yPos)] = color;
	Result[int2(xPos + 468, yPos)] = color;
	Result[int2(xPos + 467, yPos - 1)] = color;
	Result[int2(xPos + 470, yPos - 1)] = color;
	Result[int2(xPos + 471, yPos - 2)] = color;
	Result[int2(xPos + 468, yPos - 3)] = color;
	Result[int2(xPos + 470, yPos - 3)] = color;
	Result[int2(xPos + 438, yPos - 25)] = color;
	Result[int2(xPos + 438, yPos - 26)] = color;
	Result[int2(xPos + 439, yPos - 26)] = color;
	Result[int2(xPos + 438, yPos - 27)] = color;
	Result[int2(xPos + 441, yPos - 27)] = color;
	Result[int2(xPos + 439, yPos - 29)] = color;
	Result[int2(xPos + 441, yPos - 29)] = color;
	Result[int2(xPos + 440, yPos - 30)] = color;
	Result[int2(xPos + 241, yPos - 35)] = color;
	Result[int2(xPos + 242, yPos - 35)] = color;
	Result[int2(xPos + 240, yPos - 36)] = color;
	Result[int2(xPos + 240, yPos - 37)] = color;
	Result[int2(xPos + 236, yPos - 38)] = color;
	Result[int2(xPos + 237, yPos - 38)] = color;
	Result[int2(xPos + 238, yPos - 38)] = color;
	Result[int2(xPos + 239, yPos - 38)] = color;
	Result[int2(xPos + 252, yPos - 46)] = color;
	Result[int2(xPos + 253, yPos - 46)] = color;
	Result[int2(xPos + 253, yPos - 47)] = color;
	Result[int2(xPos + 253, yPos - 48)] = color;
	Result[int2(xPos + 254, yPos - 48)] = color;
	Result[int2(xPos + 253, yPos - 49)] = color;
	Result[int2(xPos + 250, yPos - 51)] = color;
	Result[int2(xPos + 251, yPos - 51)] = color;
	Result[int2(xPos + 252, yPos - 51)] = color;
	Result[int2(xPos + 3, yPos - 96)] = color;
	Result[int2(xPos + 4, yPos - 96)] = color;
	Result[int2(xPos + 5, yPos - 96)] = color;
	Result[int2(xPos + 1, yPos - 97)] = color;
	Result[int2(xPos + 4, yPos - 97)] = color;
	Result[int2(xPos, yPos - 98)] = color;
	Result[int2(xPos + 1, yPos - 99)] = color;
	Result[int2(xPos + 3, yPos - 99)] = color;
	Result[int2(xPos + 264, yPos - 100)] = color;
	Result[int2(xPos + 265, yPos - 100)] = color;
	Result[int2(xPos + 266, yPos - 100)] = color;
	Result[int2(xPos + 265, yPos - 101)] = color;
	Result[int2(xPos + 268, yPos - 101)] = color;
	Result[int2(xPos + 269, yPos - 102)] = color;
	Result[int2(xPos + 266, yPos - 103)] = color;
	Result[int2(xPos + 268, yPos - 103)] = color;
	Result[int2(xPos + 239, yPos - 117)] = color;
	Result[int2(xPos + 240, yPos - 117)] = color;
	Result[int2(xPos + 241, yPos - 118)] = color;
	Result[int2(xPos + 241, yPos - 119)] = color;
	Result[int2(xPos + 242, yPos - 120)] = color;
	Result[int2(xPos + 243, yPos - 120)] = color;
	Result[int2(xPos + 244, yPos - 120)] = color;
	Result[int2(xPos + 245, yPos - 120)] = color;
	Result[int2(xPos + 33, yPos - 121)] = color;
	Result[int2(xPos + 32, yPos - 122)] = color;
	Result[int2(xPos + 33, yPos - 122)] = color;
	Result[int2(xPos + 30, yPos - 123)] = color;
	Result[int2(xPos + 33, yPos - 123)] = color;
	Result[int2(xPos + 30, yPos - 125)] = color;
	Result[int2(xPos + 32, yPos - 125)] = color;
	Result[int2(xPos + 31, yPos - 126)] = color;
}