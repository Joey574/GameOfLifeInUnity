#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (466 * xMult), yPos)] = color;
	Result[int2(xPos + (467 * xMult), yPos)] = color;
	Result[int2(xPos + (468 * xMult), yPos)] = color;
	Result[int2(xPos + (467 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (470 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (471 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (468 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (470 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (438 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (438 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (439 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (438 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (441 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (439 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (441 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (440 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (241 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (242 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (240 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (240 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (236 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (237 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (238 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (239 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (252 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (253 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (253 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (253 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (254 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (253 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (250 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (251 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (252 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (96 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (97 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (97 * yMult))] = color;
	Result[int2(xPos, yPos - (98 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (264 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (265 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (266 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (265 * xMult), yPos - (101 * yMult))] = color;
	Result[int2(xPos + (268 * xMult), yPos - (101 * yMult))] = color;
	Result[int2(xPos + (269 * xMult), yPos - (102 * yMult))] = color;
	Result[int2(xPos + (266 * xMult), yPos - (103 * yMult))] = color;
	Result[int2(xPos + (268 * xMult), yPos - (103 * yMult))] = color;
	Result[int2(xPos + (239 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (240 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (241 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (241 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (242 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (243 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (244 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (245 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (121 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (122 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (122 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (123 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (123 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (125 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (125 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (126 * yMult))] = color;
}