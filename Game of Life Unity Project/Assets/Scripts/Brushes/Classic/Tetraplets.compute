#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos + 3, yPos)] = color;
	Result[int2(xPos + 10, yPos)] = color;
	Result[int2(xPos + 11, yPos)] = color;
	Result[int2(xPos + 12, yPos)] = color;
	Result[int2(xPos + 20, yPos)] = color;
	Result[int2(xPos + 21, yPos)] = color;
	Result[int2(xPos + 22, yPos)] = color;
	Result[int2(xPos + 30, yPos)] = color;
	Result[int2(xPos + 31, yPos)] = color;
	Result[int2(xPos + 33, yPos)] = color;
	Result[int2(xPos + 40, yPos)] = color;
	Result[int2(xPos + 41, yPos)] = color;
	Result[int2(xPos + 50, yPos)] = color;
	Result[int2(xPos + 51, yPos)] = color;
	Result[int2(xPos + 13, yPos - 1)] = color;
	Result[int2(xPos + 22, yPos - 1)] = color;
	Result[int2(xPos + 32, yPos - 1)] = color;
	Result[int2(xPos + 42, yPos - 1)] = color;
	Result[int2(xPos + 43, yPos - 1)] = color;
	Result[int2(xPos + 52, yPos - 1)] = color;
	Result[int2(xPos + 53, yPos - 2)] = color;
	Result[int2(xPos, yPos - 9)] = color;
	Result[int2(xPos + 1, yPos - 9)] = color;
	Result[int2(xPos + 10, yPos - 9)] = color;
	Result[int2(xPos + 11, yPos - 9)] = color;
	Result[int2(xPos + 20, yPos - 9)] = color;
	Result[int2(xPos + 21, yPos - 9)] = color;
	Result[int2(xPos + 30, yPos - 9)] = color;
	Result[int2(xPos + 31, yPos - 9)] = color;
	Result[int2(xPos + 40, yPos - 9)] = color;
	Result[int2(xPos + 41, yPos - 9)] = color;
	Result[int2(xPos + 50, yPos - 9)] = color;
	Result[int2(xPos + 51, yPos - 9)] = color;
	Result[int2(xPos + 2, yPos - 10)] = color;
	Result[int2(xPos + 12, yPos - 10)] = color;
	Result[int2(xPos + 21, yPos - 10)] = color;
	Result[int2(xPos + 22, yPos - 10)] = color;
	Result[int2(xPos + 31, yPos - 10)] = color;
	Result[int2(xPos + 41, yPos - 10)] = color;
	Result[int2(xPos + 50, yPos - 10)] = color;
	Result[int2(xPos + 51, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 11)] = color;
	Result[int2(xPos + 11, yPos - 11)] = color;
	Result[int2(xPos + 32, yPos - 11)] = color;
	Result[int2(xPos + 40, yPos - 11)] = color;
	Result[int2(xPos, yPos - 18)] = color;
	Result[int2(xPos + 2, yPos - 18)] = color;
	Result[int2(xPos + 10, yPos - 18)] = color;
	Result[int2(xPos + 20, yPos - 18)] = color;
	Result[int2(xPos + 30, yPos - 18)] = color;
	Result[int2(xPos + 40, yPos - 18)] = color;
	Result[int2(xPos + 50, yPos - 18)] = color;
	Result[int2(xPos + 1, yPos - 19)] = color;
	Result[int2(xPos + 3, yPos - 19)] = color;
	Result[int2(xPos + 11, yPos - 19)] = color;
	Result[int2(xPos + 12, yPos - 19)] = color;
	Result[int2(xPos + 21, yPos - 19)] = color;
	Result[int2(xPos + 22, yPos - 19)] = color;
	Result[int2(xPos + 31, yPos - 19)] = color;
	Result[int2(xPos + 33, yPos - 19)] = color;
	Result[int2(xPos + 41, yPos - 19)] = color;
	Result[int2(xPos + 51, yPos - 19)] = color;
	Result[int2(xPos + 13, yPos - 20)] = color;
	Result[int2(xPos + 21, yPos - 20)] = color;
	Result[int2(xPos + 32, yPos - 20)] = color;
	Result[int2(xPos + 42, yPos - 20)] = color;
	Result[int2(xPos + 51, yPos - 20)] = color;
	Result[int2(xPos + 43, yPos - 21)] = color;
	Result[int2(xPos + 50, yPos - 21)] = color;
	Result[int2(xPos + 1, yPos - 28)] = color;
	Result[int2(xPos + 10, yPos - 28)] = color;
	Result[int2(xPos + 20, yPos - 28)] = color;
	Result[int2(xPos + 22, yPos - 28)] = color;
	Result[int2(xPos + 30, yPos - 28)] = color;
	Result[int2(xPos, yPos - 29)] = color;
	Result[int2(xPos + 2, yPos - 29)] = color;
	Result[int2(xPos + 10, yPos - 29)] = color;
	Result[int2(xPos + 11, yPos - 29)] = color;
	Result[int2(xPos + 21, yPos - 29)] = color;
	Result[int2(xPos + 31, yPos - 29)] = color;
	Result[int2(xPos + 32, yPos - 29)] = color;
	Result[int2(xPos + 1, yPos - 30)] = color;
	Result[int2(xPos + 10, yPos - 30)] = color;
	Result[int2(xPos + 22, yPos - 30)] = color;
	Result[int2(xPos + 30, yPos - 30)] = color;
}