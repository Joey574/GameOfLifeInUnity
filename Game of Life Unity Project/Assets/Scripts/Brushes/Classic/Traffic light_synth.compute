#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 24, yPos)] = color;
	Result[int2(xPos + 25, yPos)] = color;
	Result[int2(xPos + 26, yPos)] = color;
	Result[int2(xPos + 64, yPos)] = color;
	Result[int2(xPos + 65, yPos)] = color;
	Result[int2(xPos + 66, yPos)] = color;
	Result[int2(xPos + 104, yPos)] = color;
	Result[int2(xPos + 105, yPos)] = color;
	Result[int2(xPos + 106, yPos)] = color;
	Result[int2(xPos + 45, yPos - 1)] = color;
	Result[int2(xPos + 3, yPos - 2)] = color;
	Result[int2(xPos + 5, yPos - 2)] = color;
	Result[int2(xPos + 22, yPos - 2)] = color;
	Result[int2(xPos + 28, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 45, yPos - 2)] = color;
	Result[int2(xPos + 62, yPos - 2)] = color;
	Result[int2(xPos + 68, yPos - 2)] = color;
	Result[int2(xPos + 102, yPos - 2)] = color;
	Result[int2(xPos + 108, yPos - 2)] = color;
	Result[int2(xPos + 4, yPos - 3)] = color;
	Result[int2(xPos + 5, yPos - 3)] = color;
	Result[int2(xPos + 22, yPos - 3)] = color;
	Result[int2(xPos + 28, yPos - 3)] = color;
	Result[int2(xPos + 40, yPos - 3)] = color;
	Result[int2(xPos + 41, yPos - 3)] = color;
	Result[int2(xPos + 44, yPos - 3)] = color;
	Result[int2(xPos + 45, yPos - 3)] = color;
	Result[int2(xPos + 62, yPos - 3)] = color;
	Result[int2(xPos + 68, yPos - 3)] = color;
	Result[int2(xPos + 81, yPos - 3)] = color;
	Result[int2(xPos + 85, yPos - 3)] = color;
	Result[int2(xPos + 86, yPos - 3)] = color;
	Result[int2(xPos + 102, yPos - 3)] = color;
	Result[int2(xPos + 108, yPos - 3)] = color;
	Result[int2(xPos + 4, yPos - 4)] = color;
	Result[int2(xPos + 22, yPos - 4)] = color;
	Result[int2(xPos + 28, yPos - 4)] = color;
	Result[int2(xPos + 39, yPos - 4)] = color;
	Result[int2(xPos + 41, yPos - 4)] = color;
	Result[int2(xPos + 62, yPos - 4)] = color;
	Result[int2(xPos + 68, yPos - 4)] = color;
	Result[int2(xPos + 82, yPos - 4)] = color;
	Result[int2(xPos + 83, yPos - 4)] = color;
	Result[int2(xPos + 85, yPos - 4)] = color;
	Result[int2(xPos + 87, yPos - 4)] = color;
	Result[int2(xPos + 102, yPos - 4)] = color;
	Result[int2(xPos + 108, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 5)] = color;
	Result[int2(xPos + 2, yPos - 5)] = color;
	Result[int2(xPos + 41, yPos - 5)] = color;
	Result[int2(xPos + 81, yPos - 5)] = color;
	Result[int2(xPos + 82, yPos - 5)] = color;
	Result[int2(xPos + 85, yPos - 5)] = color;
	Result[int2(xPos, yPos - 6)] = color;
	Result[int2(xPos + 2, yPos - 6)] = color;
	Result[int2(xPos + 24, yPos - 6)] = color;
	Result[int2(xPos + 25, yPos - 6)] = color;
	Result[int2(xPos + 26, yPos - 6)] = color;
	Result[int2(xPos + 64, yPos - 6)] = color;
	Result[int2(xPos + 65, yPos - 6)] = color;
	Result[int2(xPos + 66, yPos - 6)] = color;
	Result[int2(xPos + 104, yPos - 6)] = color;
	Result[int2(xPos + 105, yPos - 6)] = color;
	Result[int2(xPos + 106, yPos - 6)] = color;
	Result[int2(xPos + 2, yPos - 7)] = color;
	Result[int2(xPos + 24, yPos - 20)] = color;
	Result[int2(xPos + 25, yPos - 20)] = color;
	Result[int2(xPos + 26, yPos - 20)] = color;
	Result[int2(xPos + 64, yPos - 20)] = color;
	Result[int2(xPos + 65, yPos - 20)] = color;
	Result[int2(xPos + 66, yPos - 20)] = color;
	Result[int2(xPos + 104, yPos - 20)] = color;
	Result[int2(xPos + 105, yPos - 20)] = color;
	Result[int2(xPos + 106, yPos - 20)] = color;
	Result[int2(xPos + 40, yPos - 21)] = color;
	Result[int2(xPos + 41, yPos - 21)] = color;
	Result[int2(xPos + 42, yPos - 21)] = color;
	Result[int2(xPos + 2, yPos - 22)] = color;
	Result[int2(xPos + 3, yPos - 22)] = color;
	Result[int2(xPos + 4, yPos - 22)] = color;
	Result[int2(xPos + 22, yPos - 22)] = color;
	Result[int2(xPos + 28, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 22)] = color;
	Result[int2(xPos + 45, yPos - 22)] = color;
	Result[int2(xPos + 62, yPos - 22)] = color;
	Result[int2(xPos + 68, yPos - 22)] = color;
	Result[int2(xPos + 102, yPos - 22)] = color;
	Result[int2(xPos + 108, yPos - 22)] = color;
	Result[int2(xPos + 4, yPos - 23)] = color;
	Result[int2(xPos + 22, yPos - 23)] = color;
	Result[int2(xPos + 28, yPos - 23)] = color;
	Result[int2(xPos + 41, yPos - 23)] = color;
	Result[int2(xPos + 44, yPos - 23)] = color;
	Result[int2(xPos + 46, yPos - 23)] = color;
	Result[int2(xPos + 62, yPos - 23)] = color;
	Result[int2(xPos + 68, yPos - 23)] = color;
	Result[int2(xPos + 89, yPos - 23)] = color;
	Result[int2(xPos + 102, yPos - 23)] = color;
	Result[int2(xPos + 108, yPos - 23)] = color;
	Result[int2(xPos + 3, yPos - 24)] = color;
	Result[int2(xPos + 6, yPos - 24)] = color;
	Result[int2(xPos + 7, yPos - 24)] = color;
	Result[int2(xPos + 8, yPos - 24)] = color;
	Result[int2(xPos + 22, yPos - 24)] = color;
	Result[int2(xPos + 28, yPos - 24)] = color;
	Result[int2(xPos + 45, yPos - 24)] = color;
	Result[int2(xPos + 47, yPos - 24)] = color;
	Result[int2(xPos + 62, yPos - 24)] = color;
	Result[int2(xPos + 68, yPos - 24)] = color;
	Result[int2(xPos + 88, yPos - 24)] = color;
	Result[int2(xPos + 102, yPos - 24)] = color;
	Result[int2(xPos + 108, yPos - 24)] = color;
	Result[int2(xPos + 46, yPos - 25)] = color;
	Result[int2(xPos + 88, yPos - 25)] = color;
	Result[int2(xPos + 89, yPos - 25)] = color;
	Result[int2(xPos + 90, yPos - 25)] = color;
	Result[int2(xPos + 24, yPos - 26)] = color;
	Result[int2(xPos + 25, yPos - 26)] = color;
	Result[int2(xPos + 26, yPos - 26)] = color;
	Result[int2(xPos + 64, yPos - 26)] = color;
	Result[int2(xPos + 65, yPos - 26)] = color;
	Result[int2(xPos + 66, yPos - 26)] = color;
	Result[int2(xPos + 82, yPos - 26)] = color;
	Result[int2(xPos + 83, yPos - 26)] = color;
	Result[int2(xPos + 84, yPos - 26)] = color;
	Result[int2(xPos + 92, yPos - 26)] = color;
	Result[int2(xPos + 93, yPos - 26)] = color;
	Result[int2(xPos + 104, yPos - 26)] = color;
	Result[int2(xPos + 105, yPos - 26)] = color;
	Result[int2(xPos + 106, yPos - 26)] = color;
	Result[int2(xPos + 84, yPos - 27)] = color;
	Result[int2(xPos + 92, yPos - 27)] = color;
	Result[int2(xPos + 94, yPos - 27)] = color;
	Result[int2(xPos + 83, yPos - 28)] = color;
	Result[int2(xPos + 92, yPos - 28)] = color;
}