#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 43, yPos)] = color;
	Result[int2(xPos + 62, yPos)] = color;
	Result[int2(xPos + 44, yPos - 1)] = color;
	Result[int2(xPos + 61, yPos - 1)] = color;
	Result[int2(xPos + 42, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 44, yPos - 2)] = color;
	Result[int2(xPos + 61, yPos - 2)] = color;
	Result[int2(xPos + 62, yPos - 2)] = color;
	Result[int2(xPos + 63, yPos - 2)] = color;
	Result[int2(xPos + 79, yPos - 5)] = color;
	Result[int2(xPos + 80, yPos - 5)] = color;
	Result[int2(xPos + 85, yPos - 5)] = color;
	Result[int2(xPos + 86, yPos - 5)] = color;
	Result[int2(xPos + 109, yPos - 5)] = color;
	Result[int2(xPos + 110, yPos - 5)] = color;
	Result[int2(xPos + 115, yPos - 5)] = color;
	Result[int2(xPos + 116, yPos - 5)] = color;
	Result[int2(xPos + 129, yPos - 5)] = color;
	Result[int2(xPos + 130, yPos - 5)] = color;
	Result[int2(xPos + 135, yPos - 5)] = color;
	Result[int2(xPos + 136, yPos - 5)] = color;
	Result[int2(xPos + 79, yPos - 6)] = color;
	Result[int2(xPos + 81, yPos - 6)] = color;
	Result[int2(xPos + 84, yPos - 6)] = color;
	Result[int2(xPos + 86, yPos - 6)] = color;
	Result[int2(xPos + 109, yPos - 6)] = color;
	Result[int2(xPos + 111, yPos - 6)] = color;
	Result[int2(xPos + 114, yPos - 6)] = color;
	Result[int2(xPos + 116, yPos - 6)] = color;
	Result[int2(xPos + 129, yPos - 6)] = color;
	Result[int2(xPos + 131, yPos - 6)] = color;
	Result[int2(xPos + 134, yPos - 6)] = color;
	Result[int2(xPos + 136, yPos - 6)] = color;
	Result[int2(xPos + 81, yPos - 7)] = color;
	Result[int2(xPos + 84, yPos - 7)] = color;
	Result[int2(xPos + 111, yPos - 7)] = color;
	Result[int2(xPos + 114, yPos - 7)] = color;
	Result[int2(xPos + 131, yPos - 7)] = color;
	Result[int2(xPos + 134, yPos - 7)] = color;
	Result[int2(xPos + 22, yPos - 8)] = color;
	Result[int2(xPos + 23, yPos - 8)] = color;
	Result[int2(xPos + 52, yPos - 8)] = color;
	Result[int2(xPos + 53, yPos - 8)] = color;
	Result[int2(xPos + 81, yPos - 8)] = color;
	Result[int2(xPos + 84, yPos - 8)] = color;
	Result[int2(xPos + 111, yPos - 8)] = color;
	Result[int2(xPos + 114, yPos - 8)] = color;
	Result[int2(xPos + 131, yPos - 8)] = color;
	Result[int2(xPos + 134, yPos - 8)] = color;
	Result[int2(xPos + 1, yPos - 9)] = color;
	Result[int2(xPos + 2, yPos - 9)] = color;
	Result[int2(xPos + 21, yPos - 9)] = color;
	Result[int2(xPos + 24, yPos - 9)] = color;
	Result[int2(xPos + 51, yPos - 9)] = color;
	Result[int2(xPos + 54, yPos - 9)] = color;
	Result[int2(xPos + 82, yPos - 9)] = color;
	Result[int2(xPos + 83, yPos - 9)] = color;
	Result[int2(xPos + 112, yPos - 9)] = color;
	Result[int2(xPos + 113, yPos - 9)] = color;
	Result[int2(xPos + 132, yPos - 9)] = color;
	Result[int2(xPos + 133, yPos - 9)] = color;
	Result[int2(xPos, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 10)] = color;
	Result[int2(xPos + 22, yPos - 10)] = color;
	Result[int2(xPos + 23, yPos - 10)] = color;
	Result[int2(xPos + 52, yPos - 10)] = color;
	Result[int2(xPos + 53, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 11)] = color;
	Result[int2(xPos + 4, yPos - 12)] = color;
	Result[int2(xPos + 5, yPos - 12)] = color;
	Result[int2(xPos + 105, yPos - 12)] = color;
	Result[int2(xPos + 120, yPos - 12)] = color;
	Result[int2(xPos + 4, yPos - 13)] = color;
	Result[int2(xPos + 6, yPos - 13)] = color;
	Result[int2(xPos + 103, yPos - 13)] = color;
	Result[int2(xPos + 105, yPos - 13)] = color;
	Result[int2(xPos + 120, yPos - 13)] = color;
	Result[int2(xPos + 122, yPos - 13)] = color;
	Result[int2(xPos + 4, yPos - 14)] = color;
	Result[int2(xPos + 50, yPos - 14)] = color;
	Result[int2(xPos + 51, yPos - 14)] = color;
	Result[int2(xPos + 54, yPos - 14)] = color;
	Result[int2(xPos + 55, yPos - 14)] = color;
	Result[int2(xPos + 104, yPos - 14)] = color;
	Result[int2(xPos + 105, yPos - 14)] = color;
	Result[int2(xPos + 120, yPos - 14)] = color;
	Result[int2(xPos + 121, yPos - 14)] = color;
	Result[int2(xPos + 49, yPos - 15)] = color;
	Result[int2(xPos + 51, yPos - 15)] = color;
	Result[int2(xPos + 54, yPos - 15)] = color;
	Result[int2(xPos + 56, yPos - 15)] = color;
	Result[int2(xPos + 77, yPos - 15)] = color;
	Result[int2(xPos + 78, yPos - 15)] = color;
	Result[int2(xPos + 87, yPos - 15)] = color;
	Result[int2(xPos + 88, yPos - 15)] = color;
	Result[int2(xPos + 107, yPos - 15)] = color;
	Result[int2(xPos + 108, yPos - 15)] = color;
	Result[int2(xPos + 117, yPos - 15)] = color;
	Result[int2(xPos + 118, yPos - 15)] = color;
	Result[int2(xPos + 51, yPos - 16)] = color;
	Result[int2(xPos + 54, yPos - 16)] = color;
	Result[int2(xPos + 77, yPos - 16)] = color;
	Result[int2(xPos + 78, yPos - 16)] = color;
	Result[int2(xPos + 87, yPos - 16)] = color;
	Result[int2(xPos + 88, yPos - 16)] = color;
	Result[int2(xPos + 107, yPos - 16)] = color;
	Result[int2(xPos + 108, yPos - 16)] = color;
	Result[int2(xPos + 117, yPos - 16)] = color;
	Result[int2(xPos + 118, yPos - 16)] = color;
	Result[int2(xPos + 76, yPos - 28)] = color;
	Result[int2(xPos + 109, yPos - 28)] = color;
	Result[int2(xPos + 74, yPos - 29)] = color;
	Result[int2(xPos + 76, yPos - 29)] = color;
	Result[int2(xPos + 109, yPos - 29)] = color;
	Result[int2(xPos + 111, yPos - 29)] = color;
	Result[int2(xPos + 75, yPos - 30)] = color;
	Result[int2(xPos + 76, yPos - 30)] = color;
	Result[int2(xPos + 109, yPos - 30)] = color;
	Result[int2(xPos + 110, yPos - 30)] = color;
	Result[int2(xPos + 81, yPos - 31)] = color;
	Result[int2(xPos + 104, yPos - 31)] = color;
	Result[int2(xPos + 79, yPos - 32)] = color;
	Result[int2(xPos + 80, yPos - 32)] = color;
	Result[int2(xPos + 105, yPos - 32)] = color;
	Result[int2(xPos + 106, yPos - 32)] = color;
	Result[int2(xPos + 80, yPos - 33)] = color;
	Result[int2(xPos + 81, yPos - 33)] = color;
	Result[int2(xPos + 104, yPos - 33)] = color;
	Result[int2(xPos + 105, yPos - 33)] = color;
	Result[int2(xPos + 83, yPos - 34)] = color;
	Result[int2(xPos + 84, yPos - 34)] = color;
	Result[int2(xPos + 96, yPos - 34)] = color;
	Result[int2(xPos + 101, yPos - 34)] = color;
	Result[int2(xPos + 102, yPos - 34)] = color;
	Result[int2(xPos + 116, yPos - 34)] = color;
	Result[int2(xPos + 129, yPos - 34)] = color;
	Result[int2(xPos + 136, yPos - 34)] = color;
	Result[int2(xPos + 69, yPos - 35)] = color;
	Result[int2(xPos + 70, yPos - 35)] = color;
	Result[int2(xPos + 75, yPos - 35)] = color;
	Result[int2(xPos + 76, yPos - 35)] = color;
	Result[int2(xPos + 83, yPos - 35)] = color;
	Result[int2(xPos + 85, yPos - 35)] = color;
	Result[int2(xPos + 89, yPos - 35)] = color;
	Result[int2(xPos + 90, yPos - 35)] = color;
	Result[int2(xPos + 95, yPos - 35)] = color;
	Result[int2(xPos + 97, yPos - 35)] = color;
	Result[int2(xPos + 100, yPos - 35)] = color;
	Result[int2(xPos + 102, yPos - 35)] = color;
	Result[int2(xPos + 109, yPos - 35)] = color;
	Result[int2(xPos + 110, yPos - 35)] = color;
	Result[int2(xPos + 115, yPos - 35)] = color;
	Result[int2(xPos + 117, yPos - 35)] = color;
	Result[int2(xPos + 128, yPos - 35)] = color;
	Result[int2(xPos + 130, yPos - 35)] = color;
	Result[int2(xPos + 135, yPos - 35)] = color;
	Result[int2(xPos + 137, yPos - 35)] = color;
	Result[int2(xPos + 69, yPos - 36)] = color;
	Result[int2(xPos + 71, yPos - 36)] = color;
	Result[int2(xPos + 74, yPos - 36)] = color;
	Result[int2(xPos + 76, yPos - 36)] = color;
	Result[int2(xPos + 83, yPos - 36)] = color;
	Result[int2(xPos + 89, yPos - 36)] = color;
	Result[int2(xPos + 91, yPos - 36)] = color;
	Result[int2(xPos + 94, yPos - 36)] = color;
	Result[int2(xPos + 96, yPos - 36)] = color;
	Result[int2(xPos + 102, yPos - 36)] = color;
	Result[int2(xPos + 109, yPos - 36)] = color;
	Result[int2(xPos + 111, yPos - 36)] = color;
	Result[int2(xPos + 114, yPos - 36)] = color;
	Result[int2(xPos + 116, yPos - 36)] = color;
	Result[int2(xPos + 129, yPos - 36)] = color;
	Result[int2(xPos + 131, yPos - 36)] = color;
	Result[int2(xPos + 134, yPos - 36)] = color;
	Result[int2(xPos + 136, yPos - 36)] = color;
	Result[int2(xPos + 71, yPos - 37)] = color;
	Result[int2(xPos + 74, yPos - 37)] = color;
	Result[int2(xPos + 91, yPos - 37)] = color;
	Result[int2(xPos + 94, yPos - 37)] = color;
	Result[int2(xPos + 111, yPos - 37)] = color;
	Result[int2(xPos + 114, yPos - 37)] = color;
	Result[int2(xPos + 131, yPos - 37)] = color;
	Result[int2(xPos + 134, yPos - 37)] = color;
	Result[int2(xPos + 71, yPos - 38)] = color;
	Result[int2(xPos + 74, yPos - 38)] = color;
	Result[int2(xPos + 91, yPos - 38)] = color;
	Result[int2(xPos + 94, yPos - 38)] = color;
	Result[int2(xPos + 111, yPos - 38)] = color;
	Result[int2(xPos + 114, yPos - 38)] = color;
	Result[int2(xPos + 131, yPos - 38)] = color;
	Result[int2(xPos + 134, yPos - 38)] = color;
	Result[int2(xPos + 72, yPos - 39)] = color;
	Result[int2(xPos + 73, yPos - 39)] = color;
	Result[int2(xPos + 92, yPos - 39)] = color;
	Result[int2(xPos + 93, yPos - 39)] = color;
	Result[int2(xPos + 112, yPos - 39)] = color;
	Result[int2(xPos + 113, yPos - 39)] = color;
	Result[int2(xPos + 132, yPos - 39)] = color;
	Result[int2(xPos + 133, yPos - 39)] = color;
}