#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos + 3, yPos)] = color;
	Result[int2(xPos + 4, yPos)] = color;
	Result[int2(xPos + 5, yPos)] = color;
	Result[int2(xPos + 7, yPos)] = color;
	Result[int2(xPos + 8, yPos)] = color;
	Result[int2(xPos + 9, yPos)] = color;
	Result[int2(xPos + 10, yPos)] = color;
	Result[int2(xPos + 12, yPos)] = color;
	Result[int2(xPos + 13, yPos)] = color;
	Result[int2(xPos + 14, yPos)] = color;
	Result[int2(xPos + 16, yPos)] = color;
	Result[int2(xPos + 17, yPos)] = color;
	Result[int2(xPos + 18, yPos)] = color;
	Result[int2(xPos + 19, yPos)] = color;
	Result[int2(xPos + 20, yPos)] = color;
	Result[int2(xPos + 21, yPos)] = color;
	Result[int2(xPos + 22, yPos)] = color;
	Result[int2(xPos + 24, yPos)] = color;
	Result[int2(xPos + 25, yPos)] = color;
	Result[int2(xPos + 26, yPos)] = color;
	Result[int2(xPos + 27, yPos)] = color;
	Result[int2(xPos + 28, yPos)] = color;
	Result[int2(xPos + 30, yPos)] = color;
	Result[int2(xPos + 31, yPos)] = color;
	Result[int2(xPos + 32, yPos)] = color;
	Result[int2(xPos + 33, yPos)] = color;
	Result[int2(xPos + 35, yPos)] = color;
	Result[int2(xPos + 36, yPos)] = color;
	Result[int2(xPos + 37, yPos)] = color;
	Result[int2(xPos + 38, yPos)] = color;
	Result[int2(xPos + 110, yPos)] = color;
	Result[int2(xPos + 111, yPos)] = color;
	Result[int2(xPos + 112, yPos)] = color;
	Result[int2(xPos + 113, yPos)] = color;
	Result[int2(xPos + 115, yPos)] = color;
	Result[int2(xPos + 116, yPos)] = color;
	Result[int2(xPos + 117, yPos)] = color;
	Result[int2(xPos + 118, yPos)] = color;
	Result[int2(xPos + 120, yPos)] = color;
	Result[int2(xPos + 121, yPos)] = color;
	Result[int2(xPos + 122, yPos)] = color;
	Result[int2(xPos + 123, yPos)] = color;
	Result[int2(xPos + 124, yPos)] = color;
	Result[int2(xPos + 126, yPos)] = color;
	Result[int2(xPos + 127, yPos)] = color;
	Result[int2(xPos + 128, yPos)] = color;
	Result[int2(xPos + 129, yPos)] = color;
	Result[int2(xPos + 130, yPos)] = color;
	Result[int2(xPos + 131, yPos)] = color;
	Result[int2(xPos + 132, yPos)] = color;
	Result[int2(xPos + 134, yPos)] = color;
	Result[int2(xPos + 135, yPos)] = color;
	Result[int2(xPos + 136, yPos)] = color;
	Result[int2(xPos + 138, yPos)] = color;
	Result[int2(xPos + 139, yPos)] = color;
	Result[int2(xPos + 140, yPos)] = color;
	Result[int2(xPos + 141, yPos)] = color;
	Result[int2(xPos + 143, yPos)] = color;
	Result[int2(xPos + 144, yPos)] = color;
	Result[int2(xPos + 145, yPos)] = color;
	Result[int2(xPos + 146, yPos)] = color;
	Result[int2(xPos + 147, yPos)] = color;
	Result[int2(xPos + 148, yPos)] = color;
}