#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (65 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (76 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (76 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (77 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (77 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (78 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (78 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (78 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (78 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (79 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (79 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (79 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (79 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (79 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (80 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (80 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (80 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (81 * yMult))] = color;
	Result[int2(xPos + (361 * xMult), yPos - (81 * yMult))] = color;
	Result[int2(xPos + (362 * xMult), yPos - (81 * yMult))] = color;
	Result[int2(xPos + (363 * xMult), yPos - (81 * yMult))] = color;
	Result[int2(xPos + (361 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (362 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (363 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (88 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (88 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (89 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (89 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (89 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (90 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (91 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (95 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (95 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (95 * yMult))] = color;
	Result[int2(xPos, yPos - (99 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos, yPos - (101 * yMult))] = color;
}