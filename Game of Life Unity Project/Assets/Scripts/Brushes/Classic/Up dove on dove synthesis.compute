#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 65, yPos - 1)] = color;
	Result[int2(xPos + 66, yPos - 2)] = color;
	Result[int2(xPos + 67, yPos - 2)] = color;
	Result[int2(xPos + 65, yPos - 3)] = color;
	Result[int2(xPos + 66, yPos - 3)] = color;
	Result[int2(xPos + 67, yPos - 7)] = color;
	Result[int2(xPos + 60, yPos - 10)] = color;
	Result[int2(xPos + 61, yPos - 10)] = color;
	Result[int2(xPos + 62, yPos - 10)] = color;
	Result[int2(xPos + 67, yPos - 10)] = color;
	Result[int2(xPos + 68, yPos - 10)] = color;
	Result[int2(xPos + 62, yPos - 11)] = color;
	Result[int2(xPos + 66, yPos - 11)] = color;
	Result[int2(xPos + 68, yPos - 11)] = color;
	Result[int2(xPos + 61, yPos - 12)] = color;
	Result[int2(xPos + 71, yPos - 12)] = color;
	Result[int2(xPos + 72, yPos - 12)] = color;
	Result[int2(xPos + 73, yPos - 12)] = color;
	Result[int2(xPos + 71, yPos - 13)] = color;
	Result[int2(xPos + 72, yPos - 14)] = color;
	Result[int2(xPos + 13, yPos - 35)] = color;
	Result[int2(xPos + 55, yPos - 35)] = color;
	Result[int2(xPos + 11, yPos - 36)] = color;
	Result[int2(xPos + 13, yPos - 36)] = color;
	Result[int2(xPos + 54, yPos - 36)] = color;
	Result[int2(xPos + 71, yPos - 36)] = color;
	Result[int2(xPos + 72, yPos - 36)] = color;
	Result[int2(xPos + 12, yPos - 37)] = color;
	Result[int2(xPos + 13, yPos - 37)] = color;
	Result[int2(xPos + 52, yPos - 37)] = color;
	Result[int2(xPos + 53, yPos - 37)] = color;
	Result[int2(xPos + 54, yPos - 37)] = color;
	Result[int2(xPos + 71, yPos - 37)] = color;
	Result[int2(xPos + 72, yPos - 37)] = color;
	Result[int2(xPos + 50, yPos - 40)] = color;
	Result[int2(xPos + 51, yPos - 40)] = color;
	Result[int2(xPos + 52, yPos - 40)] = color;
	Result[int2(xPos + 12, yPos - 41)] = color;
	Result[int2(xPos + 13, yPos - 41)] = color;
	Result[int2(xPos + 50, yPos - 41)] = color;
	Result[int2(xPos + 71, yPos - 41)] = color;
	Result[int2(xPos + 72, yPos - 41)] = color;
	Result[int2(xPos + 11, yPos - 44)] = color;
	Result[int2(xPos + 13, yPos - 44)] = color;
	Result[int2(xPos + 49, yPos - 44)] = color;
	Result[int2(xPos + 71, yPos - 44)] = color;
	Result[int2(xPos + 72, yPos - 44)] = color;
	Result[int2(xPos + 13, yPos - 45)] = color;
	Result[int2(xPos + 1, yPos - 68)] = color;
	Result[int2(xPos + 3, yPos - 68)] = color;
	Result[int2(xPos + 2, yPos - 69)] = color;
	Result[int2(xPos + 3, yPos - 69)] = color;
	Result[int2(xPos + 2, yPos - 70)] = color;
	Result[int2(xPos + 6, yPos - 73)] = color;
	Result[int2(xPos + 8, yPos - 73)] = color;
	Result[int2(xPos + 58, yPos - 73)] = color;
	Result[int2(xPos + 7, yPos - 74)] = color;
	Result[int2(xPos + 8, yPos - 74)] = color;
	Result[int2(xPos + 59, yPos - 74)] = color;
	Result[int2(xPos + 7, yPos - 75)] = color;
	Result[int2(xPos + 57, yPos - 75)] = color;
	Result[int2(xPos + 58, yPos - 75)] = color;
	Result[int2(xPos + 59, yPos - 75)] = color;
	Result[int2(xPos + 59, yPos - 76)] = color;
	Result[int2(xPos + 60, yPos - 76)] = color;
	Result[int2(xPos + 58, yPos - 77)] = color;
	Result[int2(xPos + 61, yPos - 77)] = color;
	Result[int2(xPos + 57, yPos - 78)] = color;
	Result[int2(xPos + 58, yPos - 78)] = color;
	Result[int2(xPos + 62, yPos - 78)] = color;
	Result[int2(xPos + 63, yPos - 78)] = color;
	Result[int2(xPos + 16, yPos - 79)] = color;
	Result[int2(xPos + 17, yPos - 79)] = color;
	Result[int2(xPos + 18, yPos - 79)] = color;
	Result[int2(xPos + 63, yPos - 79)] = color;
	Result[int2(xPos + 66, yPos - 79)] = color;
	Result[int2(xPos + 16, yPos - 80)] = color;
	Result[int2(xPos + 62, yPos - 80)] = color;
	Result[int2(xPos + 65, yPos - 80)] = color;
	Result[int2(xPos + 17, yPos - 81)] = color;
	Result[int2(xPos + 361, yPos - 81)] = color;
	Result[int2(xPos + 362, yPos - 81)] = color;
	Result[int2(xPos + 363, yPos - 81)] = color;
	Result[int2(xPos + 361, yPos - 85)] = color;
	Result[int2(xPos + 362, yPos - 85)] = color;
	Result[int2(xPos + 363, yPos - 85)] = color;
	Result[int2(xPos + 62, yPos - 88)] = color;
	Result[int2(xPos + 65, yPos - 88)] = color;
	Result[int2(xPos + 10, yPos - 89)] = color;
	Result[int2(xPos + 63, yPos - 89)] = color;
	Result[int2(xPos + 66, yPos - 89)] = color;
	Result[int2(xPos + 11, yPos - 90)] = color;
	Result[int2(xPos + 12, yPos - 90)] = color;
	Result[int2(xPos + 57, yPos - 90)] = color;
	Result[int2(xPos + 58, yPos - 90)] = color;
	Result[int2(xPos + 62, yPos - 90)] = color;
	Result[int2(xPos + 63, yPos - 90)] = color;
	Result[int2(xPos + 10, yPos - 91)] = color;
	Result[int2(xPos + 11, yPos - 91)] = color;
	Result[int2(xPos + 58, yPos - 91)] = color;
	Result[int2(xPos + 61, yPos - 91)] = color;
	Result[int2(xPos + 59, yPos - 92)] = color;
	Result[int2(xPos + 60, yPos - 92)] = color;
	Result[int2(xPos + 9, yPos - 93)] = color;
	Result[int2(xPos + 57, yPos - 93)] = color;
	Result[int2(xPos + 58, yPos - 93)] = color;
	Result[int2(xPos + 59, yPos - 93)] = color;
	Result[int2(xPos + 8, yPos - 94)] = color;
	Result[int2(xPos + 9, yPos - 94)] = color;
	Result[int2(xPos + 59, yPos - 94)] = color;
	Result[int2(xPos + 8, yPos - 95)] = color;
	Result[int2(xPos + 10, yPos - 95)] = color;
	Result[int2(xPos + 58, yPos - 95)] = color;
	Result[int2(xPos, yPos - 99)] = color;
	Result[int2(xPos + 1, yPos - 99)] = color;
	Result[int2(xPos + 1, yPos - 100)] = color;
	Result[int2(xPos + 2, yPos - 100)] = color;
	Result[int2(xPos, yPos - 101)] = color;
}