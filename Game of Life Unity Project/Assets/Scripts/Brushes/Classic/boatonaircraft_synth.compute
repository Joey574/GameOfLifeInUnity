#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 43, yPos)] = color;
	Result[int2(xPos + 41, yPos - 1)] = color;
	Result[int2(xPos + 42, yPos - 1)] = color;
	Result[int2(xPos + 42, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 18, yPos - 17)] = color;
	Result[int2(xPos + 17, yPos - 18)] = color;
	Result[int2(xPos + 17, yPos - 19)] = color;
	Result[int2(xPos + 18, yPos - 19)] = color;
	Result[int2(xPos + 19, yPos - 19)] = color;
	Result[int2(xPos + 34, yPos - 19)] = color;
	Result[int2(xPos + 33, yPos - 20)] = color;
	Result[int2(xPos + 35, yPos - 20)] = color;
	Result[int2(xPos + 18, yPos - 21)] = color;
	Result[int2(xPos + 34, yPos - 21)] = color;
	Result[int2(xPos + 35, yPos - 21)] = color;
	Result[int2(xPos + 17, yPos - 22)] = color;
	Result[int2(xPos + 18, yPos - 22)] = color;
	Result[int2(xPos + 36, yPos - 22)] = color;
	Result[int2(xPos + 37, yPos - 22)] = color;
	Result[int2(xPos + 17, yPos - 23)] = color;
	Result[int2(xPos + 19, yPos - 23)] = color;
	Result[int2(xPos + 36, yPos - 23)] = color;
	Result[int2(xPos + 38, yPos - 24)] = color;
	Result[int2(xPos + 37, yPos - 25)] = color;
	Result[int2(xPos + 38, yPos - 25)] = color;
	Result[int2(xPos + 39, yPos - 34)] = color;
	Result[int2(xPos + 40, yPos - 34)] = color;
	Result[int2(xPos + 41, yPos - 34)] = color;
	Result[int2(xPos + 39, yPos - 35)] = color;
	Result[int2(xPos + 40, yPos - 36)] = color;
	Result[int2(xPos + 1, yPos - 42)] = color;
	Result[int2(xPos + 1, yPos - 43)] = color;
	Result[int2(xPos + 2, yPos - 43)] = color;
	Result[int2(xPos, yPos - 44)] = color;
	Result[int2(xPos + 2, yPos - 44)] = color;
}