#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (27 * xMult), yPos)] = color;
	Result[int2(xPos + (87 * xMult), yPos)] = color;
	Result[int2(xPos + (18 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos, yPos - (15 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (52 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (53 * yMult))] = color;
}