#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 6)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 134)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 135)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 116)) * yMult)] = color;
}