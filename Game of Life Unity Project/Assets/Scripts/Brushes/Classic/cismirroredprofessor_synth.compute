#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (90 * xMult), yPos)] = color;
	Result[int2(xPos + (90 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (92 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (91 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (48 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (86 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (124 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (128 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (129 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (19 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (129 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (129 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (129 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (129 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (26 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (90 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (127 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (130 * xMult), yPos - (27 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (124 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (128 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (129 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos, yPos - (29 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (52 * yMult))] = color;
}