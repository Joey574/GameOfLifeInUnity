#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 13, yPos - 1)] = color;
	Result[int2(xPos + 14, yPos - 1)] = color;
	Result[int2(xPos + 24, yPos - 1)] = color;
	Result[int2(xPos + 25, yPos - 1)] = color;
	Result[int2(xPos + 74, yPos - 1)] = color;
	Result[int2(xPos + 75, yPos - 1)] = color;
	Result[int2(xPos + 85, yPos - 1)] = color;
	Result[int2(xPos + 86, yPos - 1)] = color;
	Result[int2(xPos + 13, yPos - 2)] = color;
	Result[int2(xPos + 14, yPos - 2)] = color;
	Result[int2(xPos + 24, yPos - 2)] = color;
	Result[int2(xPos + 25, yPos - 2)] = color;
	Result[int2(xPos + 74, yPos - 2)] = color;
	Result[int2(xPos + 75, yPos - 2)] = color;
	Result[int2(xPos + 85, yPos - 2)] = color;
	Result[int2(xPos + 86, yPos - 2)] = color;
	Result[int2(xPos + 74, yPos - 4)] = color;
	Result[int2(xPos + 75, yPos - 4)] = color;
	Result[int2(xPos + 85, yPos - 4)] = color;
	Result[int2(xPos + 86, yPos - 4)] = color;
	Result[int2(xPos + 74, yPos - 5)] = color;
	Result[int2(xPos + 75, yPos - 5)] = color;
	Result[int2(xPos + 85, yPos - 5)] = color;
	Result[int2(xPos + 86, yPos - 5)] = color;
	Result[int2(xPos + 30, yPos - 7)] = color;
	Result[int2(xPos + 31, yPos - 7)] = color;
	Result[int2(xPos + 43, yPos - 7)] = color;
	Result[int2(xPos + 44, yPos - 7)] = color;
	Result[int2(xPos + 46, yPos - 7)] = color;
	Result[int2(xPos + 47, yPos - 7)] = color;
	Result[int2(xPos + 59, yPos - 7)] = color;
	Result[int2(xPos + 60, yPos - 7)] = color;
	Result[int2(xPos + 29, yPos - 8)] = color;
	Result[int2(xPos + 31, yPos - 8)] = color;
	Result[int2(xPos + 42, yPos - 8)] = color;
	Result[int2(xPos + 44, yPos - 8)] = color;
	Result[int2(xPos + 46, yPos - 8)] = color;
	Result[int2(xPos + 48, yPos - 8)] = color;
	Result[int2(xPos + 59, yPos - 8)] = color;
	Result[int2(xPos + 61, yPos - 8)] = color;
	Result[int2(xPos + 28, yPos - 9)] = color;
	Result[int2(xPos + 30, yPos - 9)] = color;
	Result[int2(xPos + 41, yPos - 9)] = color;
	Result[int2(xPos + 43, yPos - 9)] = color;
	Result[int2(xPos + 47, yPos - 9)] = color;
	Result[int2(xPos + 48, yPos - 9)] = color;
	Result[int2(xPos + 60, yPos - 9)] = color;
	Result[int2(xPos + 61, yPos - 9)] = color;
	Result[int2(xPos + 28, yPos - 10)] = color;
	Result[int2(xPos + 29, yPos - 10)] = color;
	Result[int2(xPos + 41, yPos - 10)] = color;
	Result[int2(xPos + 42, yPos - 10)] = color;
	Result[int2(xPos + 11, yPos - 26)] = color;
	Result[int2(xPos + 12, yPos - 26)] = color;
	Result[int2(xPos + 10, yPos - 27)] = color;
	Result[int2(xPos + 12, yPos - 27)] = color;
	Result[int2(xPos + 9, yPos - 28)] = color;
	Result[int2(xPos + 11, yPos - 28)] = color;
	Result[int2(xPos + 8, yPos - 29)] = color;
	Result[int2(xPos + 10, yPos - 29)] = color;
	Result[int2(xPos + 7, yPos - 30)] = color;
	Result[int2(xPos + 9, yPos - 30)] = color;
	Result[int2(xPos + 7, yPos - 31)] = color;
	Result[int2(xPos + 8, yPos - 31)] = color;
	Result[int2(xPos + 87, yPos - 35)] = color;
	Result[int2(xPos + 88, yPos - 35)] = color;
	Result[int2(xPos + 87, yPos - 36)] = color;
	Result[int2(xPos + 89, yPos - 36)] = color;
	Result[int2(xPos + 88, yPos - 37)] = color;
	Result[int2(xPos + 90, yPos - 37)] = color;
	Result[int2(xPos + 89, yPos - 38)] = color;
	Result[int2(xPos + 91, yPos - 38)] = color;
	Result[int2(xPos + 11, yPos - 39)] = color;
	Result[int2(xPos + 12, yPos - 39)] = color;
	Result[int2(xPos + 90, yPos - 39)] = color;
	Result[int2(xPos + 92, yPos - 39)] = color;
	Result[int2(xPos + 10, yPos - 40)] = color;
	Result[int2(xPos + 12, yPos - 40)] = color;
	Result[int2(xPos + 91, yPos - 40)] = color;
	Result[int2(xPos + 92, yPos - 40)] = color;
	Result[int2(xPos + 9, yPos - 41)] = color;
	Result[int2(xPos + 11, yPos - 41)] = color;
	Result[int2(xPos + 8, yPos - 42)] = color;
	Result[int2(xPos + 10, yPos - 42)] = color;
	Result[int2(xPos + 7, yPos - 43)] = color;
	Result[int2(xPos + 9, yPos - 43)] = color;
	Result[int2(xPos + 7, yPos - 44)] = color;
	Result[int2(xPos + 8, yPos - 44)] = color;
	Result[int2(xPos + 7, yPos - 46)] = color;
	Result[int2(xPos + 8, yPos - 46)] = color;
	Result[int2(xPos + 7, yPos - 47)] = color;
	Result[int2(xPos + 9, yPos - 47)] = color;
	Result[int2(xPos + 8, yPos - 48)] = color;
	Result[int2(xPos + 10, yPos - 48)] = color;
	Result[int2(xPos + 87, yPos - 48)] = color;
	Result[int2(xPos + 88, yPos - 48)] = color;
	Result[int2(xPos + 9, yPos - 49)] = color;
	Result[int2(xPos + 11, yPos - 49)] = color;
	Result[int2(xPos + 87, yPos - 49)] = color;
	Result[int2(xPos + 89, yPos - 49)] = color;
	Result[int2(xPos + 10, yPos - 50)] = color;
	Result[int2(xPos + 11, yPos - 50)] = color;
	Result[int2(xPos + 88, yPos - 50)] = color;
	Result[int2(xPos + 90, yPos - 50)] = color;
	Result[int2(xPos + 89, yPos - 51)] = color;
	Result[int2(xPos + 91, yPos - 51)] = color;
	Result[int2(xPos + 90, yPos - 52)] = color;
	Result[int2(xPos + 92, yPos - 52)] = color;
	Result[int2(xPos + 91, yPos - 53)] = color;
	Result[int2(xPos + 92, yPos - 53)] = color;
	Result[int2(xPos + 91, yPos - 55)] = color;
	Result[int2(xPos + 92, yPos - 55)] = color;
	Result[int2(xPos + 90, yPos - 56)] = color;
	Result[int2(xPos + 92, yPos - 56)] = color;
	Result[int2(xPos + 89, yPos - 57)] = color;
	Result[int2(xPos + 91, yPos - 57)] = color;
	Result[int2(xPos + 88, yPos - 58)] = color;
	Result[int2(xPos + 90, yPos - 58)] = color;
	Result[int2(xPos + 7, yPos - 59)] = color;
	Result[int2(xPos + 8, yPos - 59)] = color;
	Result[int2(xPos + 88, yPos - 59)] = color;
	Result[int2(xPos + 89, yPos - 59)] = color;
	Result[int2(xPos + 7, yPos - 60)] = color;
	Result[int2(xPos + 9, yPos - 60)] = color;
	Result[int2(xPos + 8, yPos - 61)] = color;
	Result[int2(xPos + 10, yPos - 61)] = color;
	Result[int2(xPos + 9, yPos - 62)] = color;
	Result[int2(xPos + 11, yPos - 62)] = color;
	Result[int2(xPos + 10, yPos - 63)] = color;
	Result[int2(xPos + 11, yPos - 63)] = color;
	Result[int2(xPos + 91, yPos - 68)] = color;
	Result[int2(xPos + 92, yPos - 68)] = color;
	Result[int2(xPos + 90, yPos - 69)] = color;
	Result[int2(xPos + 92, yPos - 69)] = color;
	Result[int2(xPos + 89, yPos - 70)] = color;
	Result[int2(xPos + 91, yPos - 70)] = color;
	Result[int2(xPos + 88, yPos - 71)] = color;
	Result[int2(xPos + 90, yPos - 71)] = color;
	Result[int2(xPos + 88, yPos - 72)] = color;
	Result[int2(xPos + 89, yPos - 72)] = color;
	Result[int2(xPos + 18, yPos - 76)] = color;
	Result[int2(xPos + 19, yPos - 76)] = color;
	Result[int2(xPos + 20, yPos - 76)] = color;
	Result[int2(xPos + 18, yPos - 77)] = color;
	Result[int2(xPos + 21, yPos - 77)] = color;
	Result[int2(xPos + 18, yPos - 78)] = color;
	Result[int2(xPos + 18, yPos - 79)] = color;
	Result[int2(xPos + 19, yPos - 80)] = color;
	Result[int2(xPos + 21, yPos - 80)] = color;
	Result[int2(xPos + 37, yPos - 89)] = color;
	Result[int2(xPos + 38, yPos - 89)] = color;
	Result[int2(xPos + 45, yPos - 89)] = color;
	Result[int2(xPos + 50, yPos - 89)] = color;
	Result[int2(xPos + 51, yPos - 89)] = color;
	Result[int2(xPos + 37, yPos - 90)] = color;
	Result[int2(xPos + 39, yPos - 90)] = color;
	Result[int2(xPos + 44, yPos - 90)] = color;
	Result[int2(xPos + 45, yPos - 90)] = color;
	Result[int2(xPos + 50, yPos - 90)] = color;
	Result[int2(xPos + 52, yPos - 90)] = color;
	Result[int2(xPos + 56, yPos - 90)] = color;
	Result[int2(xPos + 57, yPos - 90)] = color;
	Result[int2(xPos + 69, yPos - 90)] = color;
	Result[int2(xPos + 70, yPos - 90)] = color;
	Result[int2(xPos + 38, yPos - 91)] = color;
	Result[int2(xPos + 40, yPos - 91)] = color;
	Result[int2(xPos + 44, yPos - 91)] = color;
	Result[int2(xPos + 46, yPos - 91)] = color;
	Result[int2(xPos + 51, yPos - 91)] = color;
	Result[int2(xPos + 53, yPos - 91)] = color;
	Result[int2(xPos + 55, yPos - 91)] = color;
	Result[int2(xPos + 57, yPos - 91)] = color;
	Result[int2(xPos + 68, yPos - 91)] = color;
	Result[int2(xPos + 70, yPos - 91)] = color;
	Result[int2(xPos + 39, yPos - 92)] = color;
	Result[int2(xPos + 40, yPos - 92)] = color;
	Result[int2(xPos + 52, yPos - 92)] = color;
	Result[int2(xPos + 53, yPos - 92)] = color;
	Result[int2(xPos + 55, yPos - 92)] = color;
	Result[int2(xPos + 56, yPos - 92)] = color;
	Result[int2(xPos + 68, yPos - 92)] = color;
	Result[int2(xPos + 69, yPos - 92)] = color;
	Result[int2(xPos + 13, yPos - 94)] = color;
	Result[int2(xPos + 14, yPos - 94)] = color;
	Result[int2(xPos + 24, yPos - 94)] = color;
	Result[int2(xPos + 25, yPos - 94)] = color;
	Result[int2(xPos + 13, yPos - 95)] = color;
	Result[int2(xPos + 14, yPos - 95)] = color;
	Result[int2(xPos + 24, yPos - 95)] = color;
	Result[int2(xPos + 25, yPos - 95)] = color;
	Result[int2(xPos + 74, yPos - 96)] = color;
	Result[int2(xPos + 75, yPos - 96)] = color;
	Result[int2(xPos + 85, yPos - 96)] = color;
	Result[int2(xPos + 86, yPos - 96)] = color;
	Result[int2(xPos + 13, yPos - 97)] = color;
	Result[int2(xPos + 14, yPos - 97)] = color;
	Result[int2(xPos + 24, yPos - 97)] = color;
	Result[int2(xPos + 25, yPos - 97)] = color;
	Result[int2(xPos + 74, yPos - 97)] = color;
	Result[int2(xPos + 75, yPos - 97)] = color;
	Result[int2(xPos + 85, yPos - 97)] = color;
	Result[int2(xPos + 86, yPos - 97)] = color;
	Result[int2(xPos + 13, yPos - 98)] = color;
	Result[int2(xPos + 14, yPos - 98)] = color;
	Result[int2(xPos + 24, yPos - 98)] = color;
	Result[int2(xPos + 25, yPos - 98)] = color;
}