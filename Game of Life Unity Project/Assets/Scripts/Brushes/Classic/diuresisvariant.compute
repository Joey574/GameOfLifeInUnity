#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 5, yPos)] = color;
	Result[int2(xPos + 6, yPos)] = color;
	Result[int2(xPos + 23, yPos)] = color;
	Result[int2(xPos + 24, yPos)] = color;
	Result[int2(xPos + 6, yPos - 1)] = color;
	Result[int2(xPos + 23, yPos - 1)] = color;
	Result[int2(xPos + 6, yPos - 2)] = color;
	Result[int2(xPos + 8, yPos - 2)] = color;
	Result[int2(xPos + 21, yPos - 2)] = color;
	Result[int2(xPos + 23, yPos - 2)] = color;
	Result[int2(xPos + 7, yPos - 3)] = color;
	Result[int2(xPos + 8, yPos - 3)] = color;
	Result[int2(xPos + 21, yPos - 3)] = color;
	Result[int2(xPos + 22, yPos - 3)] = color;
	Result[int2(xPos + 4, yPos - 5)] = color;
	Result[int2(xPos + 5, yPos - 5)] = color;
	Result[int2(xPos + 24, yPos - 5)] = color;
	Result[int2(xPos + 25, yPos - 5)] = color;
	Result[int2(xPos + 4, yPos - 6)] = color;
	Result[int2(xPos + 6, yPos - 6)] = color;
	Result[int2(xPos + 17, yPos - 6)] = color;
	Result[int2(xPos + 18, yPos - 6)] = color;
	Result[int2(xPos + 23, yPos - 6)] = color;
	Result[int2(xPos + 25, yPos - 6)] = color;
	Result[int2(xPos + 5, yPos - 7)] = color;
	Result[int2(xPos + 16, yPos - 7)] = color;
	Result[int2(xPos + 18, yPos - 7)] = color;
	Result[int2(xPos + 24, yPos - 7)] = color;
	Result[int2(xPos + 2, yPos - 8)] = color;
	Result[int2(xPos + 16, yPos - 8)] = color;
	Result[int2(xPos + 17, yPos - 8)] = color;
	Result[int2(xPos + 27, yPos - 8)] = color;
	Result[int2(xPos + 2, yPos - 9)] = color;
	Result[int2(xPos + 3, yPos - 9)] = color;
	Result[int2(xPos + 4, yPos - 9)] = color;
	Result[int2(xPos + 5, yPos - 9)] = color;
	Result[int2(xPos + 6, yPos - 9)] = color;
	Result[int2(xPos + 7, yPos - 9)] = color;
	Result[int2(xPos + 16, yPos - 9)] = color;
	Result[int2(xPos + 22, yPos - 9)] = color;
	Result[int2(xPos + 23, yPos - 9)] = color;
	Result[int2(xPos + 24, yPos - 9)] = color;
	Result[int2(xPos + 25, yPos - 9)] = color;
	Result[int2(xPos + 26, yPos - 9)] = color;
	Result[int2(xPos + 27, yPos - 9)] = color;
	Result[int2(xPos + 7, yPos - 10)] = color;
	Result[int2(xPos + 22, yPos - 10)] = color;
	Result[int2(xPos + 4, yPos - 11)] = color;
	Result[int2(xPos + 5, yPos - 11)] = color;
	Result[int2(xPos + 24, yPos - 11)] = color;
	Result[int2(xPos + 25, yPos - 11)] = color;
	Result[int2(xPos + 4, yPos - 12)] = color;
	Result[int2(xPos + 25, yPos - 12)] = color;
	Result[int2(xPos + 5, yPos - 13)] = color;
	Result[int2(xPos + 24, yPos - 13)] = color;
	Result[int2(xPos + 2, yPos - 14)] = color;
	Result[int2(xPos + 3, yPos - 14)] = color;
	Result[int2(xPos + 4, yPos - 14)] = color;
	Result[int2(xPos + 7, yPos - 14)] = color;
	Result[int2(xPos + 22, yPos - 14)] = color;
	Result[int2(xPos + 25, yPos - 14)] = color;
	Result[int2(xPos + 26, yPos - 14)] = color;
	Result[int2(xPos + 27, yPos - 14)] = color;
	Result[int2(xPos + 2, yPos - 15)] = color;
	Result[int2(xPos + 5, yPos - 15)] = color;
	Result[int2(xPos + 6, yPos - 15)] = color;
	Result[int2(xPos + 7, yPos - 15)] = color;
	Result[int2(xPos + 16, yPos - 15)] = color;
	Result[int2(xPos + 22, yPos - 15)] = color;
	Result[int2(xPos + 23, yPos - 15)] = color;
	Result[int2(xPos + 24, yPos - 15)] = color;
	Result[int2(xPos + 28, yPos - 15)] = color;
	Result[int2(xPos + 3, yPos - 16)] = color;
	Result[int2(xPos + 16, yPos - 16)] = color;
	Result[int2(xPos + 17, yPos - 16)] = color;
	Result[int2(xPos + 25, yPos - 16)] = color;
	Result[int2(xPos + 26, yPos - 16)] = color;
	Result[int2(xPos + 27, yPos - 16)] = color;
	Result[int2(xPos + 4, yPos - 17)] = color;
	Result[int2(xPos + 5, yPos - 17)] = color;
	Result[int2(xPos + 16, yPos - 17)] = color;
	Result[int2(xPos + 18, yPos - 17)] = color;
	Result[int2(xPos + 24, yPos - 17)] = color;
	Result[int2(xPos + 6, yPos - 18)] = color;
	Result[int2(xPos + 17, yPos - 18)] = color;
	Result[int2(xPos + 18, yPos - 18)] = color;
	Result[int2(xPos + 23, yPos - 18)] = color;
	Result[int2(xPos + 26, yPos - 18)] = color;
	Result[int2(xPos + 27, yPos - 18)] = color;
	Result[int2(xPos + 4, yPos - 19)] = color;
	Result[int2(xPos + 5, yPos - 19)] = color;
	Result[int2(xPos + 24, yPos - 19)] = color;
	Result[int2(xPos + 25, yPos - 19)] = color;
	Result[int2(xPos + 27, yPos - 19)] = color;
	Result[int2(xPos + 1, yPos - 20)] = color;
	Result[int2(xPos + 4, yPos - 20)] = color;
	Result[int2(xPos + 25, yPos - 20)] = color;
	Result[int2(xPos, yPos - 21)] = color;
	Result[int2(xPos + 2, yPos - 21)] = color;
	Result[int2(xPos + 4, yPos - 21)] = color;
	Result[int2(xPos + 7, yPos - 21)] = color;
	Result[int2(xPos + 8, yPos - 21)] = color;
	Result[int2(xPos + 21, yPos - 21)] = color;
	Result[int2(xPos + 22, yPos - 21)] = color;
	Result[int2(xPos + 25, yPos - 21)] = color;
	Result[int2(xPos + 1, yPos - 22)] = color;
	Result[int2(xPos + 4, yPos - 22)] = color;
	Result[int2(xPos + 6, yPos - 22)] = color;
	Result[int2(xPos + 8, yPos - 22)] = color;
	Result[int2(xPos + 21, yPos - 22)] = color;
	Result[int2(xPos + 23, yPos - 22)] = color;
	Result[int2(xPos + 25, yPos - 22)] = color;
	Result[int2(xPos + 26, yPos - 22)] = color;
	Result[int2(xPos + 4, yPos - 23)] = color;
	Result[int2(xPos + 6, yPos - 23)] = color;
	Result[int2(xPos + 23, yPos - 23)] = color;
	Result[int2(xPos + 26, yPos - 23)] = color;
	Result[int2(xPos + 5, yPos - 24)] = color;
	Result[int2(xPos + 6, yPos - 24)] = color;
	Result[int2(xPos + 23, yPos - 24)] = color;
	Result[int2(xPos + 24, yPos - 24)] = color;
}