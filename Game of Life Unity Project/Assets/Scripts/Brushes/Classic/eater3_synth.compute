#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 100, yPos)] = color;
	Result[int2(xPos + 98, yPos - 1)] = color;
	Result[int2(xPos + 99, yPos - 1)] = color;
	Result[int2(xPos + 99, yPos - 2)] = color;
	Result[int2(xPos + 100, yPos - 2)] = color;
	Result[int2(xPos + 78, yPos - 9)] = color;
	Result[int2(xPos + 77, yPos - 10)] = color;
	Result[int2(xPos + 77, yPos - 11)] = color;
	Result[int2(xPos + 78, yPos - 11)] = color;
	Result[int2(xPos + 79, yPos - 11)] = color;
	Result[int2(xPos + 71, yPos - 12)] = color;
	Result[int2(xPos + 72, yPos - 13)] = color;
	Result[int2(xPos + 70, yPos - 14)] = color;
	Result[int2(xPos + 71, yPos - 14)] = color;
	Result[int2(xPos + 72, yPos - 14)] = color;
	Result[int2(xPos + 4, yPos - 15)] = color;
	Result[int2(xPos + 78, yPos - 15)] = color;
	Result[int2(xPos + 114, yPos - 15)] = color;
	Result[int2(xPos + 115, yPos - 15)] = color;
	Result[int2(xPos + 134, yPos - 15)] = color;
	Result[int2(xPos + 135, yPos - 15)] = color;
	Result[int2(xPos + 154, yPos - 15)] = color;
	Result[int2(xPos + 155, yPos - 15)] = color;
	Result[int2(xPos + 3, yPos - 16)] = color;
	Result[int2(xPos + 79, yPos - 16)] = color;
	Result[int2(xPos + 80, yPos - 16)] = color;
	Result[int2(xPos + 113, yPos - 16)] = color;
	Result[int2(xPos + 116, yPos - 16)] = color;
	Result[int2(xPos + 133, yPos - 16)] = color;
	Result[int2(xPos + 136, yPos - 16)] = color;
	Result[int2(xPos + 153, yPos - 16)] = color;
	Result[int2(xPos + 156, yPos - 16)] = color;
	Result[int2(xPos + 3, yPos - 17)] = color;
	Result[int2(xPos + 4, yPos - 17)] = color;
	Result[int2(xPos + 5, yPos - 17)] = color;
	Result[int2(xPos + 78, yPos - 17)] = color;
	Result[int2(xPos + 79, yPos - 17)] = color;
	Result[int2(xPos + 82, yPos - 17)] = color;
	Result[int2(xPos + 84, yPos - 17)] = color;
	Result[int2(xPos + 114, yPos - 17)] = color;
	Result[int2(xPos + 115, yPos - 17)] = color;
	Result[int2(xPos + 116, yPos - 17)] = color;
	Result[int2(xPos + 134, yPos - 17)] = color;
	Result[int2(xPos + 135, yPos - 17)] = color;
	Result[int2(xPos + 136, yPos - 17)] = color;
	Result[int2(xPos + 154, yPos - 17)] = color;
	Result[int2(xPos + 155, yPos - 17)] = color;
	Result[int2(xPos + 156, yPos - 17)] = color;
	Result[int2(xPos + 1, yPos - 18)] = color;
	Result[int2(xPos + 82, yPos - 18)] = color;
	Result[int2(xPos + 83, yPos - 18)] = color;
	Result[int2(xPos + 2, yPos - 19)] = color;
	Result[int2(xPos + 65, yPos - 19)] = color;
	Result[int2(xPos + 83, yPos - 19)] = color;
	Result[int2(xPos + 112, yPos - 19)] = color;
	Result[int2(xPos + 113, yPos - 19)] = color;
	Result[int2(xPos + 114, yPos - 19)] = color;
	Result[int2(xPos + 115, yPos - 19)] = color;
	Result[int2(xPos + 116, yPos - 19)] = color;
	Result[int2(xPos + 132, yPos - 19)] = color;
	Result[int2(xPos + 133, yPos - 19)] = color;
	Result[int2(xPos + 134, yPos - 19)] = color;
	Result[int2(xPos + 135, yPos - 19)] = color;
	Result[int2(xPos + 136, yPos - 19)] = color;
	Result[int2(xPos + 152, yPos - 19)] = color;
	Result[int2(xPos + 153, yPos - 19)] = color;
	Result[int2(xPos + 154, yPos - 19)] = color;
	Result[int2(xPos + 155, yPos - 19)] = color;
	Result[int2(xPos + 156, yPos - 19)] = color;
	Result[int2(xPos, yPos - 20)] = color;
	Result[int2(xPos + 1, yPos - 20)] = color;
	Result[int2(xPos + 2, yPos - 20)] = color;
	Result[int2(xPos + 31, yPos - 20)] = color;
	Result[int2(xPos + 32, yPos - 20)] = color;
	Result[int2(xPos + 63, yPos - 20)] = color;
	Result[int2(xPos + 65, yPos - 20)] = color;
	Result[int2(xPos + 71, yPos - 20)] = color;
	Result[int2(xPos + 72, yPos - 20)] = color;
	Result[int2(xPos + 111, yPos - 20)] = color;
	Result[int2(xPos + 116, yPos - 20)] = color;
	Result[int2(xPos + 131, yPos - 20)] = color;
	Result[int2(xPos + 136, yPos - 20)] = color;
	Result[int2(xPos + 151, yPos - 20)] = color;
	Result[int2(xPos + 156, yPos - 20)] = color;
	Result[int2(xPos + 31, yPos - 21)] = color;
	Result[int2(xPos + 32, yPos - 21)] = color;
	Result[int2(xPos + 64, yPos - 21)] = color;
	Result[int2(xPos + 65, yPos - 21)] = color;
	Result[int2(xPos + 71, yPos - 21)] = color;
	Result[int2(xPos + 72, yPos - 21)] = color;
	Result[int2(xPos + 110, yPos - 21)] = color;
	Result[int2(xPos + 113, yPos - 21)] = color;
	Result[int2(xPos + 130, yPos - 21)] = color;
	Result[int2(xPos + 133, yPos - 21)] = color;
	Result[int2(xPos + 150, yPos - 21)] = color;
	Result[int2(xPos + 153, yPos - 21)] = color;
	Result[int2(xPos + 12, yPos - 22)] = color;
	Result[int2(xPos + 14, yPos - 22)] = color;
	Result[int2(xPos + 107, yPos - 22)] = color;
	Result[int2(xPos + 110, yPos - 22)] = color;
	Result[int2(xPos + 112, yPos - 22)] = color;
	Result[int2(xPos + 113, yPos - 22)] = color;
	Result[int2(xPos + 127, yPos - 22)] = color;
	Result[int2(xPos + 130, yPos - 22)] = color;
	Result[int2(xPos + 132, yPos - 22)] = color;
	Result[int2(xPos + 133, yPos - 22)] = color;
	Result[int2(xPos + 147, yPos - 22)] = color;
	Result[int2(xPos + 150, yPos - 22)] = color;
	Result[int2(xPos + 152, yPos - 22)] = color;
	Result[int2(xPos + 153, yPos - 22)] = color;
	Result[int2(xPos + 13, yPos - 23)] = color;
	Result[int2(xPos + 14, yPos - 23)] = color;
	Result[int2(xPos + 44, yPos - 23)] = color;
	Result[int2(xPos + 84, yPos - 23)] = color;
	Result[int2(xPos + 106, yPos - 23)] = color;
	Result[int2(xPos + 108, yPos - 23)] = color;
	Result[int2(xPos + 110, yPos - 23)] = color;
	Result[int2(xPos + 126, yPos - 23)] = color;
	Result[int2(xPos + 128, yPos - 23)] = color;
	Result[int2(xPos + 130, yPos - 23)] = color;
	Result[int2(xPos + 137, yPos - 23)] = color;
	Result[int2(xPos + 146, yPos - 23)] = color;
	Result[int2(xPos + 148, yPos - 23)] = color;
	Result[int2(xPos + 150, yPos - 23)] = color;
	Result[int2(xPos + 156, yPos - 23)] = color;
	Result[int2(xPos + 13, yPos - 24)] = color;
	Result[int2(xPos + 43, yPos - 24)] = color;
	Result[int2(xPos + 45, yPos - 24)] = color;
	Result[int2(xPos + 83, yPos - 24)] = color;
	Result[int2(xPos + 85, yPos - 24)] = color;
	Result[int2(xPos + 106, yPos - 24)] = color;
	Result[int2(xPos + 108, yPos - 24)] = color;
	Result[int2(xPos + 110, yPos - 24)] = color;
	Result[int2(xPos + 126, yPos - 24)] = color;
	Result[int2(xPos + 128, yPos - 24)] = color;
	Result[int2(xPos + 130, yPos - 24)] = color;
	Result[int2(xPos + 136, yPos - 24)] = color;
	Result[int2(xPos + 146, yPos - 24)] = color;
	Result[int2(xPos + 148, yPos - 24)] = color;
	Result[int2(xPos + 150, yPos - 24)] = color;
	Result[int2(xPos + 155, yPos - 24)] = color;
	Result[int2(xPos + 157, yPos - 24)] = color;
	Result[int2(xPos + 44, yPos - 25)] = color;
	Result[int2(xPos + 45, yPos - 25)] = color;
	Result[int2(xPos + 84, yPos - 25)] = color;
	Result[int2(xPos + 85, yPos - 25)] = color;
	Result[int2(xPos + 107, yPos - 25)] = color;
	Result[int2(xPos + 108, yPos - 25)] = color;
	Result[int2(xPos + 110, yPos - 25)] = color;
	Result[int2(xPos + 111, yPos - 25)] = color;
	Result[int2(xPos + 127, yPos - 25)] = color;
	Result[int2(xPos + 128, yPos - 25)] = color;
	Result[int2(xPos + 130, yPos - 25)] = color;
	Result[int2(xPos + 131, yPos - 25)] = color;
	Result[int2(xPos + 136, yPos - 25)] = color;
	Result[int2(xPos + 137, yPos - 25)] = color;
	Result[int2(xPos + 138, yPos - 25)] = color;
	Result[int2(xPos + 147, yPos - 25)] = color;
	Result[int2(xPos + 148, yPos - 25)] = color;
	Result[int2(xPos + 150, yPos - 25)] = color;
	Result[int2(xPos + 151, yPos - 25)] = color;
	Result[int2(xPos + 154, yPos - 25)] = color;
	Result[int2(xPos + 157, yPos - 25)] = color;
	Result[int2(xPos + 13, yPos - 26)] = color;
	Result[int2(xPos + 14, yPos - 26)] = color;
	Result[int2(xPos + 15, yPos - 26)] = color;
	Result[int2(xPos + 61, yPos - 26)] = color;
	Result[int2(xPos + 62, yPos - 26)] = color;
	Result[int2(xPos + 155, yPos - 26)] = color;
	Result[int2(xPos + 156, yPos - 26)] = color;
	Result[int2(xPos + 13, yPos - 27)] = color;
	Result[int2(xPos + 60, yPos - 27)] = color;
	Result[int2(xPos + 62, yPos - 27)] = color;
	Result[int2(xPos + 66, yPos - 27)] = color;
	Result[int2(xPos + 68, yPos - 27)] = color;
	Result[int2(xPos + 135, yPos - 27)] = color;
	Result[int2(xPos + 136, yPos - 27)] = color;
	Result[int2(xPos + 14, yPos - 28)] = color;
	Result[int2(xPos + 62, yPos - 28)] = color;
	Result[int2(xPos + 67, yPos - 28)] = color;
	Result[int2(xPos + 68, yPos - 28)] = color;
	Result[int2(xPos + 134, yPos - 28)] = color;
	Result[int2(xPos + 136, yPos - 28)] = color;
	Result[int2(xPos + 67, yPos - 29)] = color;
	Result[int2(xPos + 136, yPos - 29)] = color;
	Result[int2(xPos + 3, yPos - 31)] = color;
	Result[int2(xPos + 68, yPos - 31)] = color;
	Result[int2(xPos + 69, yPos - 31)] = color;
	Result[int2(xPos + 4, yPos - 32)] = color;
	Result[int2(xPos + 5, yPos - 32)] = color;
	Result[int2(xPos + 7, yPos - 32)] = color;
	Result[int2(xPos + 8, yPos - 32)] = color;
	Result[int2(xPos + 35, yPos - 32)] = color;
	Result[int2(xPos + 69, yPos - 32)] = color;
	Result[int2(xPos + 70, yPos - 32)] = color;
	Result[int2(xPos + 75, yPos - 32)] = color;
	Result[int2(xPos + 3, yPos - 33)] = color;
	Result[int2(xPos + 4, yPos - 33)] = color;
	Result[int2(xPos + 7, yPos - 33)] = color;
	Result[int2(xPos + 9, yPos - 33)] = color;
	Result[int2(xPos + 34, yPos - 33)] = color;
	Result[int2(xPos + 36, yPos - 33)] = color;
	Result[int2(xPos + 68, yPos - 33)] = color;
	Result[int2(xPos + 74, yPos - 33)] = color;
	Result[int2(xPos + 76, yPos - 33)] = color;
	Result[int2(xPos + 7, yPos - 34)] = color;
	Result[int2(xPos + 35, yPos - 34)] = color;
	Result[int2(xPos + 36, yPos - 34)] = color;
	Result[int2(xPos + 75, yPos - 34)] = color;
	Result[int2(xPos + 76, yPos - 34)] = color;
	Result[int2(xPos + 52, yPos - 47)] = color;
	Result[int2(xPos + 52, yPos - 48)] = color;
	Result[int2(xPos + 53, yPos - 48)] = color;
	Result[int2(xPos + 51, yPos - 49)] = color;
	Result[int2(xPos + 53, yPos - 49)] = color;
}