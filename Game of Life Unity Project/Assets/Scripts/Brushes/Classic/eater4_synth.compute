#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (123 * xMult), yPos)] = color;
	Result[int2(xPos + (122 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (124 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (85 * xMult), yPos - (33 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (84 * xMult), yPos - (34 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (92 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (92 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (94 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (92 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (93 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (59 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (59 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (79 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (78 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (89 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (76 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (84 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (87 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (87 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (87 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (88 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (89 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (92 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (93 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (94 * yMult))] = color;
	Result[int2(xPos + (120 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (121 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (122 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (120 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (121 * xMult), yPos - (121 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (122 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (122 * yMult))] = color;
	Result[int2(xPos, yPos - (123 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (123 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (124 * yMult))] = color;
}