#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 123, yPos)] = color;
	Result[int2(xPos + 122, yPos - 1)] = color;
	Result[int2(xPos + 122, yPos - 2)] = color;
	Result[int2(xPos + 123, yPos - 2)] = color;
	Result[int2(xPos + 124, yPos - 2)] = color;
	Result[int2(xPos + 83, yPos - 32)] = color;
	Result[int2(xPos + 83, yPos - 33)] = color;
	Result[int2(xPos + 85, yPos - 33)] = color;
	Result[int2(xPos + 83, yPos - 34)] = color;
	Result[int2(xPos + 84, yPos - 34)] = color;
	Result[int2(xPos + 67, yPos - 44)] = color;
	Result[int2(xPos + 92, yPos - 44)] = color;
	Result[int2(xPos + 66, yPos - 45)] = color;
	Result[int2(xPos + 92, yPos - 45)] = color;
	Result[int2(xPos + 94, yPos - 45)] = color;
	Result[int2(xPos + 66, yPos - 46)] = color;
	Result[int2(xPos + 67, yPos - 46)] = color;
	Result[int2(xPos + 68, yPos - 46)] = color;
	Result[int2(xPos + 92, yPos - 46)] = color;
	Result[int2(xPos + 93, yPos - 46)] = color;
	Result[int2(xPos + 54, yPos - 58)] = color;
	Result[int2(xPos + 55, yPos - 59)] = color;
	Result[int2(xPos + 56, yPos - 59)] = color;
	Result[int2(xPos + 54, yPos - 60)] = color;
	Result[int2(xPos + 55, yPos - 60)] = color;
	Result[int2(xPos + 50, yPos - 61)] = color;
	Result[int2(xPos + 51, yPos - 61)] = color;
	Result[int2(xPos + 51, yPos - 62)] = color;
	Result[int2(xPos + 52, yPos - 62)] = color;
	Result[int2(xPos + 59, yPos - 62)] = color;
	Result[int2(xPos + 50, yPos - 63)] = color;
	Result[int2(xPos + 59, yPos - 63)] = color;
	Result[int2(xPos + 60, yPos - 63)] = color;
	Result[int2(xPos + 45, yPos - 64)] = color;
	Result[int2(xPos + 46, yPos - 64)] = color;
	Result[int2(xPos + 58, yPos - 64)] = color;
	Result[int2(xPos + 60, yPos - 64)] = color;
	Result[int2(xPos + 44, yPos - 65)] = color;
	Result[int2(xPos + 46, yPos - 65)] = color;
	Result[int2(xPos + 46, yPos - 66)] = color;
	Result[int2(xPos + 73, yPos - 69)] = color;
	Result[int2(xPos + 73, yPos - 70)] = color;
	Result[int2(xPos + 75, yPos - 70)] = color;
	Result[int2(xPos + 82, yPos - 70)] = color;
	Result[int2(xPos + 73, yPos - 71)] = color;
	Result[int2(xPos + 74, yPos - 71)] = color;
	Result[int2(xPos + 81, yPos - 71)] = color;
	Result[int2(xPos + 81, yPos - 72)] = color;
	Result[int2(xPos + 82, yPos - 72)] = color;
	Result[int2(xPos + 83, yPos - 72)] = color;
	Result[int2(xPos + 77, yPos - 73)] = color;
	Result[int2(xPos + 78, yPos - 73)] = color;
	Result[int2(xPos + 79, yPos - 73)] = color;
	Result[int2(xPos + 77, yPos - 74)] = color;
	Result[int2(xPos + 87, yPos - 74)] = color;
	Result[int2(xPos + 88, yPos - 74)] = color;
	Result[int2(xPos + 78, yPos - 75)] = color;
	Result[int2(xPos + 87, yPos - 75)] = color;
	Result[int2(xPos + 89, yPos - 75)] = color;
	Result[int2(xPos + 87, yPos - 76)] = color;
	Result[int2(xPos + 32, yPos - 83)] = color;
	Result[int2(xPos + 33, yPos - 83)] = color;
	Result[int2(xPos + 34, yPos - 83)] = color;
	Result[int2(xPos + 34, yPos - 84)] = color;
	Result[int2(xPos + 33, yPos - 85)] = color;
	Result[int2(xPos + 74, yPos - 87)] = color;
	Result[int2(xPos + 75, yPos - 87)] = color;
	Result[int2(xPos + 76, yPos - 87)] = color;
	Result[int2(xPos + 74, yPos - 88)] = color;
	Result[int2(xPos + 75, yPos - 89)] = color;
	Result[int2(xPos + 44, yPos - 92)] = color;
	Result[int2(xPos + 45, yPos - 92)] = color;
	Result[int2(xPos + 46, yPos - 92)] = color;
	Result[int2(xPos + 46, yPos - 93)] = color;
	Result[int2(xPos + 45, yPos - 94)] = color;
	Result[int2(xPos + 120, yPos - 119)] = color;
	Result[int2(xPos + 121, yPos - 119)] = color;
	Result[int2(xPos + 122, yPos - 119)] = color;
	Result[int2(xPos + 120, yPos - 120)] = color;
	Result[int2(xPos + 121, yPos - 121)] = color;
	Result[int2(xPos + 1, yPos - 122)] = color;
	Result[int2(xPos + 2, yPos - 122)] = color;
	Result[int2(xPos, yPos - 123)] = color;
	Result[int2(xPos + 2, yPos - 123)] = color;
	Result[int2(xPos + 2, yPos - 124)] = color;
}