#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 143)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 231)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 214)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 215)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 216)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 234)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 293)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 294)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 311)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 214)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 215)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 292)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 295)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 311)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 293)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 294)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 311)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 205)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 206)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 205)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 206)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 285)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 285)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 231)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 230)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 310)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 311)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 322)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 231)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 309)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 312)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 321)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 226)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 227)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 310)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 311)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 321)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 322)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 323)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 226)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 227)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 305)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 306)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 305)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 306)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 326)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 325)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 326)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 325)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 327)) * xMult), (yPos - 31)) * yMult)] = color;
}