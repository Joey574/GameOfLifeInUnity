#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 47, yPos)] = color;
	Result[int2(xPos + 62, yPos)] = color;
	Result[int2(xPos + 46, yPos - 1)] = color;
	Result[int2(xPos + 48, yPos - 1)] = color;
	Result[int2(xPos + 61, yPos - 1)] = color;
	Result[int2(xPos + 63, yPos - 1)] = color;
	Result[int2(xPos + 47, yPos - 2)] = color;
	Result[int2(xPos + 62, yPos - 2)] = color;
	Result[int2(xPos + 13, yPos - 3)] = color;
	Result[int2(xPos + 16, yPos - 3)] = color;
	Result[int2(xPos + 11, yPos - 4)] = color;
	Result[int2(xPos + 13, yPos - 4)] = color;
	Result[int2(xPos + 16, yPos - 4)] = color;
	Result[int2(xPos + 18, yPos - 4)] = color;
	Result[int2(xPos + 12, yPos - 5)] = color;
	Result[int2(xPos + 13, yPos - 5)] = color;
	Result[int2(xPos + 16, yPos - 5)] = color;
	Result[int2(xPos + 17, yPos - 5)] = color;
	Result[int2(xPos, yPos - 11)] = color;
	Result[int2(xPos + 1, yPos - 11)] = color;
	Result[int2(xPos + 28, yPos - 11)] = color;
	Result[int2(xPos + 29, yPos - 11)] = color;
	Result[int2(xPos + 1, yPos - 12)] = color;
	Result[int2(xPos + 2, yPos - 12)] = color;
	Result[int2(xPos + 27, yPos - 12)] = color;
	Result[int2(xPos + 28, yPos - 12)] = color;
	Result[int2(xPos, yPos - 13)] = color;
	Result[int2(xPos + 29, yPos - 13)] = color;
	Result[int2(xPos + 7, yPos - 50)] = color;
	Result[int2(xPos + 22, yPos - 50)] = color;
	Result[int2(xPos + 47, yPos - 50)] = color;
	Result[int2(xPos + 62, yPos - 50)] = color;
	Result[int2(xPos + 6, yPos - 51)] = color;
	Result[int2(xPos + 8, yPos - 51)] = color;
	Result[int2(xPos + 21, yPos - 51)] = color;
	Result[int2(xPos + 23, yPos - 51)] = color;
	Result[int2(xPos + 46, yPos - 51)] = color;
	Result[int2(xPos + 48, yPos - 51)] = color;
	Result[int2(xPos + 61, yPos - 51)] = color;
	Result[int2(xPos + 63, yPos - 51)] = color;
	Result[int2(xPos + 7, yPos - 52)] = color;
	Result[int2(xPos + 22, yPos - 52)] = color;
	Result[int2(xPos + 47, yPos - 52)] = color;
	Result[int2(xPos + 62, yPos - 52)] = color;
	Result[int2(xPos + 47, yPos - 58)] = color;
	Result[int2(xPos + 62, yPos - 58)] = color;
	Result[int2(xPos + 46, yPos - 59)] = color;
	Result[int2(xPos + 48, yPos - 59)] = color;
	Result[int2(xPos + 61, yPos - 59)] = color;
	Result[int2(xPos + 63, yPos - 59)] = color;
	Result[int2(xPos + 47, yPos - 60)] = color;
	Result[int2(xPos + 62, yPos - 60)] = color;
	Result[int2(xPos + 12, yPos - 61)] = color;
	Result[int2(xPos + 13, yPos - 61)] = color;
	Result[int2(xPos + 16, yPos - 61)] = color;
	Result[int2(xPos + 17, yPos - 61)] = color;
	Result[int2(xPos + 11, yPos - 62)] = color;
	Result[int2(xPos + 13, yPos - 62)] = color;
	Result[int2(xPos + 16, yPos - 62)] = color;
	Result[int2(xPos + 18, yPos - 62)] = color;
	Result[int2(xPos + 13, yPos - 63)] = color;
	Result[int2(xPos + 16, yPos - 63)] = color;
	Result[int2(xPos, yPos - 69)] = color;
	Result[int2(xPos + 1, yPos - 69)] = color;
	Result[int2(xPos + 28, yPos - 69)] = color;
	Result[int2(xPos + 29, yPos - 69)] = color;
	Result[int2(xPos + 1, yPos - 70)] = color;
	Result[int2(xPos + 2, yPos - 70)] = color;
	Result[int2(xPos + 27, yPos - 70)] = color;
	Result[int2(xPos + 28, yPos - 70)] = color;
	Result[int2(xPos, yPos - 71)] = color;
	Result[int2(xPos + 29, yPos - 71)] = color;
	Result[int2(xPos + 20, yPos - 94)] = color;
	Result[int2(xPos + 18, yPos - 95)] = color;
	Result[int2(xPos + 19, yPos - 95)] = color;
	Result[int2(xPos + 19, yPos - 96)] = color;
	Result[int2(xPos + 20, yPos - 96)] = color;
	Result[int2(xPos + 12, yPos - 98)] = color;
	Result[int2(xPos + 13, yPos - 99)] = color;
	Result[int2(xPos + 14, yPos - 99)] = color;
	Result[int2(xPos + 7, yPos - 100)] = color;
	Result[int2(xPos + 12, yPos - 100)] = color;
	Result[int2(xPos + 13, yPos - 100)] = color;
	Result[int2(xPos + 22, yPos - 100)] = color;
	Result[int2(xPos + 47, yPos - 100)] = color;
	Result[int2(xPos + 62, yPos - 100)] = color;
	Result[int2(xPos + 6, yPos - 101)] = color;
	Result[int2(xPos + 8, yPos - 101)] = color;
	Result[int2(xPos + 21, yPos - 101)] = color;
	Result[int2(xPos + 23, yPos - 101)] = color;
	Result[int2(xPos + 46, yPos - 101)] = color;
	Result[int2(xPos + 48, yPos - 101)] = color;
	Result[int2(xPos + 53, yPos - 101)] = color;
	Result[int2(xPos + 61, yPos - 101)] = color;
	Result[int2(xPos + 63, yPos - 101)] = color;
	Result[int2(xPos + 7, yPos - 102)] = color;
	Result[int2(xPos + 22, yPos - 102)] = color;
	Result[int2(xPos + 47, yPos - 102)] = color;
	Result[int2(xPos + 51, yPos - 102)] = color;
	Result[int2(xPos + 52, yPos - 102)] = color;
	Result[int2(xPos + 54, yPos - 102)] = color;
	Result[int2(xPos + 55, yPos - 102)] = color;
	Result[int2(xPos + 62, yPos - 102)] = color;
	Result[int2(xPos + 53, yPos - 103)] = color;
	Result[int2(xPos + 53, yPos - 107)] = color;
	Result[int2(xPos + 7, yPos - 108)] = color;
	Result[int2(xPos + 22, yPos - 108)] = color;
	Result[int2(xPos + 47, yPos - 108)] = color;
	Result[int2(xPos + 51, yPos - 108)] = color;
	Result[int2(xPos + 52, yPos - 108)] = color;
	Result[int2(xPos + 54, yPos - 108)] = color;
	Result[int2(xPos + 55, yPos - 108)] = color;
	Result[int2(xPos + 62, yPos - 108)] = color;
	Result[int2(xPos + 6, yPos - 109)] = color;
	Result[int2(xPos + 8, yPos - 109)] = color;
	Result[int2(xPos + 21, yPos - 109)] = color;
	Result[int2(xPos + 23, yPos - 109)] = color;
	Result[int2(xPos + 46, yPos - 109)] = color;
	Result[int2(xPos + 48, yPos - 109)] = color;
	Result[int2(xPos + 53, yPos - 109)] = color;
	Result[int2(xPos + 61, yPos - 109)] = color;
	Result[int2(xPos + 63, yPos - 109)] = color;
	Result[int2(xPos + 7, yPos - 110)] = color;
	Result[int2(xPos + 12, yPos - 110)] = color;
	Result[int2(xPos + 13, yPos - 110)] = color;
	Result[int2(xPos + 22, yPos - 110)] = color;
	Result[int2(xPos + 47, yPos - 110)] = color;
	Result[int2(xPos + 62, yPos - 110)] = color;
	Result[int2(xPos + 13, yPos - 111)] = color;
	Result[int2(xPos + 14, yPos - 111)] = color;
	Result[int2(xPos + 12, yPos - 112)] = color;
	Result[int2(xPos + 19, yPos - 114)] = color;
	Result[int2(xPos + 20, yPos - 114)] = color;
	Result[int2(xPos + 18, yPos - 115)] = color;
	Result[int2(xPos + 19, yPos - 115)] = color;
	Result[int2(xPos + 20, yPos - 116)] = color;
}