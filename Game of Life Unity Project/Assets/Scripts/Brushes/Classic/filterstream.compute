#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 42, yPos)] = color;
	Result[int2(xPos + 43, yPos - 1)] = color;
	Result[int2(xPos + 41, yPos - 2)] = color;
	Result[int2(xPos + 42, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 49, yPos - 7)] = color;
	Result[int2(xPos + 50, yPos - 8)] = color;
	Result[int2(xPos + 48, yPos - 9)] = color;
	Result[int2(xPos + 49, yPos - 9)] = color;
	Result[int2(xPos + 50, yPos - 9)] = color;
	Result[int2(xPos + 56, yPos - 14)] = color;
	Result[int2(xPos + 57, yPos - 15)] = color;
	Result[int2(xPos + 55, yPos - 16)] = color;
	Result[int2(xPos + 56, yPos - 16)] = color;
	Result[int2(xPos + 57, yPos - 16)] = color;
	Result[int2(xPos + 2, yPos - 29)] = color;
	Result[int2(xPos + 16, yPos - 29)] = color;
	Result[int2(xPos + 44, yPos - 29)] = color;
	Result[int2(xPos + 58, yPos - 29)] = color;
	Result[int2(xPos, yPos - 30)] = color;
	Result[int2(xPos + 4, yPos - 30)] = color;
	Result[int2(xPos + 14, yPos - 30)] = color;
	Result[int2(xPos + 18, yPos - 30)] = color;
	Result[int2(xPos + 42, yPos - 30)] = color;
	Result[int2(xPos + 46, yPos - 30)] = color;
	Result[int2(xPos + 56, yPos - 30)] = color;
	Result[int2(xPos + 60, yPos - 30)] = color;
	Result[int2(xPos + 5, yPos - 31)] = color;
	Result[int2(xPos + 19, yPos - 31)] = color;
	Result[int2(xPos + 47, yPos - 31)] = color;
	Result[int2(xPos + 61, yPos - 31)] = color;
	Result[int2(xPos, yPos - 32)] = color;
	Result[int2(xPos + 5, yPos - 32)] = color;
	Result[int2(xPos + 14, yPos - 32)] = color;
	Result[int2(xPos + 19, yPos - 32)] = color;
	Result[int2(xPos + 42, yPos - 32)] = color;
	Result[int2(xPos + 47, yPos - 32)] = color;
	Result[int2(xPos + 56, yPos - 32)] = color;
	Result[int2(xPos + 61, yPos - 32)] = color;
	Result[int2(xPos + 1, yPos - 33)] = color;
	Result[int2(xPos + 2, yPos - 33)] = color;
	Result[int2(xPos + 3, yPos - 33)] = color;
	Result[int2(xPos + 4, yPos - 33)] = color;
	Result[int2(xPos + 5, yPos - 33)] = color;
	Result[int2(xPos + 15, yPos - 33)] = color;
	Result[int2(xPos + 16, yPos - 33)] = color;
	Result[int2(xPos + 17, yPos - 33)] = color;
	Result[int2(xPos + 18, yPos - 33)] = color;
	Result[int2(xPos + 19, yPos - 33)] = color;
	Result[int2(xPos + 43, yPos - 33)] = color;
	Result[int2(xPos + 44, yPos - 33)] = color;
	Result[int2(xPos + 45, yPos - 33)] = color;
	Result[int2(xPos + 46, yPos - 33)] = color;
	Result[int2(xPos + 47, yPos - 33)] = color;
	Result[int2(xPos + 57, yPos - 33)] = color;
	Result[int2(xPos + 58, yPos - 33)] = color;
	Result[int2(xPos + 59, yPos - 33)] = color;
	Result[int2(xPos + 60, yPos - 33)] = color;
	Result[int2(xPos + 61, yPos - 33)] = color;
}