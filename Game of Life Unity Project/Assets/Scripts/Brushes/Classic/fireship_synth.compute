#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 266)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 268)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 266)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 267)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 267)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 96)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 97)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 139)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 139)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 140)) * yMult)] = color;
	Result[int2((xPos + 163)) * xMult), (yPos - 140)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 148)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 148)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 149)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 149)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 150)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 156)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 156)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 156)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 156)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 157)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 157)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 160)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 160)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 160)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 161)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 162)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 164)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 163)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 164)) * yMult)] = color;
	Result[int2((xPos + 164)) * xMult), (yPos - 164)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 165)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 165)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 172)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 173)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 173)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 174)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 174)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 175)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 175)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 175)) * yMult)] = color;
	Result[int2((xPos + 163)) * xMult), (yPos - 175)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 176)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 176)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 176)) * yMult)] = color;
	Result[int2((xPos + 164)) * xMult), (yPos - 176)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 177)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 177)) * yMult)] = color;
	Result[int2((xPos + 246)) * xMult), (yPos - 229)) * yMult)] = color;
	Result[int2((xPos + 245)) * xMult), (yPos - 230)) * yMult)] = color;
	Result[int2((xPos + 246)) * xMult), (yPos - 230)) * yMult)] = color;
	Result[int2((xPos + 245)) * xMult), (yPos - 231)) * yMult)] = color;
	Result[int2((xPos + 247)) * xMult), (yPos - 231)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 233)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 233)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 233)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 233)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 233)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 234)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 234)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 234)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 235)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 235)) * yMult)] = color;
	Result[int2((xPos + 258)) * xMult), (yPos - 235)) * yMult)] = color;
	Result[int2((xPos + 259)) * xMult), (yPos - 235)) * yMult)] = color;
	Result[int2((xPos + 258)) * xMult), (yPos - 236)) * yMult)] = color;
	Result[int2((xPos + 260)) * xMult), (yPos - 236)) * yMult)] = color;
	Result[int2((xPos + 258)) * xMult), (yPos - 237)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 240)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 240)) * yMult)] = color;
	Result[int2((xPos + 235)) * xMult), (yPos - 240)) * yMult)] = color;
	Result[int2((xPos + 236)) * xMult), (yPos - 240)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 241)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 241)) * yMult)] = color;
	Result[int2((xPos + 234)) * xMult), (yPos - 241)) * yMult)] = color;
	Result[int2((xPos + 235)) * xMult), (yPos - 241)) * yMult)] = color;
	Result[int2((xPos + 240)) * xMult), (yPos - 241)) * yMult)] = color;
	Result[int2((xPos + 241)) * xMult), (yPos - 241)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 242)) * yMult)] = color;
	Result[int2((xPos + 236)) * xMult), (yPos - 242)) * yMult)] = color;
	Result[int2((xPos + 239)) * xMult), (yPos - 242)) * yMult)] = color;
	Result[int2((xPos + 240)) * xMult), (yPos - 242)) * yMult)] = color;
	Result[int2((xPos + 241)) * xMult), (yPos - 243)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 245)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 245)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 245)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 246)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 247)) * yMult)] = color;
	Result[int2((xPos + 237)) * xMult), (yPos - 248)) * yMult)] = color;
	Result[int2((xPos + 238)) * xMult), (yPos - 248)) * yMult)] = color;
	Result[int2((xPos + 236)) * xMult), (yPos - 249)) * yMult)] = color;
	Result[int2((xPos + 237)) * xMult), (yPos - 249)) * yMult)] = color;
	Result[int2((xPos + 238)) * xMult), (yPos - 250)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 251)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 251)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 252)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 252)) * yMult)] = color;
	Result[int2((xPos + 268)) * xMult), (yPos - 252)) * yMult)] = color;
	Result[int2((xPos + 269)) * xMult), (yPos - 252)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 253)) * yMult)] = color;
	Result[int2((xPos + 268)) * xMult), (yPos - 253)) * yMult)] = color;
	Result[int2((xPos + 270)) * xMult), (yPos - 253)) * yMult)] = color;
	Result[int2((xPos + 268)) * xMult), (yPos - 254)) * yMult)] = color;
	Result[int2((xPos + 266)) * xMult), (yPos - 256)) * yMult)] = color;
	Result[int2((xPos + 265)) * xMult), (yPos - 257)) * yMult)] = color;
	Result[int2((xPos + 266)) * xMult), (yPos - 257)) * yMult)] = color;
	Result[int2((xPos + 265)) * xMult), (yPos - 258)) * yMult)] = color;
	Result[int2((xPos + 267)) * xMult), (yPos - 258)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 259)) * yMult)] = color;
	Result[int2((xPos + 262)) * xMult), (yPos - 259)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 260)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 260)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 260)) * yMult)] = color;
	Result[int2((xPos + 262)) * xMult), (yPos - 260)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 261)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 261)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 261)) * yMult)] = color;
	Result[int2((xPos + 263)) * xMult), (yPos - 261)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 269)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 269)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 270)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 270)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 271)) * yMult)] = color;
	Result[int2((xPos + 248)) * xMult), (yPos - 272)) * yMult)] = color;
	Result[int2((xPos + 249)) * xMult), (yPos - 272)) * yMult)] = color;
	Result[int2((xPos + 250)) * xMult), (yPos - 272)) * yMult)] = color;
	Result[int2((xPos + 259)) * xMult), (yPos - 272)) * yMult)] = color;
	Result[int2((xPos + 260)) * xMult), (yPos - 272)) * yMult)] = color;
	Result[int2((xPos + 248)) * xMult), (yPos - 273)) * yMult)] = color;
	Result[int2((xPos + 258)) * xMult), (yPos - 273)) * yMult)] = color;
	Result[int2((xPos + 259)) * xMult), (yPos - 273)) * yMult)] = color;
	Result[int2((xPos + 249)) * xMult), (yPos - 274)) * yMult)] = color;
	Result[int2((xPos + 260)) * xMult), (yPos - 274)) * yMult)] = color;
}