#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 192)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 192)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 191)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 167)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 168)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 86)) * yMult)] = color;
}