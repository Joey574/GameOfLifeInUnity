#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 9)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 130)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 189)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 190)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 210)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 229)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 230)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 249)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 250)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 269)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 270)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 289)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 290)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 309)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 310)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 329)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 330)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 349)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 350)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 130)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 136)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 163)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 169)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 178)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 182)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 189)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 190)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 196)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 197)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 198)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 210)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 216)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 217)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 218)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 221)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 222)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 223)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 229)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 230)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 236)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 237)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 238)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 241)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 242)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 243)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 249)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 250)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 256)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 257)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 258)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 262)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 263)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 269)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 270)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 276)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 277)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 278)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 289)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 290)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 296)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 297)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 298)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 301)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 302)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 303)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 309)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 310)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 316)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 317)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 318)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 321)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 322)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 323)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 329)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 330)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 336)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 337)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 338)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 341)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 342)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 343)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 349)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 350)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 356)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 357)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 358)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 178)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 198)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 218)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 221)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 238)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 241)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 258)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 278)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 298)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 301)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 318)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 321)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 338)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 341)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 358)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 137)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 182)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 197)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 217)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 222)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 237)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 242)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 257)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 262)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 277)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 297)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 302)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 317)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 322)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 337)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 342)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 357)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 179)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 219)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 239)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 240)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 259)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 260)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 299)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 300)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 319)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 320)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 339)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 340)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 359)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 179)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 219)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 239)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 240)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 259)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 260)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 299)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 300)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 319)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 320)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 339)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 340)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 359)) * xMult), (yPos - 6)) * yMult)] = color;
}