#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 12)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 96)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 96)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 97)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 97)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 98)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 120)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 120)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 121)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 121)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 121)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 121)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 127)) * yMult)] = color;
}