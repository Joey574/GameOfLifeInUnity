#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (1 * xMult), yPos)] = color;
	Result[int2(xPos + (2 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos, yPos - (2 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (37 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (38 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (36 * xMult), yPos - (56 * yMult))] = color;
}