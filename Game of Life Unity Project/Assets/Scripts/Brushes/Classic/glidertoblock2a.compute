#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 69, yPos)] = color;
	Result[int2(xPos + 68, yPos - 1)] = color;
	Result[int2(xPos + 68, yPos - 2)] = color;
	Result[int2(xPos + 69, yPos - 2)] = color;
	Result[int2(xPos + 70, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 27)] = color;
	Result[int2(xPos + 2, yPos - 28)] = color;
	Result[int2(xPos, yPos - 29)] = color;
	Result[int2(xPos + 1, yPos - 29)] = color;
	Result[int2(xPos + 2, yPos - 29)] = color;
	Result[int2(xPos + 14, yPos - 40)] = color;
	Result[int2(xPos + 15, yPos - 41)] = color;
	Result[int2(xPos + 13, yPos - 42)] = color;
	Result[int2(xPos + 14, yPos - 42)] = color;
	Result[int2(xPos + 15, yPos - 42)] = color;
	Result[int2(xPos + 32, yPos - 44)] = color;
	Result[int2(xPos + 33, yPos - 44)] = color;
	Result[int2(xPos + 32, yPos - 45)] = color;
	Result[int2(xPos + 33, yPos - 45)] = color;
	Result[int2(xPos + 21, yPos - 51)] = color;
	Result[int2(xPos + 22, yPos - 51)] = color;
	Result[int2(xPos + 21, yPos - 52)] = color;
	Result[int2(xPos + 22, yPos - 52)] = color;
	Result[int2(xPos + 30, yPos - 60)] = color;
	Result[int2(xPos + 31, yPos - 60)] = color;
	Result[int2(xPos + 37, yPos - 60)] = color;
	Result[int2(xPos + 38, yPos - 60)] = color;
	Result[int2(xPos + 29, yPos - 61)] = color;
	Result[int2(xPos + 32, yPos - 61)] = color;
	Result[int2(xPos + 37, yPos - 61)] = color;
	Result[int2(xPos + 39, yPos - 61)] = color;
	Result[int2(xPos + 25, yPos - 62)] = color;
	Result[int2(xPos + 26, yPos - 62)] = color;
	Result[int2(xPos + 30, yPos - 62)] = color;
	Result[int2(xPos + 32, yPos - 62)] = color;
	Result[int2(xPos + 39, yPos - 62)] = color;
	Result[int2(xPos + 21, yPos - 63)] = color;
	Result[int2(xPos + 22, yPos - 63)] = color;
	Result[int2(xPos + 24, yPos - 63)] = color;
	Result[int2(xPos + 26, yPos - 63)] = color;
	Result[int2(xPos + 31, yPos - 63)] = color;
	Result[int2(xPos + 39, yPos - 63)] = color;
	Result[int2(xPos + 40, yPos - 63)] = color;
	Result[int2(xPos + 22, yPos - 64)] = color;
	Result[int2(xPos + 24, yPos - 64)] = color;
	Result[int2(xPos + 34, yPos - 64)] = color;
	Result[int2(xPos + 35, yPos - 64)] = color;
	Result[int2(xPos + 21, yPos - 65)] = color;
	Result[int2(xPos + 24, yPos - 65)] = color;
	Result[int2(xPos + 25, yPos - 65)] = color;
	Result[int2(xPos + 34, yPos - 65)] = color;
	Result[int2(xPos + 22, yPos - 66)] = color;
	Result[int2(xPos + 23, yPos - 66)] = color;
	Result[int2(xPos + 35, yPos - 66)] = color;
	Result[int2(xPos + 36, yPos - 66)] = color;
	Result[int2(xPos + 37, yPos - 66)] = color;
	Result[int2(xPos + 24, yPos - 67)] = color;
	Result[int2(xPos + 25, yPos - 67)] = color;
	Result[int2(xPos + 37, yPos - 67)] = color;
	Result[int2(xPos + 24, yPos - 68)] = color;
	Result[int2(xPos + 25, yPos - 69)] = color;
	Result[int2(xPos + 24, yPos - 70)] = color;
	Result[int2(xPos + 25, yPos - 70)] = color;
}