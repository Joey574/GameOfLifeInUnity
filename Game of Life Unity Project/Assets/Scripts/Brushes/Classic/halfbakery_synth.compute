#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 26)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 60)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 61)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 71)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 147)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 146)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 142)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 90)) * yMult)] = color;
}