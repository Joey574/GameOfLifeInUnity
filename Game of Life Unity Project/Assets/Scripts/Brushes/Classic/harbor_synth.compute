#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 80)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 66)) * yMult)] = color;
}