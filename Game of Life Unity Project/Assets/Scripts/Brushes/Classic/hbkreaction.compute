#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 57, yPos)] = color;
	Result[int2(xPos + 56, yPos - 1)] = color;
	Result[int2(xPos + 56, yPos - 2)] = color;
	Result[int2(xPos + 57, yPos - 2)] = color;
	Result[int2(xPos + 58, yPos - 2)] = color;
	Result[int2(xPos + 36, yPos - 14)] = color;
	Result[int2(xPos + 34, yPos - 15)] = color;
	Result[int2(xPos + 35, yPos - 15)] = color;
	Result[int2(xPos + 35, yPos - 16)] = color;
	Result[int2(xPos + 36, yPos - 16)] = color;
	Result[int2(xPos + 20, yPos - 38)] = color;
	Result[int2(xPos + 21, yPos - 38)] = color;
	Result[int2(xPos + 19, yPos - 39)] = color;
	Result[int2(xPos + 22, yPos - 39)] = color;
	Result[int2(xPos + 19, yPos - 40)] = color;
	Result[int2(xPos + 21, yPos - 40)] = color;
	Result[int2(xPos + 17, yPos - 41)] = color;
	Result[int2(xPos + 18, yPos - 41)] = color;
	Result[int2(xPos + 20, yPos - 41)] = color;
	Result[int2(xPos + 16, yPos - 42)] = color;
	Result[int2(xPos + 19, yPos - 42)] = color;
	Result[int2(xPos + 16, yPos - 43)] = color;
	Result[int2(xPos + 18, yPos - 43)] = color;
	Result[int2(xPos + 17, yPos - 44)] = color;
	Result[int2(xPos + 4, yPos - 46)] = color;
	Result[int2(xPos + 5, yPos - 46)] = color;
	Result[int2(xPos + 3, yPos - 47)] = color;
	Result[int2(xPos + 6, yPos - 47)] = color;
	Result[int2(xPos + 3, yPos - 48)] = color;
	Result[int2(xPos + 5, yPos - 48)] = color;
	Result[int2(xPos + 1, yPos - 49)] = color;
	Result[int2(xPos + 2, yPos - 49)] = color;
	Result[int2(xPos + 4, yPos - 49)] = color;
	Result[int2(xPos, yPos - 50)] = color;
	Result[int2(xPos + 3, yPos - 50)] = color;
	Result[int2(xPos, yPos - 51)] = color;
	Result[int2(xPos + 2, yPos - 51)] = color;
	Result[int2(xPos + 1, yPos - 52)] = color;
}