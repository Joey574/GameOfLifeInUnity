#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 7)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 37)) * yMult)] = color;
}