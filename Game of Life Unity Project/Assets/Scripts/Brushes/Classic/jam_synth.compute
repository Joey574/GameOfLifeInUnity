#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 61, yPos)] = color;
	Result[int2(xPos + 63, yPos)] = color;
	Result[int2(xPos + 62, yPos - 1)] = color;
	Result[int2(xPos + 63, yPos - 1)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 62, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos + 3, yPos - 3)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 2, yPos - 4)] = color;
	Result[int2(xPos + 6, yPos - 4)] = color;
	Result[int2(xPos + 7, yPos - 4)] = color;
	Result[int2(xPos + 5, yPos - 5)] = color;
	Result[int2(xPos + 7, yPos - 5)] = color;
	Result[int2(xPos + 34, yPos - 5)] = color;
	Result[int2(xPos + 35, yPos - 5)] = color;
	Result[int2(xPos + 62, yPos - 5)] = color;
	Result[int2(xPos + 63, yPos - 5)] = color;
	Result[int2(xPos + 74, yPos - 5)] = color;
	Result[int2(xPos + 75, yPos - 5)] = color;
	Result[int2(xPos + 7, yPos - 6)] = color;
	Result[int2(xPos + 33, yPos - 6)] = color;
	Result[int2(xPos + 36, yPos - 6)] = color;
	Result[int2(xPos + 56, yPos - 6)] = color;
	Result[int2(xPos + 63, yPos - 6)] = color;
	Result[int2(xPos + 64, yPos - 6)] = color;
	Result[int2(xPos + 73, yPos - 6)] = color;
	Result[int2(xPos + 76, yPos - 6)] = color;
	Result[int2(xPos + 1, yPos - 7)] = color;
	Result[int2(xPos + 2, yPos - 7)] = color;
	Result[int2(xPos + 34, yPos - 7)] = color;
	Result[int2(xPos + 35, yPos - 7)] = color;
	Result[int2(xPos + 56, yPos - 7)] = color;
	Result[int2(xPos + 57, yPos - 7)] = color;
	Result[int2(xPos + 62, yPos - 7)] = color;
	Result[int2(xPos + 74, yPos - 7)] = color;
	Result[int2(xPos + 75, yPos - 7)] = color;
	Result[int2(xPos + 102, yPos - 7)] = color;
	Result[int2(xPos + 103, yPos - 7)] = color;
	Result[int2(xPos, yPos - 8)] = color;
	Result[int2(xPos + 2, yPos - 8)] = color;
	Result[int2(xPos + 55, yPos - 8)] = color;
	Result[int2(xPos + 57, yPos - 8)] = color;
	Result[int2(xPos + 101, yPos - 8)] = color;
	Result[int2(xPos + 104, yPos - 8)] = color;
	Result[int2(xPos + 2, yPos - 9)] = color;
	Result[int2(xPos + 99, yPos - 9)] = color;
	Result[int2(xPos + 102, yPos - 9)] = color;
	Result[int2(xPos + 104, yPos - 9)] = color;
	Result[int2(xPos + 31, yPos - 10)] = color;
	Result[int2(xPos + 32, yPos - 10)] = color;
	Result[int2(xPos + 71, yPos - 10)] = color;
	Result[int2(xPos + 72, yPos - 10)] = color;
	Result[int2(xPos + 98, yPos - 10)] = color;
	Result[int2(xPos + 103, yPos - 10)] = color;
	Result[int2(xPos + 30, yPos - 11)] = color;
	Result[int2(xPos + 33, yPos - 11)] = color;
	Result[int2(xPos + 70, yPos - 11)] = color;
	Result[int2(xPos + 73, yPos - 11)] = color;
	Result[int2(xPos + 98, yPos - 11)] = color;
	Result[int2(xPos + 31, yPos - 12)] = color;
	Result[int2(xPos + 32, yPos - 12)] = color;
	Result[int2(xPos + 71, yPos - 12)] = color;
	Result[int2(xPos + 72, yPos - 12)] = color;
	Result[int2(xPos + 100, yPos - 12)] = color;
	Result[int2(xPos + 101, yPos - 12)] = color;
	Result[int2(xPos + 102, yPos - 12)] = color;
	Result[int2(xPos + 102, yPos - 36)] = color;
	Result[int2(xPos + 103, yPos - 36)] = color;
	Result[int2(xPos + 102, yPos - 37)] = color;
	Result[int2(xPos + 104, yPos - 37)] = color;
	Result[int2(xPos + 102, yPos - 38)] = color;
	Result[int2(xPos + 95, yPos - 39)] = color;
	Result[int2(xPos + 95, yPos - 40)] = color;
	Result[int2(xPos + 96, yPos - 40)] = color;
	Result[int2(xPos + 99, yPos - 40)] = color;
	Result[int2(xPos + 100, yPos - 40)] = color;
	Result[int2(xPos + 101, yPos - 40)] = color;
	Result[int2(xPos + 94, yPos - 41)] = color;
	Result[int2(xPos + 96, yPos - 41)] = color;
	Result[int2(xPos + 101, yPos - 41)] = color;
	Result[int2(xPos + 100, yPos - 42)] = color;
	Result[int2(xPos + 105, yPos - 43)] = color;
	Result[int2(xPos + 106, yPos - 43)] = color;
	Result[int2(xPos + 104, yPos - 44)] = color;
	Result[int2(xPos + 105, yPos - 44)] = color;
	Result[int2(xPos + 94, yPos - 45)] = color;
	Result[int2(xPos + 106, yPos - 45)] = color;
	Result[int2(xPos + 94, yPos - 46)] = color;
	Result[int2(xPos + 95, yPos - 46)] = color;
	Result[int2(xPos + 93, yPos - 47)] = color;
	Result[int2(xPos + 95, yPos - 47)] = color;
	Result[int2(xPos + 101, yPos - 47)] = color;
	Result[int2(xPos + 102, yPos - 47)] = color;
	Result[int2(xPos + 100, yPos - 48)] = color;
	Result[int2(xPos + 101, yPos - 48)] = color;
	Result[int2(xPos + 102, yPos - 49)] = color;
}