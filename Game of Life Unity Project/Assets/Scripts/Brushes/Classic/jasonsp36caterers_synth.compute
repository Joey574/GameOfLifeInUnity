#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 115)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 210)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 211)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 212)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 211)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 212)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 148)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 149)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 221)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 222)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 223)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 214)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 215)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 224)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 170)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 216)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 224)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 225)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 226)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 227)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 215)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 216)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 222)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 211)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 217)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 218)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 106)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 156)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 157)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 158)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 163)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 206)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 207)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 208)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 217)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 159)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 163)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 218)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 219)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 163)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 160)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 210)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 161)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 162)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 211)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 212)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 184)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 185)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 184)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 185)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 221)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 222)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 171)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 221)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 222)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 223)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 224)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 224)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 44)) * yMult)] = color;
}