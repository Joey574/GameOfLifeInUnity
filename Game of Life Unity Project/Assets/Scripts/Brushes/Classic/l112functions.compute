#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 15, yPos)] = color;
	Result[int2(xPos + 16, yPos)] = color;
	Result[int2(xPos + 6, yPos - 1)] = color;
	Result[int2(xPos + 7, yPos - 1)] = color;
	Result[int2(xPos + 15, yPos - 1)] = color;
	Result[int2(xPos + 16, yPos - 1)] = color;
	Result[int2(xPos + 7, yPos - 2)] = color;
	Result[int2(xPos + 7, yPos - 3)] = color;
	Result[int2(xPos + 9, yPos - 3)] = color;
	Result[int2(xPos + 2, yPos - 4)] = color;
	Result[int2(xPos + 3, yPos - 4)] = color;
	Result[int2(xPos + 8, yPos - 4)] = color;
	Result[int2(xPos + 9, yPos - 4)] = color;
	Result[int2(xPos + 3, yPos - 5)] = color;
	Result[int2(xPos + 24, yPos - 5)] = color;
	Result[int2(xPos + 25, yPos - 5)] = color;
	Result[int2(xPos + 3, yPos - 6)] = color;
	Result[int2(xPos + 5, yPos - 6)] = color;
	Result[int2(xPos + 24, yPos - 6)] = color;
	Result[int2(xPos + 4, yPos - 7)] = color;
	Result[int2(xPos + 5, yPos - 7)] = color;
	Result[int2(xPos + 22, yPos - 7)] = color;
	Result[int2(xPos + 24, yPos - 7)] = color;
	Result[int2(xPos + 22, yPos - 8)] = color;
	Result[int2(xPos + 23, yPos - 8)] = color;
	Result[int2(xPos + 4, yPos - 14)] = color;
	Result[int2(xPos + 4, yPos - 15)] = color;
	Result[int2(xPos + 6, yPos - 15)] = color;
	Result[int2(xPos + 4, yPos - 16)] = color;
	Result[int2(xPos + 5, yPos - 16)] = color;
	Result[int2(xPos + 6, yPos - 16)] = color;
	Result[int2(xPos + 6, yPos - 17)] = color;
	Result[int2(xPos + 11, yPos - 19)] = color;
	Result[int2(xPos + 12, yPos - 19)] = color;
	Result[int2(xPos + 11, yPos - 20)] = color;
	Result[int2(xPos + 12, yPos - 20)] = color;
	Result[int2(xPos + 24, yPos - 30)] = color;
	Result[int2(xPos + 23, yPos - 31)] = color;
	Result[int2(xPos + 24, yPos - 31)] = color;
	Result[int2(xPos + 23, yPos - 32)] = color;
	Result[int2(xPos + 25, yPos - 32)] = color;
	Result[int2(xPos + 15, yPos - 37)] = color;
	Result[int2(xPos + 16, yPos - 37)] = color;
	Result[int2(xPos + 6, yPos - 38)] = color;
	Result[int2(xPos + 7, yPos - 38)] = color;
	Result[int2(xPos + 15, yPos - 38)] = color;
	Result[int2(xPos + 16, yPos - 38)] = color;
	Result[int2(xPos + 7, yPos - 39)] = color;
	Result[int2(xPos + 40, yPos - 39)] = color;
	Result[int2(xPos + 7, yPos - 40)] = color;
	Result[int2(xPos + 9, yPos - 40)] = color;
	Result[int2(xPos + 41, yPos - 40)] = color;
	Result[int2(xPos + 2, yPos - 41)] = color;
	Result[int2(xPos + 3, yPos - 41)] = color;
	Result[int2(xPos + 8, yPos - 41)] = color;
	Result[int2(xPos + 9, yPos - 41)] = color;
	Result[int2(xPos + 39, yPos - 41)] = color;
	Result[int2(xPos + 40, yPos - 41)] = color;
	Result[int2(xPos + 3, yPos - 42)] = color;
	Result[int2(xPos + 24, yPos - 42)] = color;
	Result[int2(xPos + 25, yPos - 42)] = color;
	Result[int2(xPos + 3, yPos - 43)] = color;
	Result[int2(xPos + 5, yPos - 43)] = color;
	Result[int2(xPos + 24, yPos - 43)] = color;
	Result[int2(xPos + 4, yPos - 44)] = color;
	Result[int2(xPos + 5, yPos - 44)] = color;
	Result[int2(xPos + 22, yPos - 44)] = color;
	Result[int2(xPos + 24, yPos - 44)] = color;
	Result[int2(xPos + 22, yPos - 45)] = color;
	Result[int2(xPos + 23, yPos - 45)] = color;
	Result[int2(xPos + 4, yPos - 51)] = color;
	Result[int2(xPos + 4, yPos - 52)] = color;
	Result[int2(xPos + 6, yPos - 52)] = color;
	Result[int2(xPos + 4, yPos - 53)] = color;
	Result[int2(xPos + 5, yPos - 53)] = color;
	Result[int2(xPos + 6, yPos - 53)] = color;
	Result[int2(xPos + 6, yPos - 54)] = color;
	Result[int2(xPos + 1, yPos - 67)] = color;
	Result[int2(xPos + 2, yPos - 67)] = color;
	Result[int2(xPos, yPos - 68)] = color;
	Result[int2(xPos + 2, yPos - 68)] = color;
	Result[int2(xPos + 2, yPos - 69)] = color;
	Result[int2(xPos + 15, yPos - 74)] = color;
	Result[int2(xPos + 16, yPos - 74)] = color;
	Result[int2(xPos + 6, yPos - 75)] = color;
	Result[int2(xPos + 7, yPos - 75)] = color;
	Result[int2(xPos + 15, yPos - 75)] = color;
	Result[int2(xPos + 16, yPos - 75)] = color;
	Result[int2(xPos + 7, yPos - 76)] = color;
	Result[int2(xPos + 40, yPos - 76)] = color;
	Result[int2(xPos + 7, yPos - 77)] = color;
	Result[int2(xPos + 9, yPos - 77)] = color;
	Result[int2(xPos + 41, yPos - 77)] = color;
	Result[int2(xPos + 2, yPos - 78)] = color;
	Result[int2(xPos + 3, yPos - 78)] = color;
	Result[int2(xPos + 8, yPos - 78)] = color;
	Result[int2(xPos + 9, yPos - 78)] = color;
	Result[int2(xPos + 39, yPos - 78)] = color;
	Result[int2(xPos + 40, yPos - 78)] = color;
	Result[int2(xPos + 3, yPos - 79)] = color;
	Result[int2(xPos + 24, yPos - 79)] = color;
	Result[int2(xPos + 25, yPos - 79)] = color;
	Result[int2(xPos + 3, yPos - 80)] = color;
	Result[int2(xPos + 5, yPos - 80)] = color;
	Result[int2(xPos + 24, yPos - 80)] = color;
	Result[int2(xPos + 4, yPos - 81)] = color;
	Result[int2(xPos + 5, yPos - 81)] = color;
	Result[int2(xPos + 22, yPos - 81)] = color;
	Result[int2(xPos + 24, yPos - 81)] = color;
	Result[int2(xPos + 22, yPos - 82)] = color;
	Result[int2(xPos + 23, yPos - 82)] = color;
	Result[int2(xPos + 4, yPos - 88)] = color;
	Result[int2(xPos + 4, yPos - 89)] = color;
	Result[int2(xPos + 6, yPos - 89)] = color;
	Result[int2(xPos + 4, yPos - 90)] = color;
	Result[int2(xPos + 5, yPos - 90)] = color;
	Result[int2(xPos + 6, yPos - 90)] = color;
	Result[int2(xPos + 6, yPos - 91)] = color;
	Result[int2(xPos + 49, yPos - 95)] = color;
	Result[int2(xPos + 47, yPos - 96)] = color;
	Result[int2(xPos + 48, yPos - 96)] = color;
	Result[int2(xPos + 49, yPos - 96)] = color;
	Result[int2(xPos + 30, yPos - 97)] = color;
	Result[int2(xPos + 31, yPos - 97)] = color;
	Result[int2(xPos + 47, yPos - 97)] = color;
	Result[int2(xPos + 30, yPos - 98)] = color;
	Result[int2(xPos + 31, yPos - 98)] = color;
	Result[int2(xPos + 47, yPos - 98)] = color;
	Result[int2(xPos + 11, yPos - 100)] = color;
	Result[int2(xPos + 10, yPos - 101)] = color;
	Result[int2(xPos + 12, yPos - 101)] = color;
	Result[int2(xPos + 9, yPos - 102)] = color;
	Result[int2(xPos + 12, yPos - 102)] = color;
	Result[int2(xPos + 1, yPos - 103)] = color;
	Result[int2(xPos + 10, yPos - 103)] = color;
	Result[int2(xPos + 11, yPos - 103)] = color;
	Result[int2(xPos + 1, yPos - 104)] = color;
	Result[int2(xPos + 2, yPos - 104)] = color;
	Result[int2(xPos + 27, yPos - 104)] = color;
	Result[int2(xPos + 28, yPos - 104)] = color;
	Result[int2(xPos, yPos - 105)] = color;
	Result[int2(xPos + 2, yPos - 105)] = color;
	Result[int2(xPos + 27, yPos - 105)] = color;
	Result[int2(xPos + 28, yPos - 106)] = color;
	Result[int2(xPos + 27, yPos - 107)] = color;
	Result[int2(xPos + 28, yPos - 107)] = color;
}