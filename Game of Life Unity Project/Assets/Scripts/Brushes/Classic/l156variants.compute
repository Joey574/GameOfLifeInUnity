#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 44)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 148)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 148)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 149)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 149)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 150)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 150)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 150)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 150)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 151)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 152)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 153)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 154)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 155)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 156)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 157)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 157)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 157)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 158)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 158)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 158)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 158)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 158)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 159)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 159)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 159)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 159)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 160)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 160)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 160)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 164)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 165)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 165)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 166)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 167)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 168)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 168)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 169)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 170)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 170)) * yMult)] = color;
}