#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos + 3, yPos)] = color;
	Result[int2(xPos + 4, yPos)] = color;
	Result[int2(xPos + 21, yPos)] = color;
	Result[int2(xPos + 22, yPos)] = color;
	Result[int2(xPos + 23, yPos)] = color;
	Result[int2(xPos + 24, yPos)] = color;
	Result[int2(xPos, yPos - 1)] = color;
	Result[int2(xPos + 4, yPos - 1)] = color;
	Result[int2(xPos + 20, yPos - 1)] = color;
	Result[int2(xPos + 24, yPos - 1)] = color;
	Result[int2(xPos + 4, yPos - 2)] = color;
	Result[int2(xPos + 24, yPos - 2)] = color;
	Result[int2(xPos + 30, yPos - 2)] = color;
	Result[int2(xPos + 31, yPos - 2)] = color;
	Result[int2(xPos + 32, yPos - 2)] = color;
	Result[int2(xPos, yPos - 3)] = color;
	Result[int2(xPos + 3, yPos - 3)] = color;
	Result[int2(xPos + 20, yPos - 3)] = color;
	Result[int2(xPos + 23, yPos - 3)] = color;
	Result[int2(xPos + 30, yPos - 3)] = color;
	Result[int2(xPos + 31, yPos - 4)] = color;
	Result[int2(xPos + 40, yPos - 12)] = color;
	Result[int2(xPos + 41, yPos - 12)] = color;
	Result[int2(xPos + 42, yPos - 12)] = color;
	Result[int2(xPos + 40, yPos - 13)] = color;
	Result[int2(xPos + 41, yPos - 14)] = color;
}