#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 174)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 210)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 208)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 210)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 210)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 194)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 192)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 194)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 193)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 194)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 230)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 231)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 230)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 231)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 234)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 235)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 235)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 224)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 235)) * xMult), (yPos - 45)) * yMult)] = color;
	Result[int2((xPos + 225)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 226)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 224)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 225)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 237)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 234)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 236)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 237)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 236)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 238)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 247)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 246)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 247)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 246)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 248)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 227)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 228)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 229)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 231)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 232)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 229)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 233)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 228)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 262)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 263)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 285)) * xMult), (yPos - 89)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 90)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 262)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 172)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 174)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 173)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 103)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 104)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 198)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 175)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 277)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 278)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 277)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 278)) * xMult), (yPos - 113)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 178)) * xMult), (yPos - 114)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 115)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 116)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 116)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 117)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 117)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 118)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 118)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 119)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 119)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 120)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 120)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 121)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 121)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 122)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 123)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 124)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 350)) * xMult), (yPos - 125)) * yMult)] = color;
	Result[int2((xPos + 293)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 295)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 351)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 293)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 294)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 349)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 350)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 351)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 294)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 129)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 295)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 296)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 348)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 362)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 442)) * xMult), (yPos - 130)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 295)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 297)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 348)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 349)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 361)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 363)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 441)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 443)) * xMult), (yPos - 131)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 295)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 347)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 349)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 361)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 363)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 441)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 443)) * xMult), (yPos - 132)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 204)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 360)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 361)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 363)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 364)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 440)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 441)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 443)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 444)) * xMult), (yPos - 133)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 205)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 285)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 293)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 359)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 362)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 365)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 367)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 437)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 439)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 445)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 447)) * xMult), (yPos - 134)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 126)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 198)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 204)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 206)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 278)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 286)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 292)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 293)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 350)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 351)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 352)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 358)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 360)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 363)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 364)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 366)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 367)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 437)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 438)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 440)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 442)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 444)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 446)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 447)) * xMult), (yPos - 135)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 205)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 285)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 292)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 294)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 352)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 359)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 364)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 440)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 444)) * xMult), (yPos - 136)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 351)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 362)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 364)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 440)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 442)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 444)) * xMult), (yPos - 137)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 361)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 363)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 441)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 443)) * xMult), (yPos - 138)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 139)) * yMult)] = color;
	Result[int2((xPos + 362)) * xMult), (yPos - 139)) * yMult)] = color;
	Result[int2((xPos + 442)) * xMult), (yPos - 139)) * yMult)] = color;
	Result[int2((xPos + 285)) * xMult), (yPos - 141)) * yMult)] = color;
	Result[int2((xPos + 286)) * xMult), (yPos - 141)) * yMult)] = color;
	Result[int2((xPos + 359)) * xMult), (yPos - 141)) * yMult)] = color;
	Result[int2((xPos + 205)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 206)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 286)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 358)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 359)) * xMult), (yPos - 142)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 204)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 205)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 286)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 292)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 358)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 360)) * xMult), (yPos - 143)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 206)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 291)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 292)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 351)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 352)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 353)) * xMult), (yPos - 144)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 291)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 293)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 353)) * xMult), (yPos - 145)) * yMult)] = color;
	Result[int2((xPos + 117)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 352)) * xMult), (yPos - 146)) * yMult)] = color;
	Result[int2((xPos + 116)) * xMult), (yPos - 147)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 147)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 147)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 147)) * yMult)] = color;
	Result[int2((xPos + 361)) * xMult), (yPos - 147)) * yMult)] = color;
	Result[int2((xPos + 362)) * xMult), (yPos - 147)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 148)) * yMult)] = color;
	Result[int2((xPos + 360)) * xMult), (yPos - 148)) * yMult)] = color;
	Result[int2((xPos + 361)) * xMult), (yPos - 148)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 149)) * yMult)] = color;
	Result[int2((xPos + 362)) * xMult), (yPos - 149)) * yMult)] = color;
}