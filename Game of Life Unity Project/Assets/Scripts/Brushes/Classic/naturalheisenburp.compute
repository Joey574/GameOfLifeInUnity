#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + (1 * xMult), yPos)] = color;
	Result[int2(xPos, yPos - (1 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos, yPos - (2 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (20 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (53 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (54 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (87 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (88 * xMult), yPos - (55 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (57 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (58 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (83 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (84 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (84 * yMult))] = color;
	Result[int2(xPos + (59 * xMult), yPos - (84 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (84 * yMult))] = color;
	Result[int2(xPos + (138 * xMult), yPos - (138 * yMult))] = color;
	Result[int2(xPos + (139 * xMult), yPos - (138 * yMult))] = color;
	Result[int2(xPos + (138 * xMult), yPos - (139 * yMult))] = color;
	Result[int2(xPos + (140 * xMult), yPos - (139 * yMult))] = color;
	Result[int2(xPos + (138 * xMult), yPos - (140 * yMult))] = color;
}