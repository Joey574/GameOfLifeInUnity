#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 20, yPos)] = color;
	Result[int2(xPos + 21, yPos)] = color;
	Result[int2(xPos + 26, yPos)] = color;
	Result[int2(xPos + 27, yPos)] = color;
	Result[int2(xPos + 20, yPos - 1)] = color;
	Result[int2(xPos + 22, yPos - 1)] = color;
	Result[int2(xPos + 25, yPos - 1)] = color;
	Result[int2(xPos + 27, yPos - 1)] = color;
	Result[int2(xPos + 22, yPos - 2)] = color;
	Result[int2(xPos + 25, yPos - 2)] = color;
	Result[int2(xPos + 21, yPos - 3)] = color;
	Result[int2(xPos + 26, yPos - 3)] = color;
	Result[int2(xPos + 21, yPos - 4)] = color;
	Result[int2(xPos + 26, yPos - 4)] = color;
	Result[int2(xPos + 15, yPos - 5)] = color;
	Result[int2(xPos + 21, yPos - 5)] = color;
	Result[int2(xPos + 26, yPos - 5)] = color;
	Result[int2(xPos + 14, yPos - 6)] = color;
	Result[int2(xPos + 16, yPos - 6)] = color;
	Result[int2(xPos + 23, yPos - 6)] = color;
	Result[int2(xPos + 24, yPos - 6)] = color;
	Result[int2(xPos + 15, yPos - 7)] = color;
	Result[int2(xPos + 3, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 11)] = color;
	Result[int2(xPos + 4, yPos - 11)] = color;
	Result[int2(xPos + 2, yPos - 12)] = color;
	Result[int2(xPos + 4, yPos - 12)] = color;
	Result[int2(xPos + 21, yPos - 12)] = color;
	Result[int2(xPos + 22, yPos - 12)] = color;
	Result[int2(xPos + 23, yPos - 12)] = color;
	Result[int2(xPos + 1, yPos - 13)] = color;
	Result[int2(xPos + 2, yPos - 13)] = color;
	Result[int2(xPos + 4, yPos - 13)] = color;
	Result[int2(xPos + 5, yPos - 13)] = color;
	Result[int2(xPos + 20, yPos - 13)] = color;
	Result[int2(xPos + 24, yPos - 13)] = color;
	Result[int2(xPos + 19, yPos - 14)] = color;
	Result[int2(xPos + 25, yPos - 14)] = color;
	Result[int2(xPos + 31, yPos - 14)] = color;
	Result[int2(xPos + 32, yPos - 14)] = color;
	Result[int2(xPos + 33, yPos - 14)] = color;
	Result[int2(xPos + 53, yPos - 14)] = color;
	Result[int2(xPos + 54, yPos - 14)] = color;
	Result[int2(xPos + 1, yPos - 15)] = color;
	Result[int2(xPos + 2, yPos - 15)] = color;
	Result[int2(xPos + 4, yPos - 15)] = color;
	Result[int2(xPos + 5, yPos - 15)] = color;
	Result[int2(xPos + 9, yPos - 15)] = color;
	Result[int2(xPos + 10, yPos - 15)] = color;
	Result[int2(xPos + 19, yPos - 15)] = color;
	Result[int2(xPos + 25, yPos - 15)] = color;
	Result[int2(xPos + 30, yPos - 15)] = color;
	Result[int2(xPos + 34, yPos - 15)] = color;
	Result[int2(xPos + 54, yPos - 15)] = color;
	Result[int2(xPos + 2, yPos - 16)] = color;
	Result[int2(xPos + 4, yPos - 16)] = color;
	Result[int2(xPos + 5, yPos - 16)] = color;
	Result[int2(xPos + 11, yPos - 16)] = color;
	Result[int2(xPos + 19, yPos - 16)] = color;
	Result[int2(xPos + 25, yPos - 16)] = color;
	Result[int2(xPos + 29, yPos - 16)] = color;
	Result[int2(xPos + 35, yPos - 16)] = color;
	Result[int2(xPos + 43, yPos - 16)] = color;
	Result[int2(xPos + 49, yPos - 16)] = color;
	Result[int2(xPos + 50, yPos - 16)] = color;
	Result[int2(xPos + 52, yPos - 16)] = color;
	Result[int2(xPos, yPos - 17)] = color;
	Result[int2(xPos + 20, yPos - 17)] = color;
	Result[int2(xPos + 24, yPos - 17)] = color;
	Result[int2(xPos + 29, yPos - 17)] = color;
	Result[int2(xPos + 35, yPos - 17)] = color;
	Result[int2(xPos + 44, yPos - 17)] = color;
	Result[int2(xPos + 45, yPos - 17)] = color;
	Result[int2(xPos + 49, yPos - 17)] = color;
	Result[int2(xPos + 50, yPos - 17)] = color;
	Result[int2(xPos + 52, yPos - 17)] = color;
	Result[int2(xPos + 53, yPos - 17)] = color;
	Result[int2(xPos, yPos - 18)] = color;
	Result[int2(xPos + 1, yPos - 18)] = color;
	Result[int2(xPos + 21, yPos - 18)] = color;
	Result[int2(xPos + 22, yPos - 18)] = color;
	Result[int2(xPos + 23, yPos - 18)] = color;
	Result[int2(xPos + 29, yPos - 18)] = color;
	Result[int2(xPos + 35, yPos - 18)] = color;
	Result[int2(xPos + 30, yPos - 19)] = color;
	Result[int2(xPos + 34, yPos - 19)] = color;
	Result[int2(xPos + 49, yPos - 19)] = color;
	Result[int2(xPos + 50, yPos - 19)] = color;
	Result[int2(xPos + 52, yPos - 19)] = color;
	Result[int2(xPos + 53, yPos - 19)] = color;
	Result[int2(xPos + 31, yPos - 20)] = color;
	Result[int2(xPos + 32, yPos - 20)] = color;
	Result[int2(xPos + 33, yPos - 20)] = color;
	Result[int2(xPos + 50, yPos - 20)] = color;
	Result[int2(xPos + 52, yPos - 20)] = color;
	Result[int2(xPos + 50, yPos - 21)] = color;
	Result[int2(xPos + 52, yPos - 21)] = color;
	Result[int2(xPos + 51, yPos - 22)] = color;
	Result[int2(xPos + 39, yPos - 25)] = color;
	Result[int2(xPos + 30, yPos - 26)] = color;
	Result[int2(xPos + 31, yPos - 26)] = color;
	Result[int2(xPos + 38, yPos - 26)] = color;
	Result[int2(xPos + 40, yPos - 26)] = color;
	Result[int2(xPos + 28, yPos - 27)] = color;
	Result[int2(xPos + 33, yPos - 27)] = color;
	Result[int2(xPos + 39, yPos - 27)] = color;
	Result[int2(xPos + 28, yPos - 28)] = color;
	Result[int2(xPos + 33, yPos - 28)] = color;
	Result[int2(xPos + 28, yPos - 29)] = color;
	Result[int2(xPos + 33, yPos - 29)] = color;
	Result[int2(xPos + 29, yPos - 30)] = color;
	Result[int2(xPos + 32, yPos - 30)] = color;
	Result[int2(xPos + 27, yPos - 31)] = color;
	Result[int2(xPos + 29, yPos - 31)] = color;
	Result[int2(xPos + 32, yPos - 31)] = color;
	Result[int2(xPos + 34, yPos - 31)] = color;
	Result[int2(xPos + 27, yPos - 32)] = color;
	Result[int2(xPos + 28, yPos - 32)] = color;
	Result[int2(xPos + 33, yPos - 32)] = color;
	Result[int2(xPos + 34, yPos - 32)] = color;
}