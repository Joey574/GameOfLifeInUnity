#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 80, yPos)] = color;
	Result[int2(xPos + 82, yPos)] = color;
	Result[int2(xPos + 80, yPos - 1)] = color;
	Result[int2(xPos + 81, yPos - 1)] = color;
	Result[int2(xPos + 81, yPos - 2)] = color;
	Result[int2(xPos + 69, yPos - 11)] = color;
	Result[int2(xPos + 71, yPos - 11)] = color;
	Result[int2(xPos + 69, yPos - 12)] = color;
	Result[int2(xPos + 70, yPos - 12)] = color;
	Result[int2(xPos + 70, yPos - 13)] = color;
	Result[int2(xPos, yPos - 35)] = color;
	Result[int2(xPos + 1, yPos - 35)] = color;
	Result[int2(xPos + 45, yPos - 35)] = color;
	Result[int2(xPos, yPos - 36)] = color;
	Result[int2(xPos + 2, yPos - 36)] = color;
	Result[int2(xPos + 44, yPos - 36)] = color;
	Result[int2(xPos, yPos - 37)] = color;
	Result[int2(xPos + 44, yPos - 37)] = color;
	Result[int2(xPos + 45, yPos - 37)] = color;
	Result[int2(xPos + 46, yPos - 37)] = color;
	Result[int2(xPos + 11, yPos - 46)] = color;
	Result[int2(xPos + 12, yPos - 46)] = color;
	Result[int2(xPos + 34, yPos - 46)] = color;
	Result[int2(xPos + 11, yPos - 47)] = color;
	Result[int2(xPos + 13, yPos - 47)] = color;
	Result[int2(xPos + 33, yPos - 47)] = color;
	Result[int2(xPos + 11, yPos - 48)] = color;
	Result[int2(xPos + 33, yPos - 48)] = color;
	Result[int2(xPos + 34, yPos - 48)] = color;
	Result[int2(xPos + 35, yPos - 48)] = color;
	Result[int2(xPos + 16, yPos - 60)] = color;
	Result[int2(xPos + 17, yPos - 60)] = color;
	Result[int2(xPos + 22, yPos - 60)] = color;
	Result[int2(xPos + 23, yPos - 60)] = color;
	Result[int2(xPos + 16, yPos - 61)] = color;
	Result[int2(xPos + 17, yPos - 61)] = color;
	Result[int2(xPos + 21, yPos - 61)] = color;
	Result[int2(xPos + 24, yPos - 61)] = color;
	Result[int2(xPos + 10, yPos - 62)] = color;
	Result[int2(xPos + 11, yPos - 62)] = color;
	Result[int2(xPos + 22, yPos - 62)] = color;
	Result[int2(xPos + 24, yPos - 62)] = color;
	Result[int2(xPos + 11, yPos - 63)] = color;
	Result[int2(xPos + 23, yPos - 63)] = color;
	Result[int2(xPos + 9, yPos - 64)] = color;
	Result[int2(xPos + 15, yPos - 64)] = color;
	Result[int2(xPos + 17, yPos - 64)] = color;
	Result[int2(xPos + 18, yPos - 64)] = color;
	Result[int2(xPos + 9, yPos - 65)] = color;
	Result[int2(xPos + 10, yPos - 65)] = color;
	Result[int2(xPos + 13, yPos - 65)] = color;
	Result[int2(xPos + 14, yPos - 65)] = color;
	Result[int2(xPos + 15, yPos - 65)] = color;
	Result[int2(xPos + 17, yPos - 65)] = color;
	Result[int2(xPos + 27, yPos - 65)] = color;
	Result[int2(xPos + 28, yPos - 65)] = color;
	Result[int2(xPos + 12, yPos - 66)] = color;
	Result[int2(xPos + 15, yPos - 66)] = color;
	Result[int2(xPos + 17, yPos - 66)] = color;
	Result[int2(xPos + 19, yPos - 66)] = color;
	Result[int2(xPos + 27, yPos - 66)] = color;
	Result[int2(xPos + 9, yPos - 67)] = color;
	Result[int2(xPos + 10, yPos - 67)] = color;
	Result[int2(xPos + 11, yPos - 67)] = color;
	Result[int2(xPos + 13, yPos - 67)] = color;
	Result[int2(xPos + 16, yPos - 67)] = color;
	Result[int2(xPos + 17, yPos - 67)] = color;
	Result[int2(xPos + 19, yPos - 67)] = color;
	Result[int2(xPos + 20, yPos - 67)] = color;
	Result[int2(xPos + 21, yPos - 67)] = color;
	Result[int2(xPos + 28, yPos - 67)] = color;
	Result[int2(xPos + 29, yPos - 67)] = color;
	Result[int2(xPos + 30, yPos - 67)] = color;
	Result[int2(xPos + 8, yPos - 68)] = color;
	Result[int2(xPos + 11, yPos - 68)] = color;
	Result[int2(xPos + 13, yPos - 68)] = color;
	Result[int2(xPos + 18, yPos - 68)] = color;
	Result[int2(xPos + 22, yPos - 68)] = color;
	Result[int2(xPos + 30, yPos - 68)] = color;
	Result[int2(xPos + 7, yPos - 69)] = color;
	Result[int2(xPos + 9, yPos - 69)] = color;
	Result[int2(xPos + 11, yPos - 69)] = color;
	Result[int2(xPos + 13, yPos - 69)] = color;
	Result[int2(xPos + 14, yPos - 69)] = color;
	Result[int2(xPos + 15, yPos - 69)] = color;
	Result[int2(xPos + 16, yPos - 69)] = color;
	Result[int2(xPos + 18, yPos - 69)] = color;
	Result[int2(xPos + 21, yPos - 69)] = color;
	Result[int2(xPos + 7, yPos - 70)] = color;
	Result[int2(xPos + 9, yPos - 70)] = color;
	Result[int2(xPos + 11, yPos - 70)] = color;
	Result[int2(xPos + 16, yPos - 70)] = color;
	Result[int2(xPos + 18, yPos - 70)] = color;
	Result[int2(xPos + 20, yPos - 70)] = color;
	Result[int2(xPos + 8, yPos - 71)] = color;
	Result[int2(xPos + 11, yPos - 71)] = color;
	Result[int2(xPos + 12, yPos - 71)] = color;
	Result[int2(xPos + 14, yPos - 71)] = color;
	Result[int2(xPos + 15, yPos - 71)] = color;
	Result[int2(xPos + 18, yPos - 71)] = color;
	Result[int2(xPos + 19, yPos - 71)] = color;
	Result[int2(xPos + 9, yPos - 72)] = color;
	Result[int2(xPos + 10, yPos - 72)] = color;
	Result[int2(xPos + 13, yPos - 72)] = color;
	Result[int2(xPos + 15, yPos - 72)] = color;
	Result[int2(xPos + 17, yPos - 72)] = color;
	Result[int2(xPos + 11, yPos - 73)] = color;
	Result[int2(xPos + 12, yPos - 73)] = color;
	Result[int2(xPos + 13, yPos - 73)] = color;
	Result[int2(xPos + 14, yPos - 73)] = color;
	Result[int2(xPos + 17, yPos - 73)] = color;
	Result[int2(xPos + 9, yPos - 74)] = color;
	Result[int2(xPos + 10, yPos - 74)] = color;
	Result[int2(xPos + 17, yPos - 74)] = color;
	Result[int2(xPos + 18, yPos - 74)] = color;
	Result[int2(xPos + 9, yPos - 75)] = color;
	Result[int2(xPos + 12, yPos - 75)] = color;
	Result[int2(xPos + 11, yPos - 76)] = color;
	Result[int2(xPos + 12, yPos - 76)] = color;
}