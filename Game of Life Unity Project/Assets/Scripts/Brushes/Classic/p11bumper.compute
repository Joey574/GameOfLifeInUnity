#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (80 * xMult), yPos)] = color;
	Result[int2(xPos + (82 * xMult), yPos)] = color;
	Result[int2(xPos + (80 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (11 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos, yPos - (35 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos, yPos - (36 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos, yPos - (37 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (60 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (64 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (65 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (66 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (20 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (28 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (67 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (68 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (69 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (20 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (73 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (74 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (75 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (76 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (76 * yMult))] = color;
}