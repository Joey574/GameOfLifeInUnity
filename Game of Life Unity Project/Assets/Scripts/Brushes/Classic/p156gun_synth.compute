#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (66 * xMult), yPos)] = color;
	Result[int2(xPos + (68 * xMult), yPos)] = color;
	Result[int2(xPos + (66 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (56 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos, yPos - (41 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (51 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (49 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (50 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (57 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (61 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (62 * yMult))] = color;
	Result[int2(xPos + (20 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (63 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (77 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (78 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (78 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (79 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (79 * yMult))] = color;
}