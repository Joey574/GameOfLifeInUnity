#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 66, yPos)] = color;
	Result[int2(xPos + 68, yPos)] = color;
	Result[int2(xPos + 66, yPos - 1)] = color;
	Result[int2(xPos + 67, yPos - 1)] = color;
	Result[int2(xPos + 67, yPos - 2)] = color;
	Result[int2(xPos + 39, yPos - 16)] = color;
	Result[int2(xPos + 51, yPos - 16)] = color;
	Result[int2(xPos + 53, yPos - 16)] = color;
	Result[int2(xPos + 39, yPos - 17)] = color;
	Result[int2(xPos + 41, yPos - 17)] = color;
	Result[int2(xPos + 51, yPos - 17)] = color;
	Result[int2(xPos + 52, yPos - 17)] = color;
	Result[int2(xPos + 39, yPos - 18)] = color;
	Result[int2(xPos + 40, yPos - 18)] = color;
	Result[int2(xPos + 52, yPos - 18)] = color;
	Result[int2(xPos + 54, yPos - 21)] = color;
	Result[int2(xPos + 55, yPos - 21)] = color;
	Result[int2(xPos + 56, yPos - 21)] = color;
	Result[int2(xPos + 54, yPos - 22)] = color;
	Result[int2(xPos + 55, yPos - 23)] = color;
	Result[int2(xPos + 51, yPos - 30)] = color;
	Result[int2(xPos + 49, yPos - 31)] = color;
	Result[int2(xPos + 50, yPos - 31)] = color;
	Result[int2(xPos + 50, yPos - 32)] = color;
	Result[int2(xPos + 51, yPos - 32)] = color;
	Result[int2(xPos + 23, yPos - 36)] = color;
	Result[int2(xPos + 24, yPos - 37)] = color;
	Result[int2(xPos + 22, yPos - 38)] = color;
	Result[int2(xPos + 23, yPos - 38)] = color;
	Result[int2(xPos + 24, yPos - 38)] = color;
	Result[int2(xPos + 71, yPos - 38)] = color;
	Result[int2(xPos + 72, yPos - 38)] = color;
	Result[int2(xPos + 73, yPos - 38)] = color;
	Result[int2(xPos + 1, yPos - 39)] = color;
	Result[int2(xPos + 71, yPos - 39)] = color;
	Result[int2(xPos + 2, yPos - 40)] = color;
	Result[int2(xPos + 72, yPos - 40)] = color;
	Result[int2(xPos, yPos - 41)] = color;
	Result[int2(xPos + 1, yPos - 41)] = color;
	Result[int2(xPos + 2, yPos - 41)] = color;
	Result[int2(xPos + 49, yPos - 41)] = color;
	Result[int2(xPos + 50, yPos - 41)] = color;
	Result[int2(xPos + 51, yPos - 41)] = color;
	Result[int2(xPos + 49, yPos - 42)] = color;
	Result[int2(xPos + 50, yPos - 43)] = color;
	Result[int2(xPos + 22, yPos - 47)] = color;
	Result[int2(xPos + 23, yPos - 47)] = color;
	Result[int2(xPos + 23, yPos - 48)] = color;
	Result[int2(xPos + 24, yPos - 48)] = color;
	Result[int2(xPos + 22, yPos - 49)] = color;
	Result[int2(xPos + 18, yPos - 56)] = color;
	Result[int2(xPos + 19, yPos - 57)] = color;
	Result[int2(xPos + 17, yPos - 58)] = color;
	Result[int2(xPos + 18, yPos - 58)] = color;
	Result[int2(xPos + 19, yPos - 58)] = color;
	Result[int2(xPos + 21, yPos - 61)] = color;
	Result[int2(xPos + 33, yPos - 61)] = color;
	Result[int2(xPos + 34, yPos - 61)] = color;
	Result[int2(xPos + 21, yPos - 62)] = color;
	Result[int2(xPos + 22, yPos - 62)] = color;
	Result[int2(xPos + 32, yPos - 62)] = color;
	Result[int2(xPos + 34, yPos - 62)] = color;
	Result[int2(xPos + 20, yPos - 63)] = color;
	Result[int2(xPos + 22, yPos - 63)] = color;
	Result[int2(xPos + 34, yPos - 63)] = color;
	Result[int2(xPos + 6, yPos - 77)] = color;
	Result[int2(xPos + 6, yPos - 78)] = color;
	Result[int2(xPos + 7, yPos - 78)] = color;
	Result[int2(xPos + 5, yPos - 79)] = color;
	Result[int2(xPos + 7, yPos - 79)] = color;
}