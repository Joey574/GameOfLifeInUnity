#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (53 * xMult), yPos)] = color;
	Result[int2(xPos + (52 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (52 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (10 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (21 * yMult))] = color;
	Result[int2(xPos, yPos - (22 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (22 * yMult))] = color;
	Result[int2(xPos, yPos - (23 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (32 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (31 * xMult), yPos - (25 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (31 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (24 * xMult), yPos - (32 * yMult))] = color;
	Result[int2(xPos + (20 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (20 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (45 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (46 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (20 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (50 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (51 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (51 * yMult))] = color;
}