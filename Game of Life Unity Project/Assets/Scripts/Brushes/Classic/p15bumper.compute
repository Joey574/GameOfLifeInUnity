#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 71, yPos)] = color;
	Result[int2(xPos + 69, yPos - 1)] = color;
	Result[int2(xPos + 70, yPos - 1)] = color;
	Result[int2(xPos + 70, yPos - 2)] = color;
	Result[int2(xPos + 71, yPos - 2)] = color;
	Result[int2(xPos + 59, yPos - 11)] = color;
	Result[int2(xPos + 58, yPos - 12)] = color;
	Result[int2(xPos + 58, yPos - 13)] = color;
	Result[int2(xPos + 59, yPos - 13)] = color;
	Result[int2(xPos + 60, yPos - 13)] = color;
	Result[int2(xPos + 1, yPos - 30)] = color;
	Result[int2(xPos + 2, yPos - 30)] = color;
	Result[int2(xPos + 41, yPos - 30)] = color;
	Result[int2(xPos, yPos - 31)] = color;
	Result[int2(xPos + 1, yPos - 31)] = color;
	Result[int2(xPos + 39, yPos - 31)] = color;
	Result[int2(xPos + 40, yPos - 31)] = color;
	Result[int2(xPos + 2, yPos - 32)] = color;
	Result[int2(xPos + 40, yPos - 32)] = color;
	Result[int2(xPos + 41, yPos - 32)] = color;
	Result[int2(xPos + 12, yPos - 41)] = color;
	Result[int2(xPos + 13, yPos - 41)] = color;
	Result[int2(xPos + 29, yPos - 41)] = color;
	Result[int2(xPos + 12, yPos - 42)] = color;
	Result[int2(xPos + 14, yPos - 42)] = color;
	Result[int2(xPos + 28, yPos - 42)] = color;
	Result[int2(xPos + 12, yPos - 43)] = color;
	Result[int2(xPos + 28, yPos - 43)] = color;
	Result[int2(xPos + 29, yPos - 43)] = color;
	Result[int2(xPos + 30, yPos - 43)] = color;
	Result[int2(xPos + 6, yPos - 52)] = color;
	Result[int2(xPos + 7, yPos - 52)] = color;
	Result[int2(xPos + 12, yPos - 52)] = color;
	Result[int2(xPos + 13, yPos - 52)] = color;
	Result[int2(xPos + 20, yPos - 52)] = color;
	Result[int2(xPos + 21, yPos - 52)] = color;
	Result[int2(xPos + 5, yPos - 53)] = color;
	Result[int2(xPos + 8, yPos - 53)] = color;
	Result[int2(xPos + 11, yPos - 53)] = color;
	Result[int2(xPos + 14, yPos - 53)] = color;
	Result[int2(xPos + 19, yPos - 53)] = color;
	Result[int2(xPos + 22, yPos - 53)] = color;
	Result[int2(xPos + 5, yPos - 54)] = color;
	Result[int2(xPos + 8, yPos - 54)] = color;
	Result[int2(xPos + 11, yPos - 54)] = color;
	Result[int2(xPos + 14, yPos - 54)] = color;
	Result[int2(xPos + 20, yPos - 54)] = color;
	Result[int2(xPos + 22, yPos - 54)] = color;
	Result[int2(xPos + 6, yPos - 55)] = color;
	Result[int2(xPos + 8, yPos - 55)] = color;
	Result[int2(xPos + 9, yPos - 55)] = color;
	Result[int2(xPos + 10, yPos - 55)] = color;
	Result[int2(xPos + 11, yPos - 55)] = color;
	Result[int2(xPos + 13, yPos - 55)] = color;
	Result[int2(xPos + 21, yPos - 55)] = color;
	Result[int2(xPos + 8, yPos - 56)] = color;
	Result[int2(xPos + 11, yPos - 56)] = color;
	Result[int2(xPos + 25, yPos - 57)] = color;
	Result[int2(xPos + 26, yPos - 57)] = color;
	Result[int2(xPos + 25, yPos - 58)] = color;
	Result[int2(xPos + 5, yPos - 59)] = color;
	Result[int2(xPos + 6, yPos - 59)] = color;
	Result[int2(xPos + 13, yPos - 59)] = color;
	Result[int2(xPos + 14, yPos - 59)] = color;
	Result[int2(xPos + 26, yPos - 59)] = color;
	Result[int2(xPos + 27, yPos - 59)] = color;
	Result[int2(xPos + 28, yPos - 59)] = color;
	Result[int2(xPos + 3, yPos - 60)] = color;
	Result[int2(xPos + 8, yPos - 60)] = color;
	Result[int2(xPos + 11, yPos - 60)] = color;
	Result[int2(xPos + 16, yPos - 60)] = color;
	Result[int2(xPos + 28, yPos - 60)] = color;
	Result[int2(xPos + 3, yPos - 61)] = color;
	Result[int2(xPos + 8, yPos - 61)] = color;
	Result[int2(xPos + 11, yPos - 61)] = color;
	Result[int2(xPos + 16, yPos - 61)] = color;
	Result[int2(xPos + 3, yPos - 62)] = color;
	Result[int2(xPos + 8, yPos - 62)] = color;
	Result[int2(xPos + 11, yPos - 62)] = color;
	Result[int2(xPos + 16, yPos - 62)] = color;
	Result[int2(xPos + 5, yPos - 63)] = color;
	Result[int2(xPos + 6, yPos - 63)] = color;
	Result[int2(xPos + 13, yPos - 63)] = color;
	Result[int2(xPos + 14, yPos - 63)] = color;
}