#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 19, yPos)] = color;
	Result[int2(xPos + 18, yPos - 1)] = color;
	Result[int2(xPos + 20, yPos - 1)] = color;
	Result[int2(xPos + 17, yPos - 2)] = color;
	Result[int2(xPos + 21, yPos - 2)] = color;
	Result[int2(xPos + 17, yPos - 3)] = color;
	Result[int2(xPos + 21, yPos - 3)] = color;
	Result[int2(xPos + 17, yPos - 4)] = color;
	Result[int2(xPos + 21, yPos - 4)] = color;
	Result[int2(xPos + 17, yPos - 5)] = color;
	Result[int2(xPos + 21, yPos - 5)] = color;
	Result[int2(xPos + 17, yPos - 6)] = color;
	Result[int2(xPos + 21, yPos - 6)] = color;
	Result[int2(xPos + 17, yPos - 7)] = color;
	Result[int2(xPos + 21, yPos - 7)] = color;
	Result[int2(xPos + 18, yPos - 8)] = color;
	Result[int2(xPos + 20, yPos - 8)] = color;
	Result[int2(xPos + 19, yPos - 9)] = color;
	Result[int2(xPos + 4, yPos - 16)] = color;
	Result[int2(xPos + 5, yPos - 16)] = color;
	Result[int2(xPos + 12, yPos - 16)] = color;
	Result[int2(xPos + 13, yPos - 16)] = color;
	Result[int2(xPos + 2, yPos - 17)] = color;
	Result[int2(xPos + 7, yPos - 17)] = color;
	Result[int2(xPos + 10, yPos - 17)] = color;
	Result[int2(xPos + 15, yPos - 17)] = color;
	Result[int2(xPos + 2, yPos - 18)] = color;
	Result[int2(xPos + 7, yPos - 18)] = color;
	Result[int2(xPos + 10, yPos - 18)] = color;
	Result[int2(xPos + 15, yPos - 18)] = color;
	Result[int2(xPos + 2, yPos - 19)] = color;
	Result[int2(xPos + 7, yPos - 19)] = color;
	Result[int2(xPos + 10, yPos - 19)] = color;
	Result[int2(xPos + 15, yPos - 19)] = color;
	Result[int2(xPos + 4, yPos - 20)] = color;
	Result[int2(xPos + 5, yPos - 20)] = color;
	Result[int2(xPos + 12, yPos - 20)] = color;
	Result[int2(xPos + 13, yPos - 20)] = color;
	Result[int2(xPos + 34, yPos - 21)] = color;
	Result[int2(xPos + 37, yPos - 21)] = color;
	Result[int2(xPos + 38, yPos - 21)] = color;
	Result[int2(xPos + 43, yPos - 21)] = color;
	Result[int2(xPos + 44, yPos - 21)] = color;
	Result[int2(xPos + 47, yPos - 21)] = color;
	Result[int2(xPos + 33, yPos - 22)] = color;
	Result[int2(xPos + 37, yPos - 22)] = color;
	Result[int2(xPos + 38, yPos - 22)] = color;
	Result[int2(xPos + 39, yPos - 22)] = color;
	Result[int2(xPos + 42, yPos - 22)] = color;
	Result[int2(xPos + 43, yPos - 22)] = color;
	Result[int2(xPos + 44, yPos - 22)] = color;
	Result[int2(xPos + 48, yPos - 22)] = color;
	Result[int2(xPos + 34, yPos - 23)] = color;
	Result[int2(xPos + 37, yPos - 23)] = color;
	Result[int2(xPos + 38, yPos - 23)] = color;
	Result[int2(xPos + 43, yPos - 23)] = color;
	Result[int2(xPos + 44, yPos - 23)] = color;
	Result[int2(xPos + 47, yPos - 23)] = color;
	Result[int2(xPos + 40, yPos - 30)] = color;
	Result[int2(xPos + 41, yPos - 30)] = color;
	Result[int2(xPos + 38, yPos - 31)] = color;
	Result[int2(xPos + 40, yPos - 31)] = color;
	Result[int2(xPos + 42, yPos - 31)] = color;
	Result[int2(xPos + 36, yPos - 32)] = color;
	Result[int2(xPos + 38, yPos - 32)] = color;
	Result[int2(xPos + 40, yPos - 32)] = color;
	Result[int2(xPos + 37, yPos - 33)] = color;
	Result[int2(xPos + 38, yPos - 33)] = color;
	Result[int2(xPos + 31, yPos - 40)] = color;
	Result[int2(xPos + 34, yPos - 40)] = color;
	Result[int2(xPos + 35, yPos - 40)] = color;
	Result[int2(xPos + 40, yPos - 40)] = color;
	Result[int2(xPos + 41, yPos - 40)] = color;
	Result[int2(xPos + 44, yPos - 40)] = color;
	Result[int2(xPos + 30, yPos - 41)] = color;
	Result[int2(xPos + 34, yPos - 41)] = color;
	Result[int2(xPos + 35, yPos - 41)] = color;
	Result[int2(xPos + 36, yPos - 41)] = color;
	Result[int2(xPos + 39, yPos - 41)] = color;
	Result[int2(xPos + 40, yPos - 41)] = color;
	Result[int2(xPos + 41, yPos - 41)] = color;
	Result[int2(xPos + 45, yPos - 41)] = color;
	Result[int2(xPos + 31, yPos - 42)] = color;
	Result[int2(xPos + 34, yPos - 42)] = color;
	Result[int2(xPos + 35, yPos - 42)] = color;
	Result[int2(xPos + 40, yPos - 42)] = color;
	Result[int2(xPos + 41, yPos - 42)] = color;
	Result[int2(xPos + 44, yPos - 42)] = color;
	Result[int2(xPos + 65, yPos - 43)] = color;
	Result[int2(xPos + 66, yPos - 43)] = color;
	Result[int2(xPos + 73, yPos - 43)] = color;
	Result[int2(xPos + 74, yPos - 43)] = color;
	Result[int2(xPos + 63, yPos - 44)] = color;
	Result[int2(xPos + 68, yPos - 44)] = color;
	Result[int2(xPos + 71, yPos - 44)] = color;
	Result[int2(xPos + 76, yPos - 44)] = color;
	Result[int2(xPos + 63, yPos - 45)] = color;
	Result[int2(xPos + 68, yPos - 45)] = color;
	Result[int2(xPos + 71, yPos - 45)] = color;
	Result[int2(xPos + 76, yPos - 45)] = color;
	Result[int2(xPos + 63, yPos - 46)] = color;
	Result[int2(xPos + 68, yPos - 46)] = color;
	Result[int2(xPos + 71, yPos - 46)] = color;
	Result[int2(xPos + 76, yPos - 46)] = color;
	Result[int2(xPos + 65, yPos - 47)] = color;
	Result[int2(xPos + 66, yPos - 47)] = color;
	Result[int2(xPos + 73, yPos - 47)] = color;
	Result[int2(xPos + 74, yPos - 47)] = color;
	Result[int2(xPos + 59, yPos - 54)] = color;
	Result[int2(xPos + 58, yPos - 55)] = color;
	Result[int2(xPos + 60, yPos - 55)] = color;
	Result[int2(xPos + 57, yPos - 56)] = color;
	Result[int2(xPos + 61, yPos - 56)] = color;
	Result[int2(xPos + 57, yPos - 57)] = color;
	Result[int2(xPos + 61, yPos - 57)] = color;
	Result[int2(xPos + 57, yPos - 58)] = color;
	Result[int2(xPos + 61, yPos - 58)] = color;
	Result[int2(xPos + 57, yPos - 59)] = color;
	Result[int2(xPos + 61, yPos - 59)] = color;
	Result[int2(xPos + 57, yPos - 60)] = color;
	Result[int2(xPos + 61, yPos - 60)] = color;
	Result[int2(xPos + 57, yPos - 61)] = color;
	Result[int2(xPos + 61, yPos - 61)] = color;
	Result[int2(xPos + 58, yPos - 62)] = color;
	Result[int2(xPos + 60, yPos - 62)] = color;
	Result[int2(xPos + 59, yPos - 63)] = color;
}