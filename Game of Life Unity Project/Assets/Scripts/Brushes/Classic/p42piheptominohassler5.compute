#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 18)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 7)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 4)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 5)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 6)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 16)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 39)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 40)) * yMult)] = color;
}