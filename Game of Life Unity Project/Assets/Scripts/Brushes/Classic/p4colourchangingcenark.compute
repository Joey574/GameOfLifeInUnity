#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 119)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 107)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 108)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 62)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 63)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 64)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 65)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 66)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 70)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 72)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 73)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 77)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 83)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 84)) * yMult)] = color;
	Result[int2((xPos + 46)) * xMult), (yPos - 85)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 86)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 45)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 87)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 88)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 91)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 26)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 95)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 96)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 97)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 97)) * yMult)] = color;
}