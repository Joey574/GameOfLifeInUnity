#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 139, yPos)] = color;
	Result[int2(xPos + 137, yPos - 1)] = color;
	Result[int2(xPos + 138, yPos - 1)] = color;
	Result[int2(xPos + 138, yPos - 2)] = color;
	Result[int2(xPos + 139, yPos - 2)] = color;
	Result[int2(xPos + 125, yPos - 14)] = color;
	Result[int2(xPos + 123, yPos - 15)] = color;
	Result[int2(xPos + 124, yPos - 15)] = color;
	Result[int2(xPos + 124, yPos - 16)] = color;
	Result[int2(xPos + 125, yPos - 16)] = color;
	Result[int2(xPos + 111, yPos - 28)] = color;
	Result[int2(xPos + 109, yPos - 29)] = color;
	Result[int2(xPos + 110, yPos - 29)] = color;
	Result[int2(xPos + 110, yPos - 30)] = color;
	Result[int2(xPos + 111, yPos - 30)] = color;
	Result[int2(xPos + 97, yPos - 42)] = color;
	Result[int2(xPos + 95, yPos - 43)] = color;
	Result[int2(xPos + 96, yPos - 43)] = color;
	Result[int2(xPos + 96, yPos - 44)] = color;
	Result[int2(xPos + 97, yPos - 44)] = color;
	Result[int2(xPos + 69, yPos - 47)] = color;
	Result[int2(xPos + 70, yPos - 47)] = color;
	Result[int2(xPos + 70, yPos - 48)] = color;
	Result[int2(xPos + 71, yPos - 48)] = color;
	Result[int2(xPos + 69, yPos - 49)] = color;
	Result[int2(xPos + 83, yPos - 56)] = color;
	Result[int2(xPos + 81, yPos - 57)] = color;
	Result[int2(xPos + 82, yPos - 57)] = color;
	Result[int2(xPos + 82, yPos - 58)] = color;
	Result[int2(xPos + 83, yPos - 58)] = color;
	Result[int2(xPos + 69, yPos - 70)] = color;
	Result[int2(xPos + 67, yPos - 71)] = color;
	Result[int2(xPos + 68, yPos - 71)] = color;
	Result[int2(xPos + 68, yPos - 72)] = color;
	Result[int2(xPos + 69, yPos - 72)] = color;
	Result[int2(xPos + 55, yPos - 84)] = color;
	Result[int2(xPos + 53, yPos - 85)] = color;
	Result[int2(xPos + 54, yPos - 85)] = color;
	Result[int2(xPos + 54, yPos - 86)] = color;
	Result[int2(xPos + 55, yPos - 86)] = color;
	Result[int2(xPos + 41, yPos - 98)] = color;
	Result[int2(xPos + 39, yPos - 99)] = color;
	Result[int2(xPos + 40, yPos - 99)] = color;
	Result[int2(xPos + 40, yPos - 100)] = color;
	Result[int2(xPos + 41, yPos - 100)] = color;
	Result[int2(xPos + 27, yPos - 112)] = color;
	Result[int2(xPos + 25, yPos - 113)] = color;
	Result[int2(xPos + 26, yPos - 113)] = color;
	Result[int2(xPos + 26, yPos - 114)] = color;
	Result[int2(xPos + 27, yPos - 114)] = color;
	Result[int2(xPos + 4, yPos - 115)] = color;
	Result[int2(xPos + 14, yPos - 115)] = color;
	Result[int2(xPos + 15, yPos - 115)] = color;
	Result[int2(xPos + 3, yPos - 116)] = color;
	Result[int2(xPos + 4, yPos - 116)] = color;
	Result[int2(xPos + 14, yPos - 116)] = color;
	Result[int2(xPos + 2, yPos - 117)] = color;
	Result[int2(xPos + 3, yPos - 117)] = color;
	Result[int2(xPos + 6, yPos - 117)] = color;
	Result[int2(xPos + 12, yPos - 117)] = color;
	Result[int2(xPos + 14, yPos - 117)] = color;
	Result[int2(xPos + 1, yPos - 118)] = color;
	Result[int2(xPos + 2, yPos - 118)] = color;
	Result[int2(xPos + 5, yPos - 118)] = color;
	Result[int2(xPos + 6, yPos - 118)] = color;
	Result[int2(xPos + 7, yPos - 118)] = color;
	Result[int2(xPos + 12, yPos - 118)] = color;
	Result[int2(xPos + 13, yPos - 118)] = color;
	Result[int2(xPos + 2, yPos - 119)] = color;
	Result[int2(xPos + 5, yPos - 119)] = color;
	Result[int2(xPos + 6, yPos - 119)] = color;
	Result[int2(xPos + 8, yPos - 119)] = color;
	Result[int2(xPos + 1, yPos - 120)] = color;
	Result[int2(xPos + 2, yPos - 120)] = color;
	Result[int2(xPos + 3, yPos - 120)] = color;
	Result[int2(xPos + 7, yPos - 120)] = color;
	Result[int2(xPos + 8, yPos - 120)] = color;
	Result[int2(xPos + 13, yPos - 126)] = color;
	Result[int2(xPos + 11, yPos - 127)] = color;
	Result[int2(xPos + 12, yPos - 127)] = color;
	Result[int2(xPos + 12, yPos - 128)] = color;
	Result[int2(xPos + 13, yPos - 128)] = color;
	Result[int2(xPos + 2, yPos - 132)] = color;
	Result[int2(xPos + 3, yPos - 132)] = color;
	Result[int2(xPos + 16, yPos - 132)] = color;
	Result[int2(xPos + 17, yPos - 132)] = color;
	Result[int2(xPos + 1, yPos - 133)] = color;
	Result[int2(xPos + 3, yPos - 133)] = color;
	Result[int2(xPos + 16, yPos - 133)] = color;
	Result[int2(xPos + 18, yPos - 133)] = color;
	Result[int2(xPos + 1, yPos - 134)] = color;
	Result[int2(xPos + 9, yPos - 134)] = color;
	Result[int2(xPos + 10, yPos - 134)] = color;
	Result[int2(xPos + 18, yPos - 134)] = color;
	Result[int2(xPos, yPos - 135)] = color;
	Result[int2(xPos + 1, yPos - 135)] = color;
	Result[int2(xPos + 8, yPos - 135)] = color;
	Result[int2(xPos + 11, yPos - 135)] = color;
	Result[int2(xPos + 18, yPos - 135)] = color;
	Result[int2(xPos + 19, yPos - 135)] = color;
	Result[int2(xPos + 9, yPos - 136)] = color;
	Result[int2(xPos + 10, yPos - 136)] = color;
	Result[int2(xPos + 4, yPos - 140)] = color;
	Result[int2(xPos + 5, yPos - 140)] = color;
	Result[int2(xPos + 14, yPos - 140)] = color;
	Result[int2(xPos + 15, yPos - 140)] = color;
	Result[int2(xPos + 4, yPos - 141)] = color;
	Result[int2(xPos + 7, yPos - 141)] = color;
	Result[int2(xPos + 8, yPos - 141)] = color;
	Result[int2(xPos + 9, yPos - 141)] = color;
	Result[int2(xPos + 10, yPos - 141)] = color;
	Result[int2(xPos + 11, yPos - 141)] = color;
	Result[int2(xPos + 12, yPos - 141)] = color;
	Result[int2(xPos + 15, yPos - 141)] = color;
	Result[int2(xPos + 5, yPos - 142)] = color;
	Result[int2(xPos + 6, yPos - 142)] = color;
	Result[int2(xPos + 13, yPos - 142)] = color;
	Result[int2(xPos + 14, yPos - 142)] = color;
	Result[int2(xPos + 2, yPos - 143)] = color;
	Result[int2(xPos + 3, yPos - 143)] = color;
	Result[int2(xPos + 4, yPos - 143)] = color;
	Result[int2(xPos + 15, yPos - 143)] = color;
	Result[int2(xPos + 16, yPos - 143)] = color;
	Result[int2(xPos + 17, yPos - 143)] = color;
	Result[int2(xPos + 2, yPos - 144)] = color;
	Result[int2(xPos + 5, yPos - 144)] = color;
	Result[int2(xPos + 7, yPos - 144)] = color;
	Result[int2(xPos + 12, yPos - 144)] = color;
	Result[int2(xPos + 14, yPos - 144)] = color;
	Result[int2(xPos + 17, yPos - 144)] = color;
	Result[int2(xPos + 3, yPos - 145)] = color;
	Result[int2(xPos + 4, yPos - 145)] = color;
	Result[int2(xPos + 9, yPos - 145)] = color;
	Result[int2(xPos + 10, yPos - 145)] = color;
	Result[int2(xPos + 15, yPos - 145)] = color;
	Result[int2(xPos + 16, yPos - 145)] = color;
}