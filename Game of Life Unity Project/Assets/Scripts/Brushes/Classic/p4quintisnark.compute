#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (139 * xMult), yPos)] = color;
	Result[int2(xPos + (137 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (138 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (138 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (139 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (123 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (124 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (124 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (125 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (28 * yMult))] = color;
	Result[int2(xPos + (109 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (29 * yMult))] = color;
	Result[int2(xPos + (110 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (111 * xMult), yPos - (30 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (95 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (96 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (97 * xMult), yPos - (44 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (47 * yMult))] = color;
	Result[int2(xPos + (70 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (48 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (49 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (56 * yMult))] = color;
	Result[int2(xPos + (81 * xMult), yPos - (57 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (57 * yMult))] = color;
	Result[int2(xPos + (82 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (83 * xMult), yPos - (58 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (70 * yMult))] = color;
	Result[int2(xPos + (67 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (71 * yMult))] = color;
	Result[int2(xPos + (68 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (69 * xMult), yPos - (72 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (84 * yMult))] = color;
	Result[int2(xPos + (53 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (85 * yMult))] = color;
	Result[int2(xPos + (54 * xMult), yPos - (86 * yMult))] = color;
	Result[int2(xPos + (55 * xMult), yPos - (86 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (98 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (99 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (100 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (112 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (113 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (113 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (114 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (114 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (115 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (115 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (115 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (116 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (116 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (116 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (117 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (118 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (119 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (120 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (126 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (127 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (127 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (128 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (128 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (132 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (132 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (132 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (132 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (133 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (133 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (133 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (133 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (134 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (134 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (134 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (134 * yMult))] = color;
	Result[int2(xPos, yPos - (135 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (135 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (135 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (135 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (135 * yMult))] = color;
	Result[int2(xPos + (19 * xMult), yPos - (135 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (136 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (136 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (140 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (140 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (140 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (140 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (8 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (141 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (142 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (142 * yMult))] = color;
	Result[int2(xPos + (13 * xMult), yPos - (142 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (142 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (143 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (143 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (143 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (143 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (143 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (143 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (144 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (144 * yMult))] = color;
	Result[int2(xPos + (7 * xMult), yPos - (144 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (144 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (144 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (144 * yMult))] = color;
	Result[int2(xPos + (3 * xMult), yPos - (145 * yMult))] = color;
	Result[int2(xPos + (4 * xMult), yPos - (145 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (145 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (145 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (145 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (145 * yMult))] = color;
}