#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 134, yPos)] = color;
	Result[int2(xPos + 133, yPos - 1)] = color;
	Result[int2(xPos + 133, yPos - 2)] = color;
	Result[int2(xPos + 134, yPos - 2)] = color;
	Result[int2(xPos + 135, yPos - 2)] = color;
	Result[int2(xPos + 121, yPos - 14)] = color;
	Result[int2(xPos + 119, yPos - 15)] = color;
	Result[int2(xPos + 120, yPos - 15)] = color;
	Result[int2(xPos + 120, yPos - 16)] = color;
	Result[int2(xPos + 121, yPos - 16)] = color;
	Result[int2(xPos + 106, yPos - 28)] = color;
	Result[int2(xPos + 106, yPos - 29)] = color;
	Result[int2(xPos + 108, yPos - 29)] = color;
	Result[int2(xPos + 106, yPos - 30)] = color;
	Result[int2(xPos + 107, yPos - 30)] = color;
	Result[int2(xPos + 72, yPos - 40)] = color;
	Result[int2(xPos + 72, yPos - 41)] = color;
	Result[int2(xPos + 73, yPos - 41)] = color;
	Result[int2(xPos + 71, yPos - 42)] = color;
	Result[int2(xPos + 73, yPos - 42)] = color;
	Result[int2(xPos + 92, yPos - 42)] = color;
	Result[int2(xPos + 94, yPos - 42)] = color;
	Result[int2(xPos + 92, yPos - 43)] = color;
	Result[int2(xPos + 93, yPos - 43)] = color;
	Result[int2(xPos + 93, yPos - 44)] = color;
	Result[int2(xPos + 79, yPos - 55)] = color;
	Result[int2(xPos + 78, yPos - 56)] = color;
	Result[int2(xPos + 78, yPos - 57)] = color;
	Result[int2(xPos + 79, yPos - 57)] = color;
	Result[int2(xPos + 80, yPos - 57)] = color;
	Result[int2(xPos + 66, yPos - 69)] = color;
	Result[int2(xPos + 64, yPos - 70)] = color;
	Result[int2(xPos + 65, yPos - 70)] = color;
	Result[int2(xPos + 65, yPos - 71)] = color;
	Result[int2(xPos + 66, yPos - 71)] = color;
	Result[int2(xPos + 51, yPos - 83)] = color;
	Result[int2(xPos + 51, yPos - 84)] = color;
	Result[int2(xPos + 53, yPos - 84)] = color;
	Result[int2(xPos + 51, yPos - 85)] = color;
	Result[int2(xPos + 52, yPos - 85)] = color;
	Result[int2(xPos + 37, yPos - 97)] = color;
	Result[int2(xPos + 39, yPos - 97)] = color;
	Result[int2(xPos + 37, yPos - 98)] = color;
	Result[int2(xPos + 38, yPos - 98)] = color;
	Result[int2(xPos + 38, yPos - 99)] = color;
	Result[int2(xPos + 3, yPos - 109)] = color;
	Result[int2(xPos + 4, yPos - 109)] = color;
	Result[int2(xPos + 2, yPos - 110)] = color;
	Result[int2(xPos + 4, yPos - 110)] = color;
	Result[int2(xPos + 15, yPos - 110)] = color;
	Result[int2(xPos + 16, yPos - 110)] = color;
	Result[int2(xPos + 24, yPos - 110)] = color;
	Result[int2(xPos + 4, yPos - 111)] = color;
	Result[int2(xPos + 15, yPos - 111)] = color;
	Result[int2(xPos + 23, yPos - 111)] = color;
	Result[int2(xPos + 13, yPos - 112)] = color;
	Result[int2(xPos + 15, yPos - 112)] = color;
	Result[int2(xPos + 23, yPos - 112)] = color;
	Result[int2(xPos + 24, yPos - 112)] = color;
	Result[int2(xPos + 25, yPos - 112)] = color;
	Result[int2(xPos + 13, yPos - 113)] = color;
	Result[int2(xPos + 14, yPos - 113)] = color;
	Result[int2(xPos + 9, yPos - 114)] = color;
	Result[int2(xPos + 8, yPos - 115)] = color;
	Result[int2(xPos + 10, yPos - 115)] = color;
	Result[int2(xPos + 8, yPos - 116)] = color;
	Result[int2(xPos + 10, yPos - 116)] = color;
	Result[int2(xPos + 9, yPos - 117)] = color;
	Result[int2(xPos + 11, yPos - 124)] = color;
	Result[int2(xPos + 9, yPos - 125)] = color;
	Result[int2(xPos + 10, yPos - 125)] = color;
	Result[int2(xPos + 10, yPos - 126)] = color;
	Result[int2(xPos + 11, yPos - 126)] = color;
	Result[int2(xPos + 3, yPos - 127)] = color;
	Result[int2(xPos + 4, yPos - 127)] = color;
	Result[int2(xPos + 17, yPos - 127)] = color;
	Result[int2(xPos + 18, yPos - 127)] = color;
	Result[int2(xPos + 2, yPos - 128)] = color;
	Result[int2(xPos + 4, yPos - 128)] = color;
	Result[int2(xPos + 17, yPos - 128)] = color;
	Result[int2(xPos + 19, yPos - 128)] = color;
	Result[int2(xPos + 2, yPos - 129)] = color;
	Result[int2(xPos + 10, yPos - 129)] = color;
	Result[int2(xPos + 11, yPos - 129)] = color;
	Result[int2(xPos + 19, yPos - 129)] = color;
	Result[int2(xPos + 1, yPos - 130)] = color;
	Result[int2(xPos + 2, yPos - 130)] = color;
	Result[int2(xPos + 9, yPos - 130)] = color;
	Result[int2(xPos + 12, yPos - 130)] = color;
	Result[int2(xPos + 19, yPos - 130)] = color;
	Result[int2(xPos + 20, yPos - 130)] = color;
	Result[int2(xPos + 10, yPos - 131)] = color;
	Result[int2(xPos + 11, yPos - 131)] = color;
	Result[int2(xPos + 7, yPos - 137)] = color;
	Result[int2(xPos + 8, yPos - 137)] = color;
	Result[int2(xPos + 9, yPos - 137)] = color;
	Result[int2(xPos + 10, yPos - 137)] = color;
	Result[int2(xPos + 11, yPos - 137)] = color;
	Result[int2(xPos + 12, yPos - 137)] = color;
	Result[int2(xPos + 13, yPos - 137)] = color;
	Result[int2(xPos + 14, yPos - 137)] = color;
	Result[int2(xPos + 3, yPos - 138)] = color;
	Result[int2(xPos + 4, yPos - 138)] = color;
	Result[int2(xPos + 7, yPos - 138)] = color;
	Result[int2(xPos + 8, yPos - 138)] = color;
	Result[int2(xPos + 10, yPos - 138)] = color;
	Result[int2(xPos + 11, yPos - 138)] = color;
	Result[int2(xPos + 13, yPos - 138)] = color;
	Result[int2(xPos + 14, yPos - 138)] = color;
	Result[int2(xPos + 17, yPos - 138)] = color;
	Result[int2(xPos + 18, yPos - 138)] = color;
	Result[int2(xPos + 3, yPos - 139)] = color;
	Result[int2(xPos + 4, yPos - 139)] = color;
	Result[int2(xPos + 7, yPos - 139)] = color;
	Result[int2(xPos + 8, yPos - 139)] = color;
	Result[int2(xPos + 9, yPos - 139)] = color;
	Result[int2(xPos + 12, yPos - 139)] = color;
	Result[int2(xPos + 13, yPos - 139)] = color;
	Result[int2(xPos + 14, yPos - 139)] = color;
	Result[int2(xPos + 17, yPos - 139)] = color;
	Result[int2(xPos + 18, yPos - 139)] = color;
	Result[int2(xPos + 7, yPos - 140)] = color;
	Result[int2(xPos + 8, yPos - 140)] = color;
	Result[int2(xPos + 9, yPos - 140)] = color;
	Result[int2(xPos + 12, yPos - 140)] = color;
	Result[int2(xPos + 13, yPos - 140)] = color;
	Result[int2(xPos + 14, yPos - 140)] = color;
	Result[int2(xPos + 8, yPos - 141)] = color;
	Result[int2(xPos + 9, yPos - 141)] = color;
	Result[int2(xPos + 12, yPos - 141)] = color;
	Result[int2(xPos + 13, yPos - 141)] = color;
	Result[int2(xPos + 7, yPos - 142)] = color;
	Result[int2(xPos + 8, yPos - 142)] = color;
	Result[int2(xPos + 13, yPos - 142)] = color;
	Result[int2(xPos + 14, yPos - 142)] = color;
	Result[int2(xPos + 4, yPos - 144)] = color;
	Result[int2(xPos + 5, yPos - 144)] = color;
	Result[int2(xPos + 16, yPos - 144)] = color;
	Result[int2(xPos + 17, yPos - 144)] = color;
	Result[int2(xPos + 5, yPos - 145)] = color;
	Result[int2(xPos + 6, yPos - 145)] = color;
	Result[int2(xPos + 15, yPos - 145)] = color;
	Result[int2(xPos + 16, yPos - 145)] = color;
	Result[int2(xPos, yPos - 146)] = color;
	Result[int2(xPos + 1, yPos - 146)] = color;
	Result[int2(xPos + 3, yPos - 146)] = color;
	Result[int2(xPos + 5, yPos - 146)] = color;
	Result[int2(xPos + 16, yPos - 146)] = color;
	Result[int2(xPos + 18, yPos - 146)] = color;
	Result[int2(xPos + 20, yPos - 146)] = color;
	Result[int2(xPos + 21, yPos - 146)] = color;
	Result[int2(xPos, yPos - 147)] = color;
	Result[int2(xPos + 2, yPos - 147)] = color;
	Result[int2(xPos + 3, yPos - 147)] = color;
	Result[int2(xPos + 5, yPos - 147)] = color;
	Result[int2(xPos + 7, yPos - 147)] = color;
	Result[int2(xPos + 14, yPos - 147)] = color;
	Result[int2(xPos + 16, yPos - 147)] = color;
	Result[int2(xPos + 18, yPos - 147)] = color;
	Result[int2(xPos + 19, yPos - 147)] = color;
	Result[int2(xPos + 21, yPos - 147)] = color;
	Result[int2(xPos + 6, yPos - 148)] = color;
	Result[int2(xPos + 7, yPos - 148)] = color;
	Result[int2(xPos + 14, yPos - 148)] = color;
	Result[int2(xPos + 15, yPos - 148)] = color;
}