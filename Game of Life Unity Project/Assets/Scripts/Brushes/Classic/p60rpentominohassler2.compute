#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 7, yPos)] = color;
	Result[int2(xPos + 8, yPos)] = color;
	Result[int2(xPos + 15, yPos)] = color;
	Result[int2(xPos + 16, yPos)] = color;
	Result[int2(xPos + 26, yPos)] = color;
	Result[int2(xPos + 27, yPos)] = color;
	Result[int2(xPos + 34, yPos)] = color;
	Result[int2(xPos + 35, yPos)] = color;
	Result[int2(xPos + 5, yPos - 1)] = color;
	Result[int2(xPos + 10, yPos - 1)] = color;
	Result[int2(xPos + 13, yPos - 1)] = color;
	Result[int2(xPos + 18, yPos - 1)] = color;
	Result[int2(xPos + 24, yPos - 1)] = color;
	Result[int2(xPos + 29, yPos - 1)] = color;
	Result[int2(xPos + 32, yPos - 1)] = color;
	Result[int2(xPos + 37, yPos - 1)] = color;
	Result[int2(xPos + 5, yPos - 2)] = color;
	Result[int2(xPos + 10, yPos - 2)] = color;
	Result[int2(xPos + 13, yPos - 2)] = color;
	Result[int2(xPos + 18, yPos - 2)] = color;
	Result[int2(xPos + 24, yPos - 2)] = color;
	Result[int2(xPos + 29, yPos - 2)] = color;
	Result[int2(xPos + 32, yPos - 2)] = color;
	Result[int2(xPos + 37, yPos - 2)] = color;
	Result[int2(xPos + 5, yPos - 3)] = color;
	Result[int2(xPos + 10, yPos - 3)] = color;
	Result[int2(xPos + 13, yPos - 3)] = color;
	Result[int2(xPos + 18, yPos - 3)] = color;
	Result[int2(xPos + 24, yPos - 3)] = color;
	Result[int2(xPos + 29, yPos - 3)] = color;
	Result[int2(xPos + 32, yPos - 3)] = color;
	Result[int2(xPos + 37, yPos - 3)] = color;
	Result[int2(xPos + 7, yPos - 4)] = color;
	Result[int2(xPos + 8, yPos - 4)] = color;
	Result[int2(xPos + 15, yPos - 4)] = color;
	Result[int2(xPos + 16, yPos - 4)] = color;
	Result[int2(xPos + 26, yPos - 4)] = color;
	Result[int2(xPos + 27, yPos - 4)] = color;
	Result[int2(xPos + 34, yPos - 4)] = color;
	Result[int2(xPos + 35, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 10)] = color;
	Result[int2(xPos + 4, yPos - 10)] = color;
	Result[int2(xPos + 6, yPos - 10)] = color;
	Result[int2(xPos + 7, yPos - 10)] = color;
	Result[int2(xPos + 9, yPos - 10)] = color;
	Result[int2(xPos + 12, yPos - 10)] = color;
	Result[int2(xPos + 18, yPos - 10)] = color;
	Result[int2(xPos + 25, yPos - 10)] = color;
	Result[int2(xPos + 30, yPos - 10)] = color;
	Result[int2(xPos + 33, yPos - 10)] = color;
	Result[int2(xPos + 35, yPos - 10)] = color;
	Result[int2(xPos + 36, yPos - 10)] = color;
	Result[int2(xPos + 38, yPos - 10)] = color;
	Result[int2(xPos + 41, yPos - 10)] = color;
	Result[int2(xPos, yPos - 11)] = color;
	Result[int2(xPos + 1, yPos - 11)] = color;
	Result[int2(xPos + 4, yPos - 11)] = color;
	Result[int2(xPos + 9, yPos - 11)] = color;
	Result[int2(xPos + 12, yPos - 11)] = color;
	Result[int2(xPos + 13, yPos - 11)] = color;
	Result[int2(xPos + 17, yPos - 11)] = color;
	Result[int2(xPos + 18, yPos - 11)] = color;
	Result[int2(xPos + 19, yPos - 11)] = color;
	Result[int2(xPos + 23, yPos - 11)] = color;
	Result[int2(xPos + 24, yPos - 11)] = color;
	Result[int2(xPos + 25, yPos - 11)] = color;
	Result[int2(xPos + 29, yPos - 11)] = color;
	Result[int2(xPos + 30, yPos - 11)] = color;
	Result[int2(xPos + 33, yPos - 11)] = color;
	Result[int2(xPos + 38, yPos - 11)] = color;
	Result[int2(xPos + 41, yPos - 11)] = color;
	Result[int2(xPos + 42, yPos - 11)] = color;
	Result[int2(xPos + 1, yPos - 12)] = color;
	Result[int2(xPos + 4, yPos - 12)] = color;
	Result[int2(xPos + 6, yPos - 12)] = color;
	Result[int2(xPos + 7, yPos - 12)] = color;
	Result[int2(xPos + 9, yPos - 12)] = color;
	Result[int2(xPos + 12, yPos - 12)] = color;
	Result[int2(xPos + 17, yPos - 12)] = color;
	Result[int2(xPos + 24, yPos - 12)] = color;
	Result[int2(xPos + 30, yPos - 12)] = color;
	Result[int2(xPos + 33, yPos - 12)] = color;
	Result[int2(xPos + 35, yPos - 12)] = color;
	Result[int2(xPos + 36, yPos - 12)] = color;
	Result[int2(xPos + 38, yPos - 12)] = color;
	Result[int2(xPos + 41, yPos - 12)] = color;
	Result[int2(xPos + 7, yPos - 18)] = color;
	Result[int2(xPos + 8, yPos - 18)] = color;
	Result[int2(xPos + 15, yPos - 18)] = color;
	Result[int2(xPos + 16, yPos - 18)] = color;
	Result[int2(xPos + 26, yPos - 18)] = color;
	Result[int2(xPos + 27, yPos - 18)] = color;
	Result[int2(xPos + 34, yPos - 18)] = color;
	Result[int2(xPos + 35, yPos - 18)] = color;
	Result[int2(xPos + 5, yPos - 19)] = color;
	Result[int2(xPos + 10, yPos - 19)] = color;
	Result[int2(xPos + 13, yPos - 19)] = color;
	Result[int2(xPos + 18, yPos - 19)] = color;
	Result[int2(xPos + 24, yPos - 19)] = color;
	Result[int2(xPos + 29, yPos - 19)] = color;
	Result[int2(xPos + 32, yPos - 19)] = color;
	Result[int2(xPos + 37, yPos - 19)] = color;
	Result[int2(xPos + 5, yPos - 20)] = color;
	Result[int2(xPos + 10, yPos - 20)] = color;
	Result[int2(xPos + 13, yPos - 20)] = color;
	Result[int2(xPos + 18, yPos - 20)] = color;
	Result[int2(xPos + 24, yPos - 20)] = color;
	Result[int2(xPos + 29, yPos - 20)] = color;
	Result[int2(xPos + 32, yPos - 20)] = color;
	Result[int2(xPos + 37, yPos - 20)] = color;
	Result[int2(xPos + 5, yPos - 21)] = color;
	Result[int2(xPos + 10, yPos - 21)] = color;
	Result[int2(xPos + 13, yPos - 21)] = color;
	Result[int2(xPos + 18, yPos - 21)] = color;
	Result[int2(xPos + 24, yPos - 21)] = color;
	Result[int2(xPos + 29, yPos - 21)] = color;
	Result[int2(xPos + 32, yPos - 21)] = color;
	Result[int2(xPos + 37, yPos - 21)] = color;
	Result[int2(xPos + 7, yPos - 22)] = color;
	Result[int2(xPos + 8, yPos - 22)] = color;
	Result[int2(xPos + 15, yPos - 22)] = color;
	Result[int2(xPos + 16, yPos - 22)] = color;
	Result[int2(xPos + 26, yPos - 22)] = color;
	Result[int2(xPos + 27, yPos - 22)] = color;
	Result[int2(xPos + 34, yPos - 22)] = color;
	Result[int2(xPos + 35, yPos - 22)] = color;
}