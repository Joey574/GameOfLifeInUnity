#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 43, yPos)] = color;
	Result[int2(xPos + 42, yPos - 1)] = color;
	Result[int2(xPos + 42, yPos - 2)] = color;
	Result[int2(xPos + 43, yPos - 2)] = color;
	Result[int2(xPos + 44, yPos - 2)] = color;
	Result[int2(xPos + 14, yPos - 11)] = color;
	Result[int2(xPos + 15, yPos - 11)] = color;
	Result[int2(xPos + 16, yPos - 11)] = color;
	Result[int2(xPos + 13, yPos - 13)] = color;
	Result[int2(xPos + 17, yPos - 13)] = color;
	Result[int2(xPos + 13, yPos - 14)] = color;
	Result[int2(xPos + 17, yPos - 14)] = color;
	Result[int2(xPos + 14, yPos - 16)] = color;
	Result[int2(xPos + 15, yPos - 16)] = color;
	Result[int2(xPos + 16, yPos - 16)] = color;
	Result[int2(xPos + 14, yPos - 19)] = color;
	Result[int2(xPos + 15, yPos - 19)] = color;
	Result[int2(xPos + 16, yPos - 19)] = color;
	Result[int2(xPos + 13, yPos - 21)] = color;
	Result[int2(xPos + 17, yPos - 21)] = color;
	Result[int2(xPos + 13, yPos - 22)] = color;
	Result[int2(xPos + 17, yPos - 22)] = color;
	Result[int2(xPos + 20, yPos - 23)] = color;
	Result[int2(xPos + 14, yPos - 24)] = color;
	Result[int2(xPos + 15, yPos - 24)] = color;
	Result[int2(xPos + 16, yPos - 24)] = color;
	Result[int2(xPos + 20, yPos - 24)] = color;
	Result[int2(xPos + 22, yPos - 24)] = color;
	Result[int2(xPos + 20, yPos - 25)] = color;
	Result[int2(xPos + 21, yPos - 25)] = color;
	Result[int2(xPos, yPos - 27)] = color;
	Result[int2(xPos + 3, yPos - 27)] = color;
	Result[int2(xPos + 5, yPos - 27)] = color;
	Result[int2(xPos + 6, yPos - 27)] = color;
	Result[int2(xPos + 8, yPos - 27)] = color;
	Result[int2(xPos + 11, yPos - 27)] = color;
	Result[int2(xPos, yPos - 28)] = color;
	Result[int2(xPos + 1, yPos - 28)] = color;
	Result[int2(xPos + 2, yPos - 28)] = color;
	Result[int2(xPos + 3, yPos - 28)] = color;
	Result[int2(xPos + 5, yPos - 28)] = color;
	Result[int2(xPos + 6, yPos - 28)] = color;
	Result[int2(xPos + 8, yPos - 28)] = color;
	Result[int2(xPos + 9, yPos - 28)] = color;
	Result[int2(xPos + 10, yPos - 28)] = color;
	Result[int2(xPos + 11, yPos - 28)] = color;
	Result[int2(xPos, yPos - 29)] = color;
	Result[int2(xPos + 3, yPos - 29)] = color;
	Result[int2(xPos + 5, yPos - 29)] = color;
	Result[int2(xPos + 6, yPos - 29)] = color;
	Result[int2(xPos + 8, yPos - 29)] = color;
	Result[int2(xPos + 11, yPos - 29)] = color;
}