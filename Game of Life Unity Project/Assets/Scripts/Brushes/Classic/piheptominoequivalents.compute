#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 71)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 21)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 105)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 115)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 40)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 42)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 62)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 44)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 43)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 195)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 195)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 195)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 196)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 196)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 197)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 198)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 198)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 199)) * yMult)] = color;
}