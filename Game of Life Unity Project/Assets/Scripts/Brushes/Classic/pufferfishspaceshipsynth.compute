#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 25)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 52)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 53)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 74)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 75)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 76)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 92)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 93)) * yMult)] = color;
	Result[int2((xPos + 112)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 113)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 114)) * xMult), (yPos - 94)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 105)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 453)) * xMult), (yPos - 106)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 453)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 455)) * xMult), (yPos - 107)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 453)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 454)) * xMult), (yPos - 108)) * yMult)] = color;
	Result[int2((xPos + 131)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 133)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 132)) * xMult), (yPos - 112)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 126)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 127)) * yMult)] = color;
	Result[int2((xPos + 150)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 128)) * yMult)] = color;
	Result[int2((xPos + 266)) * xMult), (yPos - 199)) * yMult)] = color;
	Result[int2((xPos + 266)) * xMult), (yPos - 200)) * yMult)] = color;
	Result[int2((xPos + 268)) * xMult), (yPos - 200)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 201)) * yMult)] = color;
	Result[int2((xPos + 266)) * xMult), (yPos - 201)) * yMult)] = color;
	Result[int2((xPos + 267)) * xMult), (yPos - 201)) * yMult)] = color;
	Result[int2((xPos + 204)) * xMult), (yPos - 202)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 203)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 203)) * yMult)] = color;
	Result[int2((xPos + 204)) * xMult), (yPos - 203)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 204)) * yMult)] = color;
	Result[int2((xPos + 284)) * xMult), (yPos - 204)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 205)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 205)) * yMult)] = color;
	Result[int2((xPos + 283)) * xMult), (yPos - 206)) * yMult)] = color;
	Result[int2((xPos + 197)) * xMult), (yPos - 208)) * yMult)] = color;
	Result[int2((xPos + 195)) * xMult), (yPos - 209)) * yMult)] = color;
	Result[int2((xPos + 197)) * xMult), (yPos - 209)) * yMult)] = color;
	Result[int2((xPos + 196)) * xMult), (yPos - 210)) * yMult)] = color;
	Result[int2((xPos + 197)) * xMult), (yPos - 210)) * yMult)] = color;
	Result[int2((xPos + 354)) * xMult), (yPos - 210)) * yMult)] = color;
	Result[int2((xPos + 219)) * xMult), (yPos - 211)) * yMult)] = color;
	Result[int2((xPos + 221)) * xMult), (yPos - 211)) * yMult)] = color;
	Result[int2((xPos + 353)) * xMult), (yPos - 211)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 212)) * yMult)] = color;
	Result[int2((xPos + 221)) * xMult), (yPos - 212)) * yMult)] = color;
	Result[int2((xPos + 353)) * xMult), (yPos - 212)) * yMult)] = color;
	Result[int2((xPos + 354)) * xMult), (yPos - 212)) * yMult)] = color;
	Result[int2((xPos + 355)) * xMult), (yPos - 212)) * yMult)] = color;
	Result[int2((xPos + 179)) * xMult), (yPos - 213)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 213)) * yMult)] = color;
	Result[int2((xPos + 207)) * xMult), (yPos - 213)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 213)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 213)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 214)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 214)) * yMult)] = color;
	Result[int2((xPos + 208)) * xMult), (yPos - 214)) * yMult)] = color;
	Result[int2((xPos + 209)) * xMult), (yPos - 214)) * yMult)] = color;
	Result[int2((xPos + 180)) * xMult), (yPos - 215)) * yMult)] = color;
	Result[int2((xPos + 208)) * xMult), (yPos - 215)) * yMult)] = color;
	Result[int2((xPos + 336)) * xMult), (yPos - 220)) * yMult)] = color;
	Result[int2((xPos + 338)) * xMult), (yPos - 220)) * yMult)] = color;
	Result[int2((xPos + 336)) * xMult), (yPos - 221)) * yMult)] = color;
	Result[int2((xPos + 337)) * xMult), (yPos - 221)) * yMult)] = color;
	Result[int2((xPos + 337)) * xMult), (yPos - 222)) * yMult)] = color;
	Result[int2((xPos + 348)) * xMult), (yPos - 222)) * yMult)] = color;
	Result[int2((xPos + 350)) * xMult), (yPos - 222)) * yMult)] = color;
	Result[int2((xPos + 348)) * xMult), (yPos - 223)) * yMult)] = color;
	Result[int2((xPos + 349)) * xMult), (yPos - 223)) * yMult)] = color;
	Result[int2((xPos + 349)) * xMult), (yPos - 224)) * yMult)] = color;
	Result[int2((xPos + 264)) * xMult), (yPos - 249)) * yMult)] = color;
	Result[int2((xPos + 265)) * xMult), (yPos - 249)) * yMult)] = color;
	Result[int2((xPos + 263)) * xMult), (yPos - 250)) * yMult)] = color;
	Result[int2((xPos + 264)) * xMult), (yPos - 250)) * yMult)] = color;
	Result[int2((xPos + 265)) * xMult), (yPos - 251)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 258)) * yMult)] = color;
	Result[int2((xPos + 214)) * xMult), (yPos - 258)) * yMult)] = color;
	Result[int2((xPos + 214)) * xMult), (yPos - 259)) * yMult)] = color;
	Result[int2((xPos + 215)) * xMult), (yPos - 259)) * yMult)] = color;
	Result[int2((xPos + 213)) * xMult), (yPos - 260)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 266)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 266)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 266)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 266)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 267)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 267)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 267)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 267)) * yMult)] = color;
	Result[int2((xPos + 286)) * xMult), (yPos - 267)) * yMult)] = color;
	Result[int2((xPos + 287)) * xMult), (yPos - 267)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 268)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 268)) * yMult)] = color;
	Result[int2((xPos + 285)) * xMult), (yPos - 268)) * yMult)] = color;
	Result[int2((xPos + 286)) * xMult), (yPos - 268)) * yMult)] = color;
	Result[int2((xPos + 260)) * xMult), (yPos - 269)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 269)) * yMult)] = color;
	Result[int2((xPos + 262)) * xMult), (yPos - 269)) * yMult)] = color;
	Result[int2((xPos + 287)) * xMult), (yPos - 269)) * yMult)] = color;
	Result[int2((xPos + 260)) * xMult), (yPos - 270)) * yMult)] = color;
	Result[int2((xPos + 261)) * xMult), (yPos - 271)) * yMult)] = color;
	Result[int2((xPos + 278)) * xMult), (yPos - 271)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 271)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 271)) * yMult)] = color;
	Result[int2((xPos + 278)) * xMult), (yPos - 272)) * yMult)] = color;
	Result[int2((xPos + 279)) * xMult), (yPos - 273)) * yMult)] = color;
	Result[int2((xPos + 219)) * xMult), (yPos - 275)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 275)) * yMult)] = color;
	Result[int2((xPos + 218)) * xMult), (yPos - 276)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 276)) * yMult)] = color;
	Result[int2((xPos + 220)) * xMult), (yPos - 277)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 277)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 277)) * yMult)] = color;
	Result[int2((xPos + 282)) * xMult), (yPos - 277)) * yMult)] = color;
	Result[int2((xPos + 280)) * xMult), (yPos - 278)) * yMult)] = color;
	Result[int2((xPos + 281)) * xMult), (yPos - 279)) * yMult)] = color;
	Result[int2((xPos + 298)) * xMult), (yPos - 287)) * yMult)] = color;
	Result[int2((xPos + 297)) * xMult), (yPos - 288)) * yMult)] = color;
	Result[int2((xPos + 298)) * xMult), (yPos - 288)) * yMult)] = color;
	Result[int2((xPos + 297)) * xMult), (yPos - 289)) * yMult)] = color;
	Result[int2((xPos + 299)) * xMult), (yPos - 289)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 312)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 312)) * yMult)] = color;
	Result[int2((xPos + 138)) * xMult), (yPos - 313)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 313)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 314)) * yMult)] = color;
	Result[int2((xPos + 127)) * xMult), (yPos - 344)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 344)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 344)) * yMult)] = color;
	Result[int2((xPos + 129)) * xMult), (yPos - 345)) * yMult)] = color;
	Result[int2((xPos + 128)) * xMult), (yPos - 346)) * yMult)] = color;
	Result[int2((xPos + 198)) * xMult), (yPos - 352)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 352)) * yMult)] = color;
	Result[int2((xPos + 199)) * xMult), (yPos - 353)) * yMult)] = color;
	Result[int2((xPos + 200)) * xMult), (yPos - 353)) * yMult)] = color;
	Result[int2((xPos + 198)) * xMult), (yPos - 354)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 361)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 361)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 361)) * yMult)] = color;
	Result[int2((xPos + 343)) * xMult), (yPos - 361)) * yMult)] = color;
	Result[int2((xPos + 344)) * xMult), (yPos - 361)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 362)) * yMult)] = color;
	Result[int2((xPos + 342)) * xMult), (yPos - 362)) * yMult)] = color;
	Result[int2((xPos + 343)) * xMult), (yPos - 362)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 363)) * yMult)] = color;
	Result[int2((xPos + 344)) * xMult), (yPos - 363)) * yMult)] = color;
	Result[int2((xPos + 109)) * xMult), (yPos - 369)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 369)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 369)) * yMult)] = color;
	Result[int2((xPos + 182)) * xMult), (yPos - 369)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 369)) * yMult)] = color;
	Result[int2((xPos + 355)) * xMult), (yPos - 369)) * yMult)] = color;
	Result[int2((xPos + 356)) * xMult), (yPos - 369)) * yMult)] = color;
	Result[int2((xPos + 111)) * xMult), (yPos - 370)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 370)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 370)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 370)) * yMult)] = color;
	Result[int2((xPos + 184)) * xMult), (yPos - 370)) * yMult)] = color;
	Result[int2((xPos + 354)) * xMult), (yPos - 370)) * yMult)] = color;
	Result[int2((xPos + 355)) * xMult), (yPos - 370)) * yMult)] = color;
	Result[int2((xPos + 110)) * xMult), (yPos - 371)) * yMult)] = color;
	Result[int2((xPos + 177)) * xMult), (yPos - 371)) * yMult)] = color;
	Result[int2((xPos + 178)) * xMult), (yPos - 371)) * yMult)] = color;
	Result[int2((xPos + 182)) * xMult), (yPos - 371)) * yMult)] = color;
	Result[int2((xPos + 356)) * xMult), (yPos - 371)) * yMult)] = color;
	Result[int2((xPos + 176)) * xMult), (yPos - 372)) * yMult)] = color;
	Result[int2((xPos + 201)) * xMult), (yPos - 372)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 372)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 372)) * yMult)] = color;
	Result[int2((xPos + 203)) * xMult), (yPos - 373)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 374)) * yMult)] = color;
	Result[int2((xPos + 184)) * xMult), (yPos - 374)) * yMult)] = color;
	Result[int2((xPos + 185)) * xMult), (yPos - 374)) * yMult)] = color;
	Result[int2((xPos + 202)) * xMult), (yPos - 374)) * yMult)] = color;
	Result[int2((xPos + 185)) * xMult), (yPos - 375)) * yMult)] = color;
	Result[int2((xPos + 184)) * xMult), (yPos - 376)) * yMult)] = color;
	Result[int2((xPos + 337)) * xMult), (yPos - 378)) * yMult)] = color;
	Result[int2((xPos + 338)) * xMult), (yPos - 378)) * yMult)] = color;
	Result[int2((xPos + 337)) * xMult), (yPos - 379)) * yMult)] = color;
	Result[int2((xPos + 339)) * xMult), (yPos - 379)) * yMult)] = color;
	Result[int2((xPos + 181)) * xMult), (yPos - 380)) * yMult)] = color;
	Result[int2((xPos + 182)) * xMult), (yPos - 380)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 380)) * yMult)] = color;
	Result[int2((xPos + 337)) * xMult), (yPos - 380)) * yMult)] = color;
	Result[int2((xPos + 183)) * xMult), (yPos - 381)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 382)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 382)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 382)) * yMult)] = color;
	Result[int2((xPos + 182)) * xMult), (yPos - 382)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 383)) * yMult)] = color;
	Result[int2((xPos + 77)) * xMult), (yPos - 384)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 390)) * yMult)] = color;
	Result[int2((xPos + 165)) * xMult), (yPos - 391)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 391)) * yMult)] = color;
	Result[int2((xPos + 164)) * xMult), (yPos - 392)) * yMult)] = color;
	Result[int2((xPos + 166)) * xMult), (yPos - 392)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 398)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 398)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 398)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 399)) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 400)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 421)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 421)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 421)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 422)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 423)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 426)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 426)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 427)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 427)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 427)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 427)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 427)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 428)) * yMult)] = color;
	Result[int2((xPos + 47)) * xMult), (yPos - 428)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 428)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 428)) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 429)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 429)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 429)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 430)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 450)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 450)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 450)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 451)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 452)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 460)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 460)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 460)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 461)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 462)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 462)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 462)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 462)) * yMult)] = color;
	Result[int2((xPos + 86)) * xMult), (yPos - 462)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 462)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 463)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 463)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 463)) * yMult)] = color;
	Result[int2((xPos + 449)) * xMult), (yPos - 463)) * yMult)] = color;
	Result[int2((xPos + 450)) * xMult), (yPos - 463)) * yMult)] = color;
	Result[int2((xPos + 451)) * xMult), (yPos - 463)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 464)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 464)) * yMult)] = color;
	Result[int2((xPos + 449)) * xMult), (yPos - 464)) * yMult)] = color;
	Result[int2((xPos + 450)) * xMult), (yPos - 465)) * yMult)] = color;
	Result[int2((xPos + 82)) * xMult), (yPos - 468)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 468)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 469)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 469)) * yMult)] = color;
	Result[int2((xPos + 453)) * xMult), (yPos - 469)) * yMult)] = color;
	Result[int2((xPos + 454)) * xMult), (yPos - 469)) * yMult)] = color;
	Result[int2((xPos + 455)) * xMult), (yPos - 469)) * yMult)] = color;
	Result[int2((xPos + 83)) * xMult), (yPos - 470)) * yMult)] = color;
	Result[int2((xPos + 453)) * xMult), (yPos - 470)) * yMult)] = color;
	Result[int2((xPos + 454)) * xMult), (yPos - 471)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 478)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 478)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 478)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 479)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 480)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 496)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 496)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 496)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 497)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 498)) * yMult)] = color;
}