#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 12, yPos - 12)] = color;
	Result[int2(xPos + 13, yPos - 13)] = color;
	Result[int2(xPos + 14, yPos - 13)] = color;
	Result[int2(xPos + 12, yPos - 14)] = color;
	Result[int2(xPos + 13, yPos - 14)] = color;
	Result[int2(xPos + 24, yPos - 24)] = color;
	Result[int2(xPos + 25, yPos - 25)] = color;
	Result[int2(xPos + 26, yPos - 25)] = color;
	Result[int2(xPos + 24, yPos - 26)] = color;
	Result[int2(xPos + 25, yPos - 26)] = color;
	Result[int2(xPos + 36, yPos - 36)] = color;
	Result[int2(xPos + 37, yPos - 37)] = color;
	Result[int2(xPos + 38, yPos - 37)] = color;
	Result[int2(xPos + 36, yPos - 38)] = color;
	Result[int2(xPos + 37, yPos - 38)] = color;
	Result[int2(xPos + 48, yPos - 48)] = color;
	Result[int2(xPos + 49, yPos - 49)] = color;
	Result[int2(xPos + 50, yPos - 49)] = color;
	Result[int2(xPos + 48, yPos - 50)] = color;
	Result[int2(xPos + 49, yPos - 50)] = color;
	Result[int2(xPos + 60, yPos - 60)] = color;
	Result[int2(xPos + 61, yPos - 61)] = color;
	Result[int2(xPos + 62, yPos - 61)] = color;
	Result[int2(xPos + 60, yPos - 62)] = color;
	Result[int2(xPos + 61, yPos - 62)] = color;
	Result[int2(xPos + 81, yPos - 67)] = color;
	Result[int2(xPos + 82, yPos - 67)] = color;
	Result[int2(xPos + 80, yPos - 68)] = color;
	Result[int2(xPos + 83, yPos - 68)] = color;
	Result[int2(xPos + 80, yPos - 69)] = color;
	Result[int2(xPos + 82, yPos - 69)] = color;
	Result[int2(xPos + 84, yPos - 69)] = color;
	Result[int2(xPos + 81, yPos - 70)] = color;
	Result[int2(xPos + 84, yPos - 70)] = color;
	Result[int2(xPos + 85, yPos - 71)] = color;
	Result[int2(xPos + 72, yPos - 72)] = color;
	Result[int2(xPos + 82, yPos - 72)] = color;
	Result[int2(xPos + 84, yPos - 72)] = color;
	Result[int2(xPos + 73, yPos - 73)] = color;
	Result[int2(xPos + 74, yPos - 73)] = color;
	Result[int2(xPos + 80, yPos - 73)] = color;
	Result[int2(xPos + 72, yPos - 74)] = color;
	Result[int2(xPos + 73, yPos - 74)] = color;
	Result[int2(xPos + 80, yPos - 74)] = color;
	Result[int2(xPos + 80, yPos - 75)] = color;
	Result[int2(xPos + 81, yPos - 75)] = color;
	Result[int2(xPos + 91, yPos - 75)] = color;
	Result[int2(xPos + 92, yPos - 75)] = color;
	Result[int2(xPos + 82, yPos - 76)] = color;
	Result[int2(xPos + 91, yPos - 76)] = color;
	Result[int2(xPos + 93, yPos - 76)] = color;
	Result[int2(xPos + 81, yPos - 77)] = color;
	Result[int2(xPos + 82, yPos - 77)] = color;
	Result[int2(xPos + 93, yPos - 77)] = color;
	Result[int2(xPos + 78, yPos - 78)] = color;
	Result[int2(xPos + 79, yPos - 78)] = color;
	Result[int2(xPos + 80, yPos - 78)] = color;
	Result[int2(xPos + 81, yPos - 78)] = color;
	Result[int2(xPos + 83, yPos - 78)] = color;
	Result[int2(xPos + 84, yPos - 78)] = color;
	Result[int2(xPos + 93, yPos - 78)] = color;
	Result[int2(xPos + 95, yPos - 78)] = color;
	Result[int2(xPos + 96, yPos - 78)] = color;
	Result[int2(xPos + 78, yPos - 79)] = color;
	Result[int2(xPos + 79, yPos - 79)] = color;
	Result[int2(xPos + 82, yPos - 79)] = color;
	Result[int2(xPos + 83, yPos - 79)] = color;
	Result[int2(xPos + 90, yPos - 79)] = color;
	Result[int2(xPos + 91, yPos - 79)] = color;
	Result[int2(xPos + 93, yPos - 79)] = color;
	Result[int2(xPos + 95, yPos - 79)] = color;
	Result[int2(xPos + 77, yPos - 80)] = color;
	Result[int2(xPos + 78, yPos - 80)] = color;
	Result[int2(xPos + 80, yPos - 80)] = color;
	Result[int2(xPos + 83, yPos - 80)] = color;
	Result[int2(xPos + 84, yPos - 80)] = color;
	Result[int2(xPos + 86, yPos - 80)] = color;
	Result[int2(xPos + 87, yPos - 80)] = color;
	Result[int2(xPos + 90, yPos - 80)] = color;
	Result[int2(xPos + 91, yPos - 80)] = color;
	Result[int2(xPos + 93, yPos - 80)] = color;
	Result[int2(xPos + 95, yPos - 80)] = color;
	Result[int2(xPos + 78, yPos - 81)] = color;
	Result[int2(xPos + 81, yPos - 81)] = color;
	Result[int2(xPos + 83, yPos - 81)] = color;
	Result[int2(xPos + 93, yPos - 81)] = color;
	Result[int2(xPos + 95, yPos - 81)] = color;
	Result[int2(xPos + 96, yPos - 81)] = color;
	Result[int2(xPos + 74, yPos - 82)] = color;
	Result[int2(xPos + 75, yPos - 82)] = color;
	Result[int2(xPos + 78, yPos - 82)] = color;
	Result[int2(xPos + 83, yPos - 82)] = color;
	Result[int2(xPos + 84, yPos - 82)] = color;
	Result[int2(xPos + 90, yPos - 82)] = color;
	Result[int2(xPos + 91, yPos - 82)] = color;
	Result[int2(xPos + 92, yPos - 82)] = color;
	Result[int2(xPos + 93, yPos - 82)] = color;
	Result[int2(xPos + 96, yPos - 82)] = color;
	Result[int2(xPos + 73, yPos - 83)] = color;
	Result[int2(xPos + 75, yPos - 83)] = color;
	Result[int2(xPos + 90, yPos - 83)] = color;
	Result[int2(xPos + 94, yPos - 83)] = color;
	Result[int2(xPos + 95, yPos - 83)] = color;
	Result[int2(xPos + 73, yPos - 84)] = color;
	Result[int2(xPos + 82, yPos - 84)] = color;
	Result[int2(xPos + 92, yPos - 84)] = color;
	Result[int2(xPos + 93, yPos - 84)] = color;
	Result[int2(xPos + 72, yPos - 85)] = color;
	Result[int2(xPos + 73, yPos - 85)] = color;
	Result[int2(xPos + 79, yPos - 85)] = color;
	Result[int2(xPos + 82, yPos - 85)] = color;
	Result[int2(xPos + 93, yPos - 85)] = color;
	Result[int2(xPos + 79, yPos - 86)] = color;
	Result[int2(xPos + 81, yPos - 86)] = color;
	Result[int2(xPos + 91, yPos - 86)] = color;
	Result[int2(xPos + 91, yPos - 87)] = color;
	Result[int2(xPos + 92, yPos - 87)] = color;
}