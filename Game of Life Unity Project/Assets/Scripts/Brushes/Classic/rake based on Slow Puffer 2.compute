#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 4, yPos - 1)] = color;
	Result[int2(xPos + 14, yPos - 1)] = color;
	Result[int2(xPos + 15, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 2)] = color;
	Result[int2(xPos + 6, yPos - 2)] = color;
	Result[int2(xPos + 13, yPos - 2)] = color;
	Result[int2(xPos + 14, yPos - 2)] = color;
	Result[int2(xPos + 16, yPos - 2)] = color;
	Result[int2(xPos + 17, yPos - 2)] = color;
	Result[int2(xPos + 18, yPos - 2)] = color;
	Result[int2(xPos + 102, yPos - 2)] = color;
	Result[int2(xPos + 103, yPos - 2)] = color;
	Result[int2(xPos + 119, yPos - 2)] = color;
	Result[int2(xPos + 120, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 3)] = color;
	Result[int2(xPos + 14, yPos - 3)] = color;
	Result[int2(xPos + 15, yPos - 3)] = color;
	Result[int2(xPos + 16, yPos - 3)] = color;
	Result[int2(xPos + 17, yPos - 3)] = color;
	Result[int2(xPos + 18, yPos - 3)] = color;
	Result[int2(xPos + 74, yPos - 3)] = color;
	Result[int2(xPos + 75, yPos - 3)] = color;
	Result[int2(xPos + 76, yPos - 3)] = color;
	Result[int2(xPos + 77, yPos - 3)] = color;
	Result[int2(xPos + 78, yPos - 3)] = color;
	Result[int2(xPos + 101, yPos - 3)] = color;
	Result[int2(xPos + 102, yPos - 3)] = color;
	Result[int2(xPos + 103, yPos - 3)] = color;
	Result[int2(xPos + 104, yPos - 3)] = color;
	Result[int2(xPos + 118, yPos - 3)] = color;
	Result[int2(xPos + 119, yPos - 3)] = color;
	Result[int2(xPos + 121, yPos - 3)] = color;
	Result[int2(xPos + 122, yPos - 3)] = color;
	Result[int2(xPos + 123, yPos - 3)] = color;
	Result[int2(xPos + 124, yPos - 3)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 6, yPos - 4)] = color;
	Result[int2(xPos + 15, yPos - 4)] = color;
	Result[int2(xPos + 16, yPos - 4)] = color;
	Result[int2(xPos + 17, yPos - 4)] = color;
	Result[int2(xPos + 74, yPos - 4)] = color;
	Result[int2(xPos + 79, yPos - 4)] = color;
	Result[int2(xPos + 100, yPos - 4)] = color;
	Result[int2(xPos + 101, yPos - 4)] = color;
	Result[int2(xPos + 103, yPos - 4)] = color;
	Result[int2(xPos + 104, yPos - 4)] = color;
	Result[int2(xPos + 119, yPos - 4)] = color;
	Result[int2(xPos + 120, yPos - 4)] = color;
	Result[int2(xPos + 121, yPos - 4)] = color;
	Result[int2(xPos + 122, yPos - 4)] = color;
	Result[int2(xPos + 123, yPos - 4)] = color;
	Result[int2(xPos + 124, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 5)] = color;
	Result[int2(xPos + 2, yPos - 5)] = color;
	Result[int2(xPos + 3, yPos - 5)] = color;
	Result[int2(xPos + 4, yPos - 5)] = color;
	Result[int2(xPos + 5, yPos - 5)] = color;
	Result[int2(xPos + 74, yPos - 5)] = color;
	Result[int2(xPos + 101, yPos - 5)] = color;
	Result[int2(xPos + 102, yPos - 5)] = color;
	Result[int2(xPos + 120, yPos - 5)] = color;
	Result[int2(xPos + 121, yPos - 5)] = color;
	Result[int2(xPos + 122, yPos - 5)] = color;
	Result[int2(xPos + 123, yPos - 5)] = color;
	Result[int2(xPos + 75, yPos - 6)] = color;
	Result[int2(xPos + 79, yPos - 6)] = color;
	Result[int2(xPos + 77, yPos - 7)] = color;
	Result[int2(xPos + 21, yPos - 8)] = color;
	Result[int2(xPos + 2, yPos - 9)] = color;
	Result[int2(xPos + 3, yPos - 9)] = color;
	Result[int2(xPos + 14, yPos - 9)] = color;
	Result[int2(xPos + 15, yPos - 9)] = color;
	Result[int2(xPos + 17, yPos - 9)] = color;
	Result[int2(xPos + 20, yPos - 9)] = color;
	Result[int2(xPos + 22, yPos - 9)] = color;
	Result[int2(xPos + 121, yPos - 9)] = color;
	Result[int2(xPos + 122, yPos - 9)] = color;
	Result[int2(xPos + 1, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 10)] = color;
	Result[int2(xPos + 4, yPos - 10)] = color;
	Result[int2(xPos + 5, yPos - 10)] = color;
	Result[int2(xPos + 6, yPos - 10)] = color;
	Result[int2(xPos + 13, yPos - 10)] = color;
	Result[int2(xPos + 15, yPos - 10)] = color;
	Result[int2(xPos + 17, yPos - 10)] = color;
	Result[int2(xPos + 18, yPos - 10)] = color;
	Result[int2(xPos + 19, yPos - 10)] = color;
	Result[int2(xPos + 20, yPos - 10)] = color;
	Result[int2(xPos + 22, yPos - 10)] = color;
	Result[int2(xPos + 120, yPos - 10)] = color;
	Result[int2(xPos + 123, yPos - 10)] = color;
	Result[int2(xPos + 2, yPos - 11)] = color;
	Result[int2(xPos + 3, yPos - 11)] = color;
	Result[int2(xPos + 4, yPos - 11)] = color;
	Result[int2(xPos + 5, yPos - 11)] = color;
	Result[int2(xPos + 9, yPos - 11)] = color;
	Result[int2(xPos + 10, yPos - 11)] = color;
	Result[int2(xPos + 11, yPos - 11)] = color;
	Result[int2(xPos + 13, yPos - 11)] = color;
	Result[int2(xPos + 120, yPos - 11)] = color;
	Result[int2(xPos + 122, yPos - 11)] = color;
	Result[int2(xPos + 3, yPos - 12)] = color;
	Result[int2(xPos + 4, yPos - 12)] = color;
	Result[int2(xPos + 13, yPos - 12)] = color;
	Result[int2(xPos + 15, yPos - 12)] = color;
	Result[int2(xPos + 17, yPos - 12)] = color;
	Result[int2(xPos + 18, yPos - 12)] = color;
	Result[int2(xPos + 19, yPos - 12)] = color;
	Result[int2(xPos + 20, yPos - 12)] = color;
	Result[int2(xPos + 22, yPos - 12)] = color;
	Result[int2(xPos + 120, yPos - 12)] = color;
	Result[int2(xPos + 121, yPos - 12)] = color;
	Result[int2(xPos + 14, yPos - 13)] = color;
	Result[int2(xPos + 15, yPos - 13)] = color;
	Result[int2(xPos + 17, yPos - 13)] = color;
	Result[int2(xPos + 20, yPos - 13)] = color;
	Result[int2(xPos + 22, yPos - 13)] = color;
	Result[int2(xPos + 120, yPos - 13)] = color;
	Result[int2(xPos + 6, yPos - 14)] = color;
	Result[int2(xPos + 7, yPos - 14)] = color;
	Result[int2(xPos + 21, yPos - 14)] = color;
	Result[int2(xPos + 118, yPos - 14)] = color;
	Result[int2(xPos + 120, yPos - 14)] = color;
	Result[int2(xPos + 4, yPos - 15)] = color;
	Result[int2(xPos + 9, yPos - 15)] = color;
	Result[int2(xPos + 117, yPos - 15)] = color;
	Result[int2(xPos + 118, yPos - 15)] = color;
	Result[int2(xPos + 120, yPos - 15)] = color;
	Result[int2(xPos + 121, yPos - 15)] = color;
	Result[int2(xPos + 3, yPos - 16)] = color;
	Result[int2(xPos + 80, yPos - 16)] = color;
	Result[int2(xPos + 81, yPos - 16)] = color;
	Result[int2(xPos + 82, yPos - 16)] = color;
	Result[int2(xPos + 83, yPos - 16)] = color;
	Result[int2(xPos + 118, yPos - 16)] = color;
	Result[int2(xPos + 120, yPos - 16)] = color;
	Result[int2(xPos + 3, yPos - 17)] = color;
	Result[int2(xPos + 9, yPos - 17)] = color;
	Result[int2(xPos + 79, yPos - 17)] = color;
	Result[int2(xPos + 80, yPos - 17)] = color;
	Result[int2(xPos + 81, yPos - 17)] = color;
	Result[int2(xPos + 82, yPos - 17)] = color;
	Result[int2(xPos + 83, yPos - 17)] = color;
	Result[int2(xPos + 84, yPos - 17)] = color;
	Result[int2(xPos + 119, yPos - 17)] = color;
	Result[int2(xPos + 3, yPos - 18)] = color;
	Result[int2(xPos + 4, yPos - 18)] = color;
	Result[int2(xPos + 5, yPos - 18)] = color;
	Result[int2(xPos + 6, yPos - 18)] = color;
	Result[int2(xPos + 7, yPos - 18)] = color;
	Result[int2(xPos + 8, yPos - 18)] = color;
	Result[int2(xPos + 15, yPos - 18)] = color;
	Result[int2(xPos + 16, yPos - 18)] = color;
	Result[int2(xPos + 17, yPos - 18)] = color;
	Result[int2(xPos + 78, yPos - 18)] = color;
	Result[int2(xPos + 79, yPos - 18)] = color;
	Result[int2(xPos + 81, yPos - 18)] = color;
	Result[int2(xPos + 82, yPos - 18)] = color;
	Result[int2(xPos + 83, yPos - 18)] = color;
	Result[int2(xPos + 84, yPos - 18)] = color;
	Result[int2(xPos + 14, yPos - 19)] = color;
	Result[int2(xPos + 15, yPos - 19)] = color;
	Result[int2(xPos + 16, yPos - 19)] = color;
	Result[int2(xPos + 17, yPos - 19)] = color;
	Result[int2(xPos + 18, yPos - 19)] = color;
	Result[int2(xPos + 79, yPos - 19)] = color;
	Result[int2(xPos + 80, yPos - 19)] = color;
	Result[int2(xPos + 13, yPos - 20)] = color;
	Result[int2(xPos + 14, yPos - 20)] = color;
	Result[int2(xPos + 16, yPos - 20)] = color;
	Result[int2(xPos + 17, yPos - 20)] = color;
	Result[int2(xPos + 18, yPos - 20)] = color;
	Result[int2(xPos + 14, yPos - 21)] = color;
	Result[int2(xPos + 15, yPos - 21)] = color;
	Result[int2(xPos + 88, yPos - 24)] = color;
	Result[int2(xPos + 89, yPos - 24)] = color;
	Result[int2(xPos + 87, yPos - 25)] = color;
	Result[int2(xPos + 88, yPos - 25)] = color;
	Result[int2(xPos + 90, yPos - 25)] = color;
	Result[int2(xPos + 91, yPos - 25)] = color;
	Result[int2(xPos + 92, yPos - 25)] = color;
	Result[int2(xPos + 93, yPos - 25)] = color;
	Result[int2(xPos + 88, yPos - 26)] = color;
	Result[int2(xPos + 89, yPos - 26)] = color;
	Result[int2(xPos + 90, yPos - 26)] = color;
	Result[int2(xPos + 91, yPos - 26)] = color;
	Result[int2(xPos + 92, yPos - 26)] = color;
	Result[int2(xPos + 93, yPos - 26)] = color;
	Result[int2(xPos + 89, yPos - 27)] = color;
	Result[int2(xPos + 90, yPos - 27)] = color;
	Result[int2(xPos + 91, yPos - 27)] = color;
	Result[int2(xPos + 92, yPos - 27)] = color;
	Result[int2(xPos + 103, yPos - 31)] = color;
	Result[int2(xPos + 104, yPos - 31)] = color;
	Result[int2(xPos + 102, yPos - 32)] = color;
	Result[int2(xPos + 103, yPos - 32)] = color;
	Result[int2(xPos + 105, yPos - 32)] = color;
	Result[int2(xPos + 106, yPos - 32)] = color;
	Result[int2(xPos + 107, yPos - 32)] = color;
	Result[int2(xPos + 108, yPos - 32)] = color;
	Result[int2(xPos + 103, yPos - 33)] = color;
	Result[int2(xPos + 104, yPos - 33)] = color;
	Result[int2(xPos + 105, yPos - 33)] = color;
	Result[int2(xPos + 106, yPos - 33)] = color;
	Result[int2(xPos + 107, yPos - 33)] = color;
	Result[int2(xPos + 108, yPos - 33)] = color;
	Result[int2(xPos + 104, yPos - 34)] = color;
	Result[int2(xPos + 105, yPos - 34)] = color;
	Result[int2(xPos + 106, yPos - 34)] = color;
	Result[int2(xPos + 107, yPos - 34)] = color;
	Result[int2(xPos + 180, yPos - 75)] = color;
	Result[int2(xPos + 179, yPos - 76)] = color;
	Result[int2(xPos + 179, yPos - 77)] = color;
	Result[int2(xPos + 180, yPos - 77)] = color;
	Result[int2(xPos + 181, yPos - 77)] = color;
}