#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos + 3, yPos)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos + 3, yPos - 1)] = color;
	Result[int2(xPos + 11, yPos - 3)] = color;
	Result[int2(xPos + 12, yPos - 3)] = color;
	Result[int2(xPos + 11, yPos - 4)] = color;
	Result[int2(xPos + 12, yPos - 4)] = color;
	Result[int2(xPos + 1, yPos - 6)] = color;
	Result[int2(xPos + 1, yPos - 7)] = color;
	Result[int2(xPos + 2, yPos - 7)] = color;
	Result[int2(xPos, yPos - 8)] = color;
	Result[int2(xPos + 1, yPos - 8)] = color;
	Result[int2(xPos + 11, yPos - 8)] = color;
	Result[int2(xPos + 12, yPos - 8)] = color;
	Result[int2(xPos + 11, yPos - 9)] = color;
	Result[int2(xPos + 12, yPos - 9)] = color;
	Result[int2(xPos + 1, yPos - 15)] = color;
	Result[int2(xPos + 2, yPos - 15)] = color;
	Result[int2(xPos + 1, yPos - 16)] = color;
	Result[int2(xPos + 2, yPos - 16)] = color;
	Result[int2(xPos + 12, yPos - 19)] = color;
	Result[int2(xPos + 13, yPos - 19)] = color;
	Result[int2(xPos + 14, yPos - 19)] = color;
	Result[int2(xPos + 12, yPos - 20)] = color;
	Result[int2(xPos + 11, yPos - 21)] = color;
	Result[int2(xPos + 12, yPos - 21)] = color;
}