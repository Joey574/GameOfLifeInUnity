#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 24, yPos)] = color;
	Result[int2(xPos + 25, yPos)] = color;
	Result[int2(xPos + 84, yPos)] = color;
	Result[int2(xPos + 85, yPos)] = color;
	Result[int2(xPos + 24, yPos - 1)] = color;
	Result[int2(xPos + 25, yPos - 1)] = color;
	Result[int2(xPos + 84, yPos - 1)] = color;
	Result[int2(xPos + 85, yPos - 1)] = color;
	Result[int2(xPos + 31, yPos - 7)] = color;
	Result[int2(xPos + 32, yPos - 7)] = color;
	Result[int2(xPos + 91, yPos - 7)] = color;
	Result[int2(xPos + 92, yPos - 7)] = color;
	Result[int2(xPos + 31, yPos - 8)] = color;
	Result[int2(xPos + 91, yPos - 8)] = color;
	Result[int2(xPos + 29, yPos - 9)] = color;
	Result[int2(xPos + 31, yPos - 9)] = color;
	Result[int2(xPos + 89, yPos - 9)] = color;
	Result[int2(xPos + 91, yPos - 9)] = color;
	Result[int2(xPos + 29, yPos - 10)] = color;
	Result[int2(xPos + 30, yPos - 10)] = color;
	Result[int2(xPos + 89, yPos - 10)] = color;
	Result[int2(xPos + 90, yPos - 10)] = color;
	Result[int2(xPos + 1, yPos - 13)] = color;
	Result[int2(xPos + 2, yPos - 13)] = color;
	Result[int2(xPos + 64, yPos - 13)] = color;
	Result[int2(xPos, yPos - 14)] = color;
	Result[int2(xPos + 1, yPos - 14)] = color;
	Result[int2(xPos + 2, yPos - 14)] = color;
	Result[int2(xPos + 4, yPos - 14)] = color;
	Result[int2(xPos + 5, yPos - 14)] = color;
	Result[int2(xPos + 64, yPos - 14)] = color;
	Result[int2(xPos + 1, yPos - 15)] = color;
	Result[int2(xPos + 2, yPos - 15)] = color;
	Result[int2(xPos + 4, yPos - 15)] = color;
	Result[int2(xPos + 5, yPos - 15)] = color;
	Result[int2(xPos + 6, yPos - 15)] = color;
	Result[int2(xPos + 8, yPos - 15)] = color;
	Result[int2(xPos + 9, yPos - 15)] = color;
	Result[int2(xPos + 64, yPos - 15)] = color;
	Result[int2(xPos + 65, yPos - 15)] = color;
	Result[int2(xPos + 66, yPos - 15)] = color;
	Result[int2(xPos + 68, yPos - 15)] = color;
	Result[int2(xPos + 69, yPos - 15)] = color;
	Result[int2(xPos, yPos - 16)] = color;
	Result[int2(xPos + 1, yPos - 16)] = color;
	Result[int2(xPos + 2, yPos - 16)] = color;
	Result[int2(xPos + 4, yPos - 16)] = color;
	Result[int2(xPos + 5, yPos - 16)] = color;
	Result[int2(xPos + 8, yPos - 16)] = color;
	Result[int2(xPos + 9, yPos - 16)] = color;
	Result[int2(xPos + 41, yPos - 16)] = color;
	Result[int2(xPos + 66, yPos - 16)] = color;
	Result[int2(xPos + 68, yPos - 16)] = color;
	Result[int2(xPos + 69, yPos - 16)] = color;
	Result[int2(xPos + 101, yPos - 16)] = color;
	Result[int2(xPos, yPos - 17)] = color;
	Result[int2(xPos + 1, yPos - 17)] = color;
	Result[int2(xPos + 39, yPos - 17)] = color;
	Result[int2(xPos + 40, yPos - 17)] = color;
	Result[int2(xPos + 41, yPos - 17)] = color;
	Result[int2(xPos + 99, yPos - 17)] = color;
	Result[int2(xPos + 100, yPos - 17)] = color;
	Result[int2(xPos + 101, yPos - 17)] = color;
	Result[int2(xPos + 38, yPos - 18)] = color;
	Result[int2(xPos + 98, yPos - 18)] = color;
	Result[int2(xPos + 38, yPos - 19)] = color;
	Result[int2(xPos + 39, yPos - 19)] = color;
	Result[int2(xPos + 98, yPos - 19)] = color;
	Result[int2(xPos + 99, yPos - 19)] = color;
	Result[int2(xPos + 19, yPos - 33)] = color;
	Result[int2(xPos + 20, yPos - 33)] = color;
	Result[int2(xPos + 79, yPos - 33)] = color;
	Result[int2(xPos + 80, yPos - 33)] = color;
	Result[int2(xPos + 19, yPos - 34)] = color;
	Result[int2(xPos + 20, yPos - 34)] = color;
	Result[int2(xPos + 79, yPos - 34)] = color;
	Result[int2(xPos + 80, yPos - 34)] = color;
	Result[int2(xPos + 36, yPos - 41)] = color;
	Result[int2(xPos + 37, yPos - 41)] = color;
	Result[int2(xPos + 96, yPos - 41)] = color;
	Result[int2(xPos + 97, yPos - 41)] = color;
	Result[int2(xPos + 36, yPos - 42)] = color;
	Result[int2(xPos + 96, yPos - 42)] = color;
	Result[int2(xPos + 37, yPos - 43)] = color;
	Result[int2(xPos + 38, yPos - 43)] = color;
	Result[int2(xPos + 39, yPos - 43)] = color;
	Result[int2(xPos + 97, yPos - 43)] = color;
	Result[int2(xPos + 98, yPos - 43)] = color;
	Result[int2(xPos + 99, yPos - 43)] = color;
	Result[int2(xPos + 39, yPos - 44)] = color;
	Result[int2(xPos + 99, yPos - 44)] = color;
	Result[int2(xPos + 18, yPos - 47)] = color;
	Result[int2(xPos + 20, yPos - 47)] = color;
	Result[int2(xPos + 21, yPos - 47)] = color;
	Result[int2(xPos + 78, yPos - 47)] = color;
	Result[int2(xPos + 80, yPos - 47)] = color;
	Result[int2(xPos + 81, yPos - 47)] = color;
	Result[int2(xPos + 18, yPos - 48)] = color;
	Result[int2(xPos + 19, yPos - 48)] = color;
	Result[int2(xPos + 21, yPos - 48)] = color;
	Result[int2(xPos + 78, yPos - 48)] = color;
	Result[int2(xPos + 79, yPos - 48)] = color;
	Result[int2(xPos + 81, yPos - 48)] = color;
	Result[int2(xPos + 27, yPos - 50)] = color;
	Result[int2(xPos + 28, yPos - 50)] = color;
	Result[int2(xPos + 87, yPos - 50)] = color;
	Result[int2(xPos + 88, yPos - 50)] = color;
	Result[int2(xPos + 27, yPos - 51)] = color;
	Result[int2(xPos + 28, yPos - 51)] = color;
	Result[int2(xPos + 87, yPos - 51)] = color;
	Result[int2(xPos + 88, yPos - 51)] = color;
	Result[int2(xPos + 27, yPos - 67)] = color;
	Result[int2(xPos + 28, yPos - 67)] = color;
	Result[int2(xPos + 29, yPos - 67)] = color;
	Result[int2(xPos + 87, yPos - 67)] = color;
	Result[int2(xPos + 88, yPos - 67)] = color;
	Result[int2(xPos + 89, yPos - 67)] = color;
	Result[int2(xPos + 29, yPos - 68)] = color;
	Result[int2(xPos + 89, yPos - 68)] = color;
	Result[int2(xPos + 29, yPos - 69)] = color;
	Result[int2(xPos + 30, yPos - 69)] = color;
	Result[int2(xPos + 89, yPos - 69)] = color;
	Result[int2(xPos + 90, yPos - 69)] = color;
}