#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 24)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 24)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 25)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 84)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 85)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 7)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 8)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 31)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 15)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 66)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 101)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 41)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 42)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 97)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 43)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 44)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 20)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 80)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 78)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 79)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 81)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 27)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 28)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 67)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 68)) * yMult)] = color;
	Result[int2((xPos + 29)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 30)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 69)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 69)) * yMult)] = color;
}