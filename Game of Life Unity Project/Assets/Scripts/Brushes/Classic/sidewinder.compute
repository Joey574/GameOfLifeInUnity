#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos + 14, yPos)] = color;
	Result[int2(xPos + 15, yPos)] = color;
	Result[int2(xPos + 16, yPos)] = color;
	Result[int2(xPos, yPos - 1)] = color;
	Result[int2(xPos + 3, yPos - 1)] = color;
	Result[int2(xPos + 14, yPos - 1)] = color;
	Result[int2(xPos + 17, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 7, yPos - 2)] = color;
	Result[int2(xPos + 8, yPos - 2)] = color;
	Result[int2(xPos + 9, yPos - 2)] = color;
	Result[int2(xPos + 14, yPos - 2)] = color;
	Result[int2(xPos, yPos - 3)] = color;
	Result[int2(xPos + 6, yPos - 3)] = color;
	Result[int2(xPos + 9, yPos - 3)] = color;
	Result[int2(xPos + 14, yPos - 3)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 3, yPos - 4)] = color;
	Result[int2(xPos + 6, yPos - 4)] = color;
	Result[int2(xPos + 7, yPos - 4)] = color;
	Result[int2(xPos + 9, yPos - 4)] = color;
	Result[int2(xPos + 15, yPos - 4)] = color;
	Result[int2(xPos + 17, yPos - 4)] = color;
	Result[int2(xPos + 7, yPos - 8)] = color;
	Result[int2(xPos + 8, yPos - 9)] = color;
	Result[int2(xPos + 6, yPos - 10)] = color;
	Result[int2(xPos + 9, yPos - 10)] = color;
	Result[int2(xPos + 6, yPos - 11)] = color;
	Result[int2(xPos + 8, yPos - 11)] = color;
}