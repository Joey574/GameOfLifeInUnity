#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 92, yPos)] = color;
	Result[int2(xPos + 93, yPos)] = color;
	Result[int2(xPos + 44, yPos - 1)] = color;
	Result[int2(xPos + 93, yPos - 1)] = color;
	Result[int2(xPos + 44, yPos - 2)] = color;
	Result[int2(xPos + 45, yPos - 2)] = color;
	Result[int2(xPos + 46, yPos - 2)] = color;
	Result[int2(xPos + 52, yPos - 2)] = color;
	Result[int2(xPos + 53, yPos - 2)] = color;
	Result[int2(xPos + 92, yPos - 2)] = color;
	Result[int2(xPos + 47, yPos - 3)] = color;
	Result[int2(xPos + 52, yPos - 3)] = color;
	Result[int2(xPos + 53, yPos - 3)] = color;
	Result[int2(xPos + 92, yPos - 3)] = color;
	Result[int2(xPos + 93, yPos - 3)] = color;
	Result[int2(xPos + 46, yPos - 4)] = color;
	Result[int2(xPos + 47, yPos - 4)] = color;
	Result[int2(xPos + 123, yPos - 5)] = color;
	Result[int2(xPos + 122, yPos - 6)] = color;
	Result[int2(xPos + 124, yPos - 6)] = color;
	Result[int2(xPos + 47, yPos - 7)] = color;
	Result[int2(xPos + 48, yPos - 7)] = color;
	Result[int2(xPos + 122, yPos - 7)] = color;
	Result[int2(xPos + 124, yPos - 7)] = color;
	Result[int2(xPos + 47, yPos - 8)] = color;
	Result[int2(xPos + 48, yPos - 8)] = color;
	Result[int2(xPos + 52, yPos - 8)] = color;
	Result[int2(xPos + 53, yPos - 8)] = color;
	Result[int2(xPos + 67, yPos - 8)] = color;
	Result[int2(xPos + 68, yPos - 8)] = color;
	Result[int2(xPos + 123, yPos - 8)] = color;
	Result[int2(xPos + 52, yPos - 9)] = color;
	Result[int2(xPos + 53, yPos - 9)] = color;
	Result[int2(xPos + 67, yPos - 9)] = color;
	Result[int2(xPos + 68, yPos - 9)] = color;
	Result[int2(xPos + 95, yPos - 9)] = color;
	Result[int2(xPos + 96, yPos - 9)] = color;
	Result[int2(xPos + 112, yPos - 9)] = color;
	Result[int2(xPos + 95, yPos - 10)] = color;
	Result[int2(xPos + 96, yPos - 10)] = color;
	Result[int2(xPos + 112, yPos - 10)] = color;
	Result[int2(xPos + 112, yPos - 11)] = color;
	Result[int2(xPos + 113, yPos - 11)] = color;
	Result[int2(xPos + 114, yPos - 11)] = color;
	Result[int2(xPos + 114, yPos - 12)] = color;
	Result[int2(xPos + 22, yPos - 14)] = color;
	Result[int2(xPos + 20, yPos - 15)] = color;
	Result[int2(xPos + 21, yPos - 15)] = color;
	Result[int2(xPos + 22, yPos - 15)] = color;
	Result[int2(xPos + 4, yPos - 16)] = color;
	Result[int2(xPos + 19, yPos - 16)] = color;
	Result[int2(xPos + 65, yPos - 16)] = color;
	Result[int2(xPos + 66, yPos - 16)] = color;
	Result[int2(xPos + 4, yPos - 17)] = color;
	Result[int2(xPos + 5, yPos - 17)] = color;
	Result[int2(xPos + 6, yPos - 17)] = color;
	Result[int2(xPos + 19, yPos - 17)] = color;
	Result[int2(xPos + 20, yPos - 17)] = color;
	Result[int2(xPos + 64, yPos - 17)] = color;
	Result[int2(xPos + 66, yPos - 17)] = color;
	Result[int2(xPos + 105, yPos - 17)] = color;
	Result[int2(xPos + 106, yPos - 17)] = color;
	Result[int2(xPos + 7, yPos - 18)] = color;
	Result[int2(xPos + 64, yPos - 18)] = color;
	Result[int2(xPos + 106, yPos - 18)] = color;
	Result[int2(xPos + 6, yPos - 19)] = color;
	Result[int2(xPos + 7, yPos - 19)] = color;
	Result[int2(xPos + 63, yPos - 19)] = color;
	Result[int2(xPos + 64, yPos - 19)] = color;
	Result[int2(xPos + 90, yPos - 19)] = color;
	Result[int2(xPos + 91, yPos - 19)] = color;
	Result[int2(xPos + 103, yPos - 19)] = color;
	Result[int2(xPos + 104, yPos - 19)] = color;
	Result[int2(xPos + 105, yPos - 19)] = color;
	Result[int2(xPos + 90, yPos - 20)] = color;
	Result[int2(xPos + 91, yPos - 20)] = color;
	Result[int2(xPos + 103, yPos - 20)] = color;
	Result[int2(xPos + 7, yPos - 22)] = color;
	Result[int2(xPos + 8, yPos - 22)] = color;
	Result[int2(xPos + 7, yPos - 23)] = color;
	Result[int2(xPos + 8, yPos - 23)] = color;
	Result[int2(xPos + 26, yPos - 23)] = color;
	Result[int2(xPos + 27, yPos - 23)] = color;
	Result[int2(xPos + 76, yPos - 23)] = color;
	Result[int2(xPos + 77, yPos - 23)] = color;
	Result[int2(xPos + 26, yPos - 24)] = color;
	Result[int2(xPos + 27, yPos - 24)] = color;
	Result[int2(xPos + 77, yPos - 24)] = color;
	Result[int2(xPos + 74, yPos - 25)] = color;
	Result[int2(xPos + 75, yPos - 25)] = color;
	Result[int2(xPos + 76, yPos - 25)] = color;
	Result[int2(xPos + 74, yPos - 26)] = color;
	Result[int2(xPos + 86, yPos - 27)] = color;
	Result[int2(xPos + 87, yPos - 27)] = color;
	Result[int2(xPos + 86, yPos - 28)] = color;
	Result[int2(xPos + 87, yPos - 29)] = color;
	Result[int2(xPos + 88, yPos - 29)] = color;
	Result[int2(xPos + 89, yPos - 29)] = color;
	Result[int2(xPos + 23, yPos - 30)] = color;
	Result[int2(xPos + 24, yPos - 30)] = color;
	Result[int2(xPos + 89, yPos - 30)] = color;
	Result[int2(xPos + 23, yPos - 31)] = color;
	Result[int2(xPos + 25, yPos - 32)] = color;
	Result[int2(xPos + 24, yPos - 33)] = color;
	Result[int2(xPos + 25, yPos - 33)] = color;
	Result[int2(xPos + 20, yPos - 34)] = color;
	Result[int2(xPos + 21, yPos - 34)] = color;
	Result[int2(xPos + 20, yPos - 35)] = color;
	Result[int2(xPos + 21, yPos - 36)] = color;
	Result[int2(xPos + 22, yPos - 36)] = color;
	Result[int2(xPos + 23, yPos - 36)] = color;
	Result[int2(xPos + 23, yPos - 37)] = color;
	Result[int2(xPos + 29, yPos - 43)] = color;
	Result[int2(xPos + 30, yPos - 43)] = color;
	Result[int2(xPos + 29, yPos - 44)] = color;
	Result[int2(xPos + 10, yPos - 45)] = color;
	Result[int2(xPos + 11, yPos - 45)] = color;
	Result[int2(xPos + 27, yPos - 45)] = color;
	Result[int2(xPos + 29, yPos - 45)] = color;
	Result[int2(xPos + 10, yPos - 46)] = color;
	Result[int2(xPos + 11, yPos - 46)] = color;
	Result[int2(xPos + 27, yPos - 46)] = color;
	Result[int2(xPos + 28, yPos - 46)] = color;
	Result[int2(xPos + 9, yPos - 58)] = color;
	Result[int2(xPos + 10, yPos - 58)] = color;
	Result[int2(xPos + 8, yPos - 59)] = color;
	Result[int2(xPos + 10, yPos - 59)] = color;
	Result[int2(xPos + 8, yPos - 60)] = color;
	Result[int2(xPos + 7, yPos - 61)] = color;
	Result[int2(xPos + 8, yPos - 61)] = color;
	Result[int2(xPos + 19, yPos - 70)] = color;
	Result[int2(xPos + 20, yPos - 70)] = color;
	Result[int2(xPos + 19, yPos - 71)] = color;
	Result[int2(xPos + 20, yPos - 71)] = color;
	Result[int2(xPos + 8, yPos - 77)] = color;
	Result[int2(xPos + 9, yPos - 77)] = color;
	Result[int2(xPos + 9, yPos - 78)] = color;
	Result[int2(xPos + 29, yPos - 78)] = color;
	Result[int2(xPos + 30, yPos - 78)] = color;
	Result[int2(xPos + 9, yPos - 79)] = color;
	Result[int2(xPos + 11, yPos - 79)] = color;
	Result[int2(xPos + 29, yPos - 79)] = color;
	Result[int2(xPos + 10, yPos - 80)] = color;
	Result[int2(xPos + 11, yPos - 80)] = color;
	Result[int2(xPos + 27, yPos - 80)] = color;
	Result[int2(xPos + 29, yPos - 80)] = color;
	Result[int2(xPos + 22, yPos - 81)] = color;
	Result[int2(xPos + 27, yPos - 81)] = color;
	Result[int2(xPos + 28, yPos - 81)] = color;
	Result[int2(xPos + 21, yPos - 82)] = color;
	Result[int2(xPos + 23, yPos - 82)] = color;
	Result[int2(xPos + 21, yPos - 83)] = color;
	Result[int2(xPos + 23, yPos - 83)] = color;
	Result[int2(xPos + 10, yPos - 84)] = color;
	Result[int2(xPos + 11, yPos - 84)] = color;
	Result[int2(xPos + 22, yPos - 84)] = color;
	Result[int2(xPos + 9, yPos - 85)] = color;
	Result[int2(xPos + 11, yPos - 85)] = color;
	Result[int2(xPos + 9, yPos - 86)] = color;
	Result[int2(xPos + 8, yPos - 87)] = color;
	Result[int2(xPos + 9, yPos - 87)] = color;
	Result[int2(xPos + 23, yPos - 88)] = color;
	Result[int2(xPos + 24, yPos - 88)] = color;
	Result[int2(xPos + 23, yPos - 89)] = color;
	Result[int2(xPos + 24, yPos - 90)] = color;
	Result[int2(xPos + 25, yPos - 90)] = color;
	Result[int2(xPos + 26, yPos - 90)] = color;
	Result[int2(xPos + 26, yPos - 91)] = color;
	Result[int2(xPos + 1, yPos - 99)] = color;
	Result[int2(xPos + 2, yPos - 99)] = color;
	Result[int2(xPos, yPos - 100)] = color;
	Result[int2(xPos + 2, yPos - 100)] = color;
	Result[int2(xPos + 2, yPos - 101)] = color;
}