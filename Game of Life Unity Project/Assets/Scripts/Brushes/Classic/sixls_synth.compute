#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 69)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 67)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 92)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 76)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 12)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 13)) * yMult)] = color;
	Result[int2((xPos + 98)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 99)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 100)) * xMult), (yPos - 14)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 23)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 21)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 22)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 25)) * yMult)] = color;
	Result[int2((xPos + 17)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 26)) * yMult)] = color;
	Result[int2((xPos + 18)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 19)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 48)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 51)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 91)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 27)) * yMult)] = color;
	Result[int2((xPos + 49)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 50)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 90)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 104)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 28)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 102)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 122)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 29)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 93)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 103)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 118)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 125)) * xMult), (yPos - 30)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 68)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 31)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 69)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 119)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 32)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 32)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 75)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 120)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 121)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 123)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 124)) * xMult), (yPos - 33)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 6)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 33)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 34)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 34)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 35)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 36)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 37)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 38)) * yMult)] = color;
	Result[int2((xPos + 63)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 65)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 64)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 87)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 88)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 70)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 89)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 60)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 61)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 50)) * yMult)] = color;
	Result[int2((xPos + 59)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 51)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 95)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 96)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 94)) * xMult), (yPos - 60)) * yMult)] = color;
}