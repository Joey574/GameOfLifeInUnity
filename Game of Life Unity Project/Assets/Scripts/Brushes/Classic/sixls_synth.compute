#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 69, yPos)] = color;
	Result[int2(xPos + 67, yPos - 1)] = color;
	Result[int2(xPos + 69, yPos - 1)] = color;
	Result[int2(xPos + 68, yPos - 2)] = color;
	Result[int2(xPos + 69, yPos - 2)] = color;
	Result[int2(xPos + 92, yPos - 9)] = color;
	Result[int2(xPos + 104, yPos - 9)] = color;
	Result[int2(xPos + 91, yPos - 10)] = color;
	Result[int2(xPos + 102, yPos - 10)] = color;
	Result[int2(xPos + 103, yPos - 10)] = color;
	Result[int2(xPos + 74, yPos - 11)] = color;
	Result[int2(xPos + 91, yPos - 11)] = color;
	Result[int2(xPos + 92, yPos - 11)] = color;
	Result[int2(xPos + 93, yPos - 11)] = color;
	Result[int2(xPos + 103, yPos - 11)] = color;
	Result[int2(xPos + 104, yPos - 11)] = color;
	Result[int2(xPos + 75, yPos - 12)] = color;
	Result[int2(xPos + 76, yPos - 12)] = color;
	Result[int2(xPos + 99, yPos - 12)] = color;
	Result[int2(xPos + 74, yPos - 13)] = color;
	Result[int2(xPos + 75, yPos - 13)] = color;
	Result[int2(xPos + 98, yPos - 13)] = color;
	Result[int2(xPos + 98, yPos - 14)] = color;
	Result[int2(xPos + 99, yPos - 14)] = color;
	Result[int2(xPos + 100, yPos - 14)] = color;
	Result[int2(xPos + 21, yPos - 22)] = color;
	Result[int2(xPos + 21, yPos - 23)] = color;
	Result[int2(xPos + 23, yPos - 23)] = color;
	Result[int2(xPos + 21, yPos - 24)] = color;
	Result[int2(xPos + 22, yPos - 24)] = color;
	Result[int2(xPos + 19, yPos - 25)] = color;
	Result[int2(xPos + 17, yPos - 26)] = color;
	Result[int2(xPos + 19, yPos - 26)] = color;
	Result[int2(xPos + 49, yPos - 26)] = color;
	Result[int2(xPos + 50, yPos - 26)] = color;
	Result[int2(xPos + 89, yPos - 26)] = color;
	Result[int2(xPos + 90, yPos - 26)] = color;
	Result[int2(xPos + 18, yPos - 27)] = color;
	Result[int2(xPos + 19, yPos - 27)] = color;
	Result[int2(xPos + 48, yPos - 27)] = color;
	Result[int2(xPos + 51, yPos - 27)] = color;
	Result[int2(xPos + 88, yPos - 27)] = color;
	Result[int2(xPos + 91, yPos - 27)] = color;
	Result[int2(xPos + 119, yPos - 27)] = color;
	Result[int2(xPos + 120, yPos - 27)] = color;
	Result[int2(xPos + 122, yPos - 27)] = color;
	Result[int2(xPos + 123, yPos - 27)] = color;
	Result[int2(xPos + 49, yPos - 28)] = color;
	Result[int2(xPos + 50, yPos - 28)] = color;
	Result[int2(xPos + 89, yPos - 28)] = color;
	Result[int2(xPos + 90, yPos - 28)] = color;
	Result[int2(xPos + 93, yPos - 28)] = color;
	Result[int2(xPos + 94, yPos - 28)] = color;
	Result[int2(xPos + 102, yPos - 28)] = color;
	Result[int2(xPos + 103, yPos - 28)] = color;
	Result[int2(xPos + 104, yPos - 28)] = color;
	Result[int2(xPos + 120, yPos - 28)] = color;
	Result[int2(xPos + 122, yPos - 28)] = color;
	Result[int2(xPos + 124, yPos - 28)] = color;
	Result[int2(xPos + 93, yPos - 29)] = color;
	Result[int2(xPos + 95, yPos - 29)] = color;
	Result[int2(xPos + 102, yPos - 29)] = color;
	Result[int2(xPos + 120, yPos - 29)] = color;
	Result[int2(xPos + 122, yPos - 29)] = color;
	Result[int2(xPos + 124, yPos - 29)] = color;
	Result[int2(xPos + 60, yPos - 30)] = color;
	Result[int2(xPos + 70, yPos - 30)] = color;
	Result[int2(xPos + 93, yPos - 30)] = color;
	Result[int2(xPos + 103, yPos - 30)] = color;
	Result[int2(xPos + 118, yPos - 30)] = color;
	Result[int2(xPos + 119, yPos - 30)] = color;
	Result[int2(xPos + 124, yPos - 30)] = color;
	Result[int2(xPos + 125, yPos - 30)] = color;
	Result[int2(xPos + 61, yPos - 31)] = color;
	Result[int2(xPos + 68, yPos - 31)] = color;
	Result[int2(xPos + 70, yPos - 31)] = color;
	Result[int2(xPos + 119, yPos - 31)] = color;
	Result[int2(xPos + 121, yPos - 31)] = color;
	Result[int2(xPos + 123, yPos - 31)] = color;
	Result[int2(xPos + 33, yPos - 32)] = color;
	Result[int2(xPos + 34, yPos - 32)] = color;
	Result[int2(xPos + 59, yPos - 32)] = color;
	Result[int2(xPos + 60, yPos - 32)] = color;
	Result[int2(xPos + 61, yPos - 32)] = color;
	Result[int2(xPos + 69, yPos - 32)] = color;
	Result[int2(xPos + 70, yPos - 32)] = color;
	Result[int2(xPos + 73, yPos - 32)] = color;
	Result[int2(xPos + 74, yPos - 32)] = color;
	Result[int2(xPos + 119, yPos - 32)] = color;
	Result[int2(xPos + 121, yPos - 32)] = color;
	Result[int2(xPos + 123, yPos - 32)] = color;
	Result[int2(xPos + 4, yPos - 33)] = color;
	Result[int2(xPos + 5, yPos - 33)] = color;
	Result[int2(xPos + 32, yPos - 33)] = color;
	Result[int2(xPos + 35, yPos - 33)] = color;
	Result[int2(xPos + 72, yPos - 33)] = color;
	Result[int2(xPos + 75, yPos - 33)] = color;
	Result[int2(xPos + 120, yPos - 33)] = color;
	Result[int2(xPos + 121, yPos - 33)] = color;
	Result[int2(xPos + 123, yPos - 33)] = color;
	Result[int2(xPos + 124, yPos - 33)] = color;
	Result[int2(xPos + 4, yPos - 34)] = color;
	Result[int2(xPos + 6, yPos - 34)] = color;
	Result[int2(xPos + 33, yPos - 34)] = color;
	Result[int2(xPos + 34, yPos - 34)] = color;
	Result[int2(xPos + 73, yPos - 34)] = color;
	Result[int2(xPos + 74, yPos - 34)] = color;
	Result[int2(xPos + 4, yPos - 35)] = color;
	Result[int2(xPos + 1, yPos - 36)] = color;
	Result[int2(xPos + 2, yPos - 36)] = color;
	Result[int2(xPos, yPos - 37)] = color;
	Result[int2(xPos + 2, yPos - 37)] = color;
	Result[int2(xPos + 2, yPos - 38)] = color;
	Result[int2(xPos + 63, yPos - 46)] = color;
	Result[int2(xPos + 64, yPos - 46)] = color;
	Result[int2(xPos + 65, yPos - 46)] = color;
	Result[int2(xPos + 65, yPos - 47)] = color;
	Result[int2(xPos + 88, yPos - 47)] = color;
	Result[int2(xPos + 89, yPos - 47)] = color;
	Result[int2(xPos + 64, yPos - 48)] = color;
	Result[int2(xPos + 87, yPos - 48)] = color;
	Result[int2(xPos + 88, yPos - 48)] = color;
	Result[int2(xPos + 59, yPos - 49)] = color;
	Result[int2(xPos + 60, yPos - 49)] = color;
	Result[int2(xPos + 70, yPos - 49)] = color;
	Result[int2(xPos + 71, yPos - 49)] = color;
	Result[int2(xPos + 72, yPos - 49)] = color;
	Result[int2(xPos + 89, yPos - 49)] = color;
	Result[int2(xPos + 60, yPos - 50)] = color;
	Result[int2(xPos + 61, yPos - 50)] = color;
	Result[int2(xPos + 72, yPos - 50)] = color;
	Result[int2(xPos + 59, yPos - 51)] = color;
	Result[int2(xPos + 71, yPos - 51)] = color;
	Result[int2(xPos + 94, yPos - 58)] = color;
	Result[int2(xPos + 95, yPos - 58)] = color;
	Result[int2(xPos + 94, yPos - 59)] = color;
	Result[int2(xPos + 96, yPos - 59)] = color;
	Result[int2(xPos + 94, yPos - 60)] = color;
}