#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2((xPos + 143)) * xMult), (yPos) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 1)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 2)) * yMult)] = color;
	Result[int2((xPos + 39)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 40)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 41)) * xMult), (yPos - 3)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 9)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 74)) * xMult), (yPos - 10)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 11)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 16)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 58)) * xMult), (yPos - 17)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 18)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 19)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 20)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 22)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 23)) * yMult)] = color;
	Result[int2((xPos + 52)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 53)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 54)) * xMult), (yPos - 24)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 46)) * yMult)] = color;
	Result[int2((xPos + 3)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 47)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 5)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 14)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 15)) * xMult), (yPos - 48)) * yMult)] = color;
	Result[int2((xPos + 4)) * xMult), (yPos - 49)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 54)) * yMult)] = color;
	Result[int2((xPos + 1)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 55)) * yMult)] = color;
	Result[int2((xPos) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 2)) * xMult), (yPos - 56)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 57)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 13)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 38)) * xMult), (yPos - 58)) * yMult)] = color;
	Result[int2((xPos + 11)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 12)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 59)) * yMult)] = color;
	Result[int2((xPos + 72)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 78)) * yMult)] = color;
	Result[int2((xPos + 71)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 79)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 73)) * xMult), (yPos - 80)) * yMult)] = color;
	Result[int2((xPos + 9)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 10)) * xMult), (yPos - 81)) * yMult)] = color;
	Result[int2((xPos + 8)) * xMult), (yPos - 82)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 99)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 141)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 152)) * xMult), (yPos - 100)) * yMult)] = color;
	Result[int2((xPos + 139)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 151)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 153)) * xMult), (yPos - 101)) * yMult)] = color;
	Result[int2((xPos + 140)) * xMult), (yPos - 102)) * yMult)] = color;
	Result[int2((xPos + 55)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 109)) * yMult)] = color;
	Result[int2((xPos + 57)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 143)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 144)) * xMult), (yPos - 110)) * yMult)] = color;
	Result[int2((xPos + 56)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 145)) * xMult), (yPos - 111)) * yMult)] = color;
	Result[int2((xPos + 35)) * xMult), (yPos - 116)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 116)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 116)) * yMult)] = color;
	Result[int2((xPos + 37)) * xMult), (yPos - 117)) * yMult)] = color;
	Result[int2((xPos + 36)) * xMult), (yPos - 118)) * yMult)] = color;
}