#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 21, yPos)] = color;
	Result[int2(xPos + 12, yPos - 1)] = color;
	Result[int2(xPos + 14, yPos - 1)] = color;
	Result[int2(xPos + 22, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 2)] = color;
	Result[int2(xPos + 13, yPos - 2)] = color;
	Result[int2(xPos + 14, yPos - 2)] = color;
	Result[int2(xPos + 20, yPos - 2)] = color;
	Result[int2(xPos + 21, yPos - 2)] = color;
	Result[int2(xPos + 22, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 3)] = color;
	Result[int2(xPos + 2, yPos - 3)] = color;
	Result[int2(xPos + 13, yPos - 3)] = color;
	Result[int2(xPos + 1, yPos - 4)] = color;
	Result[int2(xPos + 24, yPos - 9)] = color;
	Result[int2(xPos + 22, yPos - 10)] = color;
	Result[int2(xPos + 24, yPos - 10)] = color;
	Result[int2(xPos + 131, yPos - 10)] = color;
	Result[int2(xPos + 23, yPos - 11)] = color;
	Result[int2(xPos + 24, yPos - 11)] = color;
	Result[int2(xPos + 130, yPos - 11)] = color;
	Result[int2(xPos + 130, yPos - 12)] = color;
	Result[int2(xPos + 131, yPos - 12)] = color;
	Result[int2(xPos + 132, yPos - 12)] = color;
	Result[int2(xPos + 109, yPos - 13)] = color;
	Result[int2(xPos + 108, yPos - 14)] = color;
	Result[int2(xPos + 108, yPos - 15)] = color;
	Result[int2(xPos + 109, yPos - 15)] = color;
	Result[int2(xPos + 110, yPos - 15)] = color;
	Result[int2(xPos + 24, yPos - 16)] = color;
	Result[int2(xPos + 25, yPos - 17)] = color;
	Result[int2(xPos + 23, yPos - 18)] = color;
	Result[int2(xPos + 24, yPos - 18)] = color;
	Result[int2(xPos + 25, yPos - 18)] = color;
	Result[int2(xPos + 128, yPos - 19)] = color;
	Result[int2(xPos + 126, yPos - 20)] = color;
	Result[int2(xPos + 127, yPos - 20)] = color;
	Result[int2(xPos + 127, yPos - 21)] = color;
	Result[int2(xPos + 128, yPos - 21)] = color;
	Result[int2(xPos + 53, yPos - 50)] = color;
	Result[int2(xPos + 54, yPos - 51)] = color;
	Result[int2(xPos + 55, yPos - 51)] = color;
	Result[int2(xPos + 41, yPos - 52)] = color;
	Result[int2(xPos + 53, yPos - 52)] = color;
	Result[int2(xPos + 54, yPos - 52)] = color;
	Result[int2(xPos + 39, yPos - 53)] = color;
	Result[int2(xPos + 41, yPos - 53)] = color;
	Result[int2(xPos + 40, yPos - 54)] = color;
	Result[int2(xPos + 41, yPos - 54)] = color;
	Result[int2(xPos + 53, yPos - 74)] = color;
	Result[int2(xPos + 62, yPos - 74)] = color;
	Result[int2(xPos + 63, yPos - 74)] = color;
	Result[int2(xPos + 37, yPos - 75)] = color;
	Result[int2(xPos + 38, yPos - 75)] = color;
	Result[int2(xPos + 53, yPos - 75)] = color;
	Result[int2(xPos + 54, yPos - 75)] = color;
	Result[int2(xPos + 61, yPos - 75)] = color;
	Result[int2(xPos + 63, yPos - 75)] = color;
	Result[int2(xPos + 36, yPos - 76)] = color;
	Result[int2(xPos + 38, yPos - 76)] = color;
	Result[int2(xPos + 52, yPos - 76)] = color;
	Result[int2(xPos + 54, yPos - 76)] = color;
	Result[int2(xPos + 63, yPos - 76)] = color;
	Result[int2(xPos + 83, yPos - 76)] = color;
	Result[int2(xPos + 38, yPos - 77)] = color;
	Result[int2(xPos + 82, yPos - 77)] = color;
	Result[int2(xPos + 83, yPos - 77)] = color;
	Result[int2(xPos + 82, yPos - 78)] = color;
	Result[int2(xPos + 84, yPos - 78)] = color;
	Result[int2(xPos + 64, yPos - 79)] = color;
	Result[int2(xPos + 65, yPos - 79)] = color;
	Result[int2(xPos + 64, yPos - 80)] = color;
	Result[int2(xPos + 66, yPos - 80)] = color;
	Result[int2(xPos + 45, yPos - 81)] = color;
	Result[int2(xPos + 64, yPos - 81)] = color;
	Result[int2(xPos + 45, yPos - 82)] = color;
	Result[int2(xPos + 46, yPos - 82)] = color;
	Result[int2(xPos + 44, yPos - 83)] = color;
	Result[int2(xPos + 46, yPos - 83)] = color;
	Result[int2(xPos + 18, yPos - 99)] = color;
	Result[int2(xPos + 19, yPos - 99)] = color;
	Result[int2(xPos + 19, yPos - 100)] = color;
	Result[int2(xPos + 20, yPos - 100)] = color;
	Result[int2(xPos + 36, yPos - 100)] = color;
	Result[int2(xPos + 37, yPos - 100)] = color;
	Result[int2(xPos + 38, yPos - 100)] = color;
	Result[int2(xPos + 18, yPos - 101)] = color;
	Result[int2(xPos + 38, yPos - 101)] = color;
	Result[int2(xPos + 37, yPos - 102)] = color;
	Result[int2(xPos + 8, yPos - 106)] = color;
	Result[int2(xPos + 9, yPos - 106)] = color;
	Result[int2(xPos + 10, yPos - 106)] = color;
	Result[int2(xPos + 10, yPos - 107)] = color;
	Result[int2(xPos + 9, yPos - 108)] = color;
	Result[int2(xPos + 24, yPos - 109)] = color;
	Result[int2(xPos + 25, yPos - 109)] = color;
	Result[int2(xPos + 26, yPos - 109)] = color;
	Result[int2(xPos + 26, yPos - 110)] = color;
	Result[int2(xPos + 25, yPos - 111)] = color;
	Result[int2(xPos + 19, yPos - 124)] = color;
	Result[int2(xPos + 20, yPos - 124)] = color;
	Result[int2(xPos + 18, yPos - 125)] = color;
	Result[int2(xPos + 20, yPos - 125)] = color;
	Result[int2(xPos + 20, yPos - 126)] = color;
	Result[int2(xPos + 127, yPos - 127)] = color;
	Result[int2(xPos + 128, yPos - 127)] = color;
	Result[int2(xPos + 129, yPos - 127)] = color;
	Result[int2(xPos + 127, yPos - 128)] = color;
	Result[int2(xPos + 128, yPos - 129)] = color;
}