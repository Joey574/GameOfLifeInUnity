#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 107, yPos)] = color;
	Result[int2(xPos + 108, yPos)] = color;
	Result[int2(xPos + 107, yPos - 1)] = color;
	Result[int2(xPos + 108, yPos - 1)] = color;
	Result[int2(xPos + 3, yPos - 95)] = color;
	Result[int2(xPos + 4, yPos - 95)] = color;
	Result[int2(xPos + 4, yPos - 96)] = color;
	Result[int2(xPos + 2, yPos - 97)] = color;
	Result[int2(xPos + 2, yPos - 98)] = color;
	Result[int2(xPos + 3, yPos - 98)] = color;
	Result[int2(xPos + 4, yPos - 98)] = color;
	Result[int2(xPos + 5, yPos - 98)] = color;
	Result[int2(xPos + 6, yPos - 98)] = color;
	Result[int2(xPos + 21, yPos - 98)] = color;
	Result[int2(xPos + 22, yPos - 98)] = color;
	Result[int2(xPos + 7, yPos - 99)] = color;
	Result[int2(xPos + 21, yPos - 99)] = color;
	Result[int2(xPos + 4, yPos - 100)] = color;
	Result[int2(xPos + 5, yPos - 100)] = color;
	Result[int2(xPos + 6, yPos - 100)] = color;
	Result[int2(xPos + 19, yPos - 100)] = color;
	Result[int2(xPos + 21, yPos - 100)] = color;
	Result[int2(xPos + 3, yPos - 101)] = color;
	Result[int2(xPos + 19, yPos - 101)] = color;
	Result[int2(xPos + 20, yPos - 101)] = color;
	Result[int2(xPos + 3, yPos - 102)] = color;
	Result[int2(xPos + 4, yPos - 102)] = color;
	Result[int2(xPos + 5, yPos - 102)] = color;
	Result[int2(xPos + 6, yPos - 102)] = color;
	Result[int2(xPos + 1, yPos - 103)] = color;
	Result[int2(xPos + 2, yPos - 103)] = color;
	Result[int2(xPos + 6, yPos - 103)] = color;
	Result[int2(xPos + 10, yPos - 103)] = color;
	Result[int2(xPos + 11, yPos - 103)] = color;
	Result[int2(xPos, yPos - 104)] = color;
	Result[int2(xPos + 3, yPos - 104)] = color;
	Result[int2(xPos + 4, yPos - 104)] = color;
	Result[int2(xPos + 5, yPos - 104)] = color;
	Result[int2(xPos + 10, yPos - 104)] = color;
	Result[int2(xPos + 11, yPos - 104)] = color;
	Result[int2(xPos, yPos - 105)] = color;
	Result[int2(xPos + 1, yPos - 105)] = color;
	Result[int2(xPos + 3, yPos - 105)] = color;
	Result[int2(xPos + 3, yPos - 106)] = color;
	Result[int2(xPos + 3, yPos - 107)] = color;
	Result[int2(xPos + 4, yPos - 107)] = color;
	Result[int2(xPos + 11, yPos - 110)] = color;
	Result[int2(xPos + 12, yPos - 110)] = color;
	Result[int2(xPos + 12, yPos - 111)] = color;
	Result[int2(xPos + 9, yPos - 112)] = color;
	Result[int2(xPos + 10, yPos - 112)] = color;
	Result[int2(xPos + 11, yPos - 112)] = color;
	Result[int2(xPos + 9, yPos - 113)] = color;
	Result[int2(xPos + 34, yPos - 122)] = color;
	Result[int2(xPos + 35, yPos - 122)] = color;
	Result[int2(xPos + 34, yPos - 123)] = color;
	Result[int2(xPos + 36, yPos - 123)] = color;
	Result[int2(xPos + 34, yPos - 124)] = color;
	Result[int2(xPos + 58, yPos - 145)] = color;
	Result[int2(xPos + 57, yPos - 146)] = color;
	Result[int2(xPos + 58, yPos - 146)] = color;
	Result[int2(xPos + 57, yPos - 147)] = color;
	Result[int2(xPos + 59, yPos - 147)] = color;
	Result[int2(xPos + 80, yPos - 168)] = color;
	Result[int2(xPos + 81, yPos - 168)] = color;
	Result[int2(xPos + 80, yPos - 169)] = color;
	Result[int2(xPos + 82, yPos - 169)] = color;
	Result[int2(xPos + 80, yPos - 170)] = color;
	Result[int2(xPos + 109, yPos - 198)] = color;
	Result[int2(xPos + 110, yPos - 198)] = color;
	Result[int2(xPos + 111, yPos - 198)] = color;
	Result[int2(xPos + 109, yPos - 199)] = color;
	Result[int2(xPos + 110, yPos - 200)] = color;
	Result[int2(xPos + 133, yPos - 221)] = color;
	Result[int2(xPos + 134, yPos - 221)] = color;
	Result[int2(xPos + 132, yPos - 222)] = color;
	Result[int2(xPos + 133, yPos - 222)] = color;
	Result[int2(xPos + 134, yPos - 223)] = color;
	Result[int2(xPos + 170, yPos - 259)] = color;
	Result[int2(xPos + 171, yPos - 259)] = color;
	Result[int2(xPos + 172, yPos - 259)] = color;
	Result[int2(xPos + 170, yPos - 260)] = color;
	Result[int2(xPos + 171, yPos - 261)] = color;
	Result[int2(xPos + 193, yPos - 281)] = color;
	Result[int2(xPos + 194, yPos - 281)] = color;
	Result[int2(xPos + 193, yPos - 282)] = color;
	Result[int2(xPos + 195, yPos - 282)] = color;
	Result[int2(xPos + 193, yPos - 283)] = color;
	Result[int2(xPos + 218, yPos - 306)] = color;
	Result[int2(xPos + 219, yPos - 306)] = color;
	Result[int2(xPos + 217, yPos - 307)] = color;
	Result[int2(xPos + 218, yPos - 307)] = color;
	Result[int2(xPos + 219, yPos - 308)] = color;
	Result[int2(xPos + 256, yPos - 345)] = color;
	Result[int2(xPos + 257, yPos - 345)] = color;
	Result[int2(xPos + 258, yPos - 345)] = color;
	Result[int2(xPos + 256, yPos - 346)] = color;
	Result[int2(xPos + 257, yPos - 347)] = color;
	Result[int2(xPos + 286, yPos - 375)] = color;
	Result[int2(xPos + 287, yPos - 375)] = color;
	Result[int2(xPos + 288, yPos - 375)] = color;
	Result[int2(xPos + 286, yPos - 376)] = color;
	Result[int2(xPos + 287, yPos - 377)] = color;
	Result[int2(xPos + 309, yPos - 398)] = color;
	Result[int2(xPos + 310, yPos - 398)] = color;
	Result[int2(xPos + 311, yPos - 398)] = color;
	Result[int2(xPos + 309, yPos - 399)] = color;
	Result[int2(xPos + 310, yPos - 400)] = color;
	Result[int2(xPos + 336, yPos - 425)] = color;
	Result[int2(xPos + 337, yPos - 425)] = color;
	Result[int2(xPos + 338, yPos - 425)] = color;
	Result[int2(xPos + 336, yPos - 426)] = color;
	Result[int2(xPos + 337, yPos - 427)] = color;
	Result[int2(xPos + 359, yPos - 447)] = color;
	Result[int2(xPos + 360, yPos - 447)] = color;
	Result[int2(xPos + 359, yPos - 448)] = color;
	Result[int2(xPos + 361, yPos - 448)] = color;
	Result[int2(xPos + 359, yPos - 449)] = color;
	Result[int2(xPos + 384, yPos - 473)] = color;
	Result[int2(xPos + 385, yPos - 473)] = color;
	Result[int2(xPos + 386, yPos - 473)] = color;
	Result[int2(xPos + 384, yPos - 474)] = color;
	Result[int2(xPos + 385, yPos - 475)] = color;
	Result[int2(xPos + 425, yPos - 514)] = color;
	Result[int2(xPos + 426, yPos - 514)] = color;
	Result[int2(xPos + 427, yPos - 514)] = color;
	Result[int2(xPos + 425, yPos - 515)] = color;
	Result[int2(xPos + 426, yPos - 516)] = color;
	Result[int2(xPos + 548, yPos - 636)] = color;
	Result[int2(xPos + 549, yPos - 636)] = color;
	Result[int2(xPos + 548, yPos - 637)] = color;
	Result[int2(xPos + 550, yPos - 637)] = color;
	Result[int2(xPos + 548, yPos - 638)] = color;
	Result[int2(xPos + 572, yPos - 660)] = color;
	Result[int2(xPos + 573, yPos - 660)] = color;
	Result[int2(xPos + 572, yPos - 661)] = color;
	Result[int2(xPos + 574, yPos - 661)] = color;
	Result[int2(xPos + 572, yPos - 662)] = color;
	Result[int2(xPos + 725, yPos - 813)] = color;
	Result[int2(xPos + 726, yPos - 813)] = color;
	Result[int2(xPos + 724, yPos - 814)] = color;
	Result[int2(xPos + 725, yPos - 814)] = color;
	Result[int2(xPos + 726, yPos - 815)] = color;
	Result[int2(xPos + 769, yPos - 858)] = color;
	Result[int2(xPos + 770, yPos - 858)] = color;
	Result[int2(xPos + 771, yPos - 858)] = color;
	Result[int2(xPos + 769, yPos - 859)] = color;
	Result[int2(xPos + 770, yPos - 860)] = color;
	Result[int2(xPos + 794, yPos - 882)] = color;
	Result[int2(xPos + 795, yPos - 882)] = color;
	Result[int2(xPos + 793, yPos - 883)] = color;
	Result[int2(xPos + 794, yPos - 883)] = color;
	Result[int2(xPos + 795, yPos - 884)] = color;
	Result[int2(xPos + 815, yPos - 903)] = color;
	Result[int2(xPos + 817, yPos - 904)] = color;
	Result[int2(xPos + 816, yPos - 905)] = color;
	Result[int2(xPos + 817, yPos - 905)] = color;
	Result[int2(xPos + 816, yPos - 906)] = color;
	Result[int2(xPos + 818, yPos - 906)] = color;
}