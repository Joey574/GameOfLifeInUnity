#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 1, yPos)] = color;
	Result[int2(xPos + 39, yPos)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos + 40, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 2)] = color;
	Result[int2(xPos + 38, yPos - 2)] = color;
	Result[int2(xPos + 39, yPos - 2)] = color;
	Result[int2(xPos + 40, yPos - 2)] = color;
	Result[int2(xPos + 46, yPos - 4)] = color;
	Result[int2(xPos + 48, yPos - 4)] = color;
	Result[int2(xPos + 44, yPos - 5)] = color;
	Result[int2(xPos + 48, yPos - 5)] = color;
	Result[int2(xPos + 36, yPos - 6)] = color;
	Result[int2(xPos + 44, yPos - 6)] = color;
	Result[int2(xPos + 35, yPos - 7)] = color;
	Result[int2(xPos + 36, yPos - 7)] = color;
	Result[int2(xPos + 37, yPos - 7)] = color;
	Result[int2(xPos + 38, yPos - 7)] = color;
	Result[int2(xPos + 43, yPos - 7)] = color;
	Result[int2(xPos + 48, yPos - 7)] = color;
	Result[int2(xPos + 57, yPos - 7)] = color;
	Result[int2(xPos + 58, yPos - 7)] = color;
	Result[int2(xPos + 34, yPos - 8)] = color;
	Result[int2(xPos + 35, yPos - 8)] = color;
	Result[int2(xPos + 37, yPos - 8)] = color;
	Result[int2(xPos + 39, yPos - 8)] = color;
	Result[int2(xPos + 44, yPos - 8)] = color;
	Result[int2(xPos + 57, yPos - 8)] = color;
	Result[int2(xPos + 58, yPos - 8)] = color;
	Result[int2(xPos + 23, yPos - 9)] = color;
	Result[int2(xPos + 24, yPos - 9)] = color;
	Result[int2(xPos + 33, yPos - 9)] = color;
	Result[int2(xPos + 34, yPos - 9)] = color;
	Result[int2(xPos + 35, yPos - 9)] = color;
	Result[int2(xPos + 37, yPos - 9)] = color;
	Result[int2(xPos + 40, yPos - 9)] = color;
	Result[int2(xPos + 44, yPos - 9)] = color;
	Result[int2(xPos + 48, yPos - 9)] = color;
	Result[int2(xPos + 23, yPos - 10)] = color;
	Result[int2(xPos + 24, yPos - 10)] = color;
	Result[int2(xPos + 34, yPos - 10)] = color;
	Result[int2(xPos + 35, yPos - 10)] = color;
	Result[int2(xPos + 37, yPos - 10)] = color;
	Result[int2(xPos + 39, yPos - 10)] = color;
	Result[int2(xPos + 46, yPos - 10)] = color;
	Result[int2(xPos + 48, yPos - 10)] = color;
	Result[int2(xPos + 35, yPos - 11)] = color;
	Result[int2(xPos + 36, yPos - 11)] = color;
	Result[int2(xPos + 37, yPos - 11)] = color;
	Result[int2(xPos + 38, yPos - 11)] = color;
	Result[int2(xPos + 36, yPos - 12)] = color;
	Result[int2(xPos + 45, yPos - 13)] = color;
	Result[int2(xPos + 46, yPos - 13)] = color;
	Result[int2(xPos + 47, yPos - 13)] = color;
	Result[int2(xPos + 45, yPos - 14)] = color;
	Result[int2(xPos + 47, yPos - 14)] = color;
	Result[int2(xPos + 51, yPos - 14)] = color;
	Result[int2(xPos + 52, yPos - 14)] = color;
	Result[int2(xPos + 44, yPos - 15)] = color;
	Result[int2(xPos + 45, yPos - 15)] = color;
	Result[int2(xPos + 51, yPos - 15)] = color;
	Result[int2(xPos + 54, yPos - 15)] = color;
	Result[int2(xPos + 37, yPos - 16)] = color;
	Result[int2(xPos + 39, yPos - 16)] = color;
	Result[int2(xPos + 45, yPos - 16)] = color;
	Result[int2(xPos + 55, yPos - 16)] = color;
	Result[int2(xPos + 62, yPos - 16)] = color;
	Result[int2(xPos + 63, yPos - 16)] = color;
	Result[int2(xPos + 35, yPos - 17)] = color;
	Result[int2(xPos + 39, yPos - 17)] = color;
	Result[int2(xPos + 42, yPos - 17)] = color;
	Result[int2(xPos + 43, yPos - 17)] = color;
	Result[int2(xPos + 55, yPos - 17)] = color;
	Result[int2(xPos + 62, yPos - 17)] = color;
	Result[int2(xPos + 63, yPos - 17)] = color;
	Result[int2(xPos + 28, yPos - 18)] = color;
	Result[int2(xPos + 29, yPos - 18)] = color;
	Result[int2(xPos + 35, yPos - 18)] = color;
	Result[int2(xPos + 46, yPos - 18)] = color;
	Result[int2(xPos + 55, yPos - 18)] = color;
	Result[int2(xPos + 28, yPos - 19)] = color;
	Result[int2(xPos + 29, yPos - 19)] = color;
	Result[int2(xPos + 34, yPos - 19)] = color;
	Result[int2(xPos + 39, yPos - 19)] = color;
	Result[int2(xPos + 47, yPos - 19)] = color;
	Result[int2(xPos + 48, yPos - 19)] = color;
	Result[int2(xPos + 51, yPos - 19)] = color;
	Result[int2(xPos + 54, yPos - 19)] = color;
	Result[int2(xPos + 35, yPos - 20)] = color;
	Result[int2(xPos + 43, yPos - 20)] = color;
	Result[int2(xPos + 45, yPos - 20)] = color;
	Result[int2(xPos + 48, yPos - 20)] = color;
	Result[int2(xPos + 51, yPos - 20)] = color;
	Result[int2(xPos + 52, yPos - 20)] = color;
	Result[int2(xPos + 35, yPos - 21)] = color;
	Result[int2(xPos + 39, yPos - 21)] = color;
	Result[int2(xPos + 45, yPos - 21)] = color;
	Result[int2(xPos + 46, yPos - 21)] = color;
	Result[int2(xPos + 47, yPos - 21)] = color;
	Result[int2(xPos + 37, yPos - 22)] = color;
	Result[int2(xPos + 39, yPos - 22)] = color;
}