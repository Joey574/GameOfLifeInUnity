#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (35 * xMult), yPos)] = color;
	Result[int2(xPos + (36 * xMult), yPos)] = color;
	Result[int2(xPos + (35 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (35 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (33 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (34 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (5 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (6 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (29 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (30 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (9 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos, yPos - (15 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos, yPos - (16 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos, yPos - (17 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (18 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (35 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (36 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (37 * yMult))] = color;
	Result[int2(xPos + (10 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (12 * xMult), yPos - (38 * yMult))] = color;
	Result[int2(xPos + (11 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (39 * yMult))] = color;
	Result[int2(xPos, yPos - (40 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (39 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (40 * yMult))] = color;
	Result[int2(xPos, yPos - (41 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos + (40 * xMult), yPos - (41 * yMult))] = color;
	Result[int2(xPos, yPos - (42 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (25 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (26 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (42 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (43 * yMult))] = color;
	Result[int2(xPos + (27 * xMult), yPos - (43 * yMult))] = color;
}