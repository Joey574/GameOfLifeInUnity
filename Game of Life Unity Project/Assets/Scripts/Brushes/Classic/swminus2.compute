#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 35, yPos)] = color;
	Result[int2(xPos + 36, yPos)] = color;
	Result[int2(xPos + 35, yPos - 1)] = color;
	Result[int2(xPos + 33, yPos - 2)] = color;
	Result[int2(xPos + 35, yPos - 2)] = color;
	Result[int2(xPos + 29, yPos - 3)] = color;
	Result[int2(xPos + 30, yPos - 3)] = color;
	Result[int2(xPos + 33, yPos - 3)] = color;
	Result[int2(xPos + 34, yPos - 3)] = color;
	Result[int2(xPos + 29, yPos - 4)] = color;
	Result[int2(xPos + 30, yPos - 4)] = color;
	Result[int2(xPos + 5, yPos - 5)] = color;
	Result[int2(xPos + 6, yPos - 5)] = color;
	Result[int2(xPos + 5, yPos - 6)] = color;
	Result[int2(xPos + 6, yPos - 6)] = color;
	Result[int2(xPos + 29, yPos - 7)] = color;
	Result[int2(xPos + 30, yPos - 7)] = color;
	Result[int2(xPos + 29, yPos - 8)] = color;
	Result[int2(xPos + 30, yPos - 8)] = color;
	Result[int2(xPos + 9, yPos - 12)] = color;
	Result[int2(xPos + 10, yPos - 12)] = color;
	Result[int2(xPos + 9, yPos - 13)] = color;
	Result[int2(xPos + 10, yPos - 13)] = color;
	Result[int2(xPos, yPos - 15)] = color;
	Result[int2(xPos + 25, yPos - 15)] = color;
	Result[int2(xPos, yPos - 16)] = color;
	Result[int2(xPos + 2, yPos - 16)] = color;
	Result[int2(xPos + 25, yPos - 16)] = color;
	Result[int2(xPos + 27, yPos - 16)] = color;
	Result[int2(xPos, yPos - 17)] = color;
	Result[int2(xPos + 1, yPos - 17)] = color;
	Result[int2(xPos + 2, yPos - 17)] = color;
	Result[int2(xPos + 25, yPos - 17)] = color;
	Result[int2(xPos + 26, yPos - 17)] = color;
	Result[int2(xPos + 27, yPos - 17)] = color;
	Result[int2(xPos + 2, yPos - 18)] = color;
	Result[int2(xPos + 27, yPos - 18)] = color;
	Result[int2(xPos + 40, yPos - 35)] = color;
	Result[int2(xPos + 11, yPos - 36)] = color;
	Result[int2(xPos + 39, yPos - 36)] = color;
	Result[int2(xPos + 41, yPos - 36)] = color;
	Result[int2(xPos + 10, yPos - 37)] = color;
	Result[int2(xPos + 12, yPos - 37)] = color;
	Result[int2(xPos + 40, yPos - 37)] = color;
	Result[int2(xPos + 41, yPos - 37)] = color;
	Result[int2(xPos + 10, yPos - 38)] = color;
	Result[int2(xPos + 12, yPos - 38)] = color;
	Result[int2(xPos + 11, yPos - 39)] = color;
	Result[int2(xPos + 40, yPos - 39)] = color;
	Result[int2(xPos + 41, yPos - 39)] = color;
	Result[int2(xPos, yPos - 40)] = color;
	Result[int2(xPos + 25, yPos - 40)] = color;
	Result[int2(xPos + 39, yPos - 40)] = color;
	Result[int2(xPos + 41, yPos - 40)] = color;
	Result[int2(xPos, yPos - 41)] = color;
	Result[int2(xPos + 2, yPos - 41)] = color;
	Result[int2(xPos + 25, yPos - 41)] = color;
	Result[int2(xPos + 27, yPos - 41)] = color;
	Result[int2(xPos + 40, yPos - 41)] = color;
	Result[int2(xPos, yPos - 42)] = color;
	Result[int2(xPos + 1, yPos - 42)] = color;
	Result[int2(xPos + 2, yPos - 42)] = color;
	Result[int2(xPos + 25, yPos - 42)] = color;
	Result[int2(xPos + 26, yPos - 42)] = color;
	Result[int2(xPos + 27, yPos - 42)] = color;
	Result[int2(xPos + 2, yPos - 43)] = color;
	Result[int2(xPos + 27, yPos - 43)] = color;
}