#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos, yPos)] = color;
	Result[int2(xPos + 1, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos, yPos - 2)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 3, yPos - 23)] = color;
	Result[int2(xPos + 4, yPos - 24)] = color;
	Result[int2(xPos + 5, yPos - 24)] = color;
	Result[int2(xPos + 3, yPos - 25)] = color;
	Result[int2(xPos + 4, yPos - 25)] = color;
	Result[int2(xPos + 24, yPos - 53)] = color;
	Result[int2(xPos + 25, yPos - 54)] = color;
	Result[int2(xPos + 26, yPos - 54)] = color;
	Result[int2(xPos + 24, yPos - 55)] = color;
	Result[int2(xPos + 25, yPos - 55)] = color;
	Result[int2(xPos + 110, yPos - 65)] = color;
	Result[int2(xPos + 63, yPos - 66)] = color;
	Result[int2(xPos + 109, yPos - 66)] = color;
	Result[int2(xPos + 61, yPos - 67)] = color;
	Result[int2(xPos + 63, yPos - 67)] = color;
	Result[int2(xPos + 109, yPos - 67)] = color;
	Result[int2(xPos + 110, yPos - 67)] = color;
	Result[int2(xPos + 111, yPos - 67)] = color;
	Result[int2(xPos + 62, yPos - 68)] = color;
	Result[int2(xPos + 63, yPos - 68)] = color;
	Result[int2(xPos + 126, yPos - 86)] = color;
	Result[int2(xPos + 124, yPos - 87)] = color;
	Result[int2(xPos + 125, yPos - 87)] = color;
	Result[int2(xPos + 126, yPos - 87)] = color;
	Result[int2(xPos + 123, yPos - 88)] = color;
	Result[int2(xPos + 127, yPos - 88)] = color;
	Result[int2(xPos + 128, yPos - 88)] = color;
	Result[int2(xPos + 123, yPos - 89)] = color;
	Result[int2(xPos + 124, yPos - 89)] = color;
	Result[int2(xPos + 125, yPos - 89)] = color;
	Result[int2(xPos + 127, yPos - 89)] = color;
	Result[int2(xPos + 74, yPos - 90)] = color;
	Result[int2(xPos + 124, yPos - 90)] = color;
	Result[int2(xPos + 125, yPos - 90)] = color;
	Result[int2(xPos + 127, yPos - 90)] = color;
	Result[int2(xPos + 75, yPos - 91)] = color;
	Result[int2(xPos + 122, yPos - 91)] = color;
	Result[int2(xPos + 125, yPos - 91)] = color;
	Result[int2(xPos + 126, yPos - 91)] = color;
	Result[int2(xPos + 73, yPos - 92)] = color;
	Result[int2(xPos + 74, yPos - 92)] = color;
	Result[int2(xPos + 75, yPos - 92)] = color;
	Result[int2(xPos + 122, yPos - 92)] = color;
	Result[int2(xPos + 123, yPos - 92)] = color;
	Result[int2(xPos + 102, yPos - 97)] = color;
	Result[int2(xPos + 102, yPos - 98)] = color;
	Result[int2(xPos + 104, yPos - 98)] = color;
	Result[int2(xPos + 102, yPos - 99)] = color;
	Result[int2(xPos + 103, yPos - 99)] = color;
	Result[int2(xPos + 100, yPos - 106)] = color;
	Result[int2(xPos + 99, yPos - 107)] = color;
	Result[int2(xPos + 99, yPos - 108)] = color;
	Result[int2(xPos + 100, yPos - 108)] = color;
	Result[int2(xPos + 101, yPos - 108)] = color;
	Result[int2(xPos + 95, yPos - 109)] = color;
	Result[int2(xPos + 97, yPos - 109)] = color;
	Result[int2(xPos + 96, yPos - 110)] = color;
	Result[int2(xPos + 97, yPos - 110)] = color;
	Result[int2(xPos + 96, yPos - 111)] = color;
	Result[int2(xPos + 73, yPos - 136)] = color;
	Result[int2(xPos + 74, yPos - 136)] = color;
	Result[int2(xPos + 75, yPos - 136)] = color;
	Result[int2(xPos + 75, yPos - 137)] = color;
	Result[int2(xPos + 74, yPos - 138)] = color;
}