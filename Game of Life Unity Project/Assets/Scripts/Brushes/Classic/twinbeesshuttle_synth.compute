#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 32, yPos)] = color;
	Result[int2(xPos + 30, yPos - 1)] = color;
	Result[int2(xPos + 31, yPos - 1)] = color;
	Result[int2(xPos + 31, yPos - 2)] = color;
	Result[int2(xPos + 32, yPos - 2)] = color;
	Result[int2(xPos + 86, yPos - 2)] = color;
	Result[int2(xPos + 87, yPos - 2)] = color;
	Result[int2(xPos + 90, yPos - 2)] = color;
	Result[int2(xPos + 92, yPos - 2)] = color;
	Result[int2(xPos + 42, yPos - 3)] = color;
	Result[int2(xPos + 43, yPos - 3)] = color;
	Result[int2(xPos + 79, yPos - 3)] = color;
	Result[int2(xPos + 80, yPos - 3)] = color;
	Result[int2(xPos + 85, yPos - 3)] = color;
	Result[int2(xPos + 86, yPos - 3)] = color;
	Result[int2(xPos + 87, yPos - 3)] = color;
	Result[int2(xPos + 89, yPos - 3)] = color;
	Result[int2(xPos + 93, yPos - 3)] = color;
	Result[int2(xPos + 106, yPos - 3)] = color;
	Result[int2(xPos + 107, yPos - 3)] = color;
	Result[int2(xPos + 26, yPos - 4)] = color;
	Result[int2(xPos + 42, yPos - 4)] = color;
	Result[int2(xPos + 43, yPos - 4)] = color;
	Result[int2(xPos + 79, yPos - 4)] = color;
	Result[int2(xPos + 80, yPos - 4)] = color;
	Result[int2(xPos + 84, yPos - 4)] = color;
	Result[int2(xPos + 85, yPos - 4)] = color;
	Result[int2(xPos + 92, yPos - 4)] = color;
	Result[int2(xPos + 106, yPos - 4)] = color;
	Result[int2(xPos + 107, yPos - 4)] = color;
	Result[int2(xPos + 27, yPos - 5)] = color;
	Result[int2(xPos + 28, yPos - 5)] = color;
	Result[int2(xPos + 31, yPos - 5)] = color;
	Result[int2(xPos + 85, yPos - 5)] = color;
	Result[int2(xPos + 87, yPos - 5)] = color;
	Result[int2(xPos + 88, yPos - 5)] = color;
	Result[int2(xPos + 89, yPos - 5)] = color;
	Result[int2(xPos + 90, yPos - 5)] = color;
	Result[int2(xPos + 91, yPos - 5)] = color;
	Result[int2(xPos + 26, yPos - 6)] = color;
	Result[int2(xPos + 27, yPos - 6)] = color;
	Result[int2(xPos + 30, yPos - 6)] = color;
	Result[int2(xPos + 86, yPos - 6)] = color;
	Result[int2(xPos + 87, yPos - 6)] = color;
	Result[int2(xPos + 88, yPos - 6)] = color;
	Result[int2(xPos + 30, yPos - 7)] = color;
	Result[int2(xPos + 31, yPos - 7)] = color;
	Result[int2(xPos + 32, yPos - 7)] = color;
	Result[int2(xPos + 99, yPos - 7)] = color;
	Result[int2(xPos + 101, yPos - 7)] = color;
	Result[int2(xPos + 105, yPos - 7)] = color;
	Result[int2(xPos + 107, yPos - 7)] = color;
	Result[int2(xPos + 86, yPos - 8)] = color;
	Result[int2(xPos + 87, yPos - 8)] = color;
	Result[int2(xPos + 88, yPos - 8)] = color;
	Result[int2(xPos + 101, yPos - 8)] = color;
	Result[int2(xPos + 105, yPos - 8)] = color;
	Result[int2(xPos + 85, yPos - 9)] = color;
	Result[int2(xPos + 87, yPos - 9)] = color;
	Result[int2(xPos + 88, yPos - 9)] = color;
	Result[int2(xPos + 89, yPos - 9)] = color;
	Result[int2(xPos + 90, yPos - 9)] = color;
	Result[int2(xPos + 91, yPos - 9)] = color;
	Result[int2(xPos + 97, yPos - 9)] = color;
	Result[int2(xPos + 109, yPos - 9)] = color;
	Result[int2(xPos + 84, yPos - 10)] = color;
	Result[int2(xPos + 85, yPos - 10)] = color;
	Result[int2(xPos + 92, yPos - 10)] = color;
	Result[int2(xPos + 96, yPos - 10)] = color;
	Result[int2(xPos + 100, yPos - 10)] = color;
	Result[int2(xPos + 106, yPos - 10)] = color;
	Result[int2(xPos + 110, yPos - 10)] = color;
	Result[int2(xPos + 85, yPos - 11)] = color;
	Result[int2(xPos + 86, yPos - 11)] = color;
	Result[int2(xPos + 87, yPos - 11)] = color;
	Result[int2(xPos + 89, yPos - 11)] = color;
	Result[int2(xPos + 93, yPos - 11)] = color;
	Result[int2(xPos + 97, yPos - 11)] = color;
	Result[int2(xPos + 109, yPos - 11)] = color;
	Result[int2(xPos + 86, yPos - 12)] = color;
	Result[int2(xPos + 87, yPos - 12)] = color;
	Result[int2(xPos + 90, yPos - 12)] = color;
	Result[int2(xPos + 92, yPos - 12)] = color;
	Result[int2(xPos + 101, yPos - 12)] = color;
	Result[int2(xPos + 105, yPos - 12)] = color;
	Result[int2(xPos + 99, yPos - 13)] = color;
	Result[int2(xPos + 101, yPos - 13)] = color;
	Result[int2(xPos + 105, yPos - 13)] = color;
	Result[int2(xPos + 107, yPos - 13)] = color;
	Result[int2(xPos, yPos - 21)] = color;
	Result[int2(xPos + 1, yPos - 21)] = color;
	Result[int2(xPos + 1, yPos - 22)] = color;
	Result[int2(xPos + 2, yPos - 22)] = color;
	Result[int2(xPos, yPos - 23)] = color;
	Result[int2(xPos + 58, yPos - 26)] = color;
	Result[int2(xPos + 59, yPos - 26)] = color;
	Result[int2(xPos + 57, yPos - 27)] = color;
	Result[int2(xPos + 58, yPos - 27)] = color;
	Result[int2(xPos + 59, yPos - 28)] = color;
	Result[int2(xPos + 59, yPos - 41)] = color;
	Result[int2(xPos + 57, yPos - 42)] = color;
	Result[int2(xPos + 58, yPos - 42)] = color;
	Result[int2(xPos + 58, yPos - 43)] = color;
	Result[int2(xPos + 59, yPos - 43)] = color;
	Result[int2(xPos + 32, yPos - 55)] = color;
	Result[int2(xPos + 30, yPos - 56)] = color;
	Result[int2(xPos + 31, yPos - 56)] = color;
	Result[int2(xPos + 99, yPos - 56)] = color;
	Result[int2(xPos + 101, yPos - 56)] = color;
	Result[int2(xPos + 105, yPos - 56)] = color;
	Result[int2(xPos + 107, yPos - 56)] = color;
	Result[int2(xPos + 31, yPos - 57)] = color;
	Result[int2(xPos + 32, yPos - 57)] = color;
	Result[int2(xPos + 86, yPos - 57)] = color;
	Result[int2(xPos + 87, yPos - 57)] = color;
	Result[int2(xPos + 90, yPos - 57)] = color;
	Result[int2(xPos + 92, yPos - 57)] = color;
	Result[int2(xPos + 101, yPos - 57)] = color;
	Result[int2(xPos + 105, yPos - 57)] = color;
	Result[int2(xPos + 79, yPos - 58)] = color;
	Result[int2(xPos + 80, yPos - 58)] = color;
	Result[int2(xPos + 85, yPos - 58)] = color;
	Result[int2(xPos + 86, yPos - 58)] = color;
	Result[int2(xPos + 87, yPos - 58)] = color;
	Result[int2(xPos + 89, yPos - 58)] = color;
	Result[int2(xPos + 93, yPos - 58)] = color;
	Result[int2(xPos + 97, yPos - 58)] = color;
	Result[int2(xPos + 109, yPos - 58)] = color;
	Result[int2(xPos + 26, yPos - 59)] = color;
	Result[int2(xPos + 79, yPos - 59)] = color;
	Result[int2(xPos + 80, yPos - 59)] = color;
	Result[int2(xPos + 84, yPos - 59)] = color;
	Result[int2(xPos + 85, yPos - 59)] = color;
	Result[int2(xPos + 92, yPos - 59)] = color;
	Result[int2(xPos + 96, yPos - 59)] = color;
	Result[int2(xPos + 100, yPos - 59)] = color;
	Result[int2(xPos + 106, yPos - 59)] = color;
	Result[int2(xPos + 110, yPos - 59)] = color;
	Result[int2(xPos + 27, yPos - 60)] = color;
	Result[int2(xPos + 28, yPos - 60)] = color;
	Result[int2(xPos + 31, yPos - 60)] = color;
	Result[int2(xPos + 85, yPos - 60)] = color;
	Result[int2(xPos + 87, yPos - 60)] = color;
	Result[int2(xPos + 88, yPos - 60)] = color;
	Result[int2(xPos + 89, yPos - 60)] = color;
	Result[int2(xPos + 90, yPos - 60)] = color;
	Result[int2(xPos + 91, yPos - 60)] = color;
	Result[int2(xPos + 97, yPos - 60)] = color;
	Result[int2(xPos + 109, yPos - 60)] = color;
	Result[int2(xPos + 26, yPos - 61)] = color;
	Result[int2(xPos + 27, yPos - 61)] = color;
	Result[int2(xPos + 30, yPos - 61)] = color;
	Result[int2(xPos + 86, yPos - 61)] = color;
	Result[int2(xPos + 87, yPos - 61)] = color;
	Result[int2(xPos + 88, yPos - 61)] = color;
	Result[int2(xPos + 101, yPos - 61)] = color;
	Result[int2(xPos + 105, yPos - 61)] = color;
	Result[int2(xPos + 30, yPos - 62)] = color;
	Result[int2(xPos + 31, yPos - 62)] = color;
	Result[int2(xPos + 32, yPos - 62)] = color;
	Result[int2(xPos + 99, yPos - 62)] = color;
	Result[int2(xPos + 101, yPos - 62)] = color;
	Result[int2(xPos + 105, yPos - 62)] = color;
	Result[int2(xPos + 107, yPos - 62)] = color;
	Result[int2(xPos + 86, yPos - 63)] = color;
	Result[int2(xPos + 87, yPos - 63)] = color;
	Result[int2(xPos + 88, yPos - 63)] = color;
	Result[int2(xPos + 85, yPos - 64)] = color;
	Result[int2(xPos + 87, yPos - 64)] = color;
	Result[int2(xPos + 88, yPos - 64)] = color;
	Result[int2(xPos + 89, yPos - 64)] = color;
	Result[int2(xPos + 90, yPos - 64)] = color;
	Result[int2(xPos + 91, yPos - 64)] = color;
	Result[int2(xPos + 42, yPos - 65)] = color;
	Result[int2(xPos + 43, yPos - 65)] = color;
	Result[int2(xPos + 84, yPos - 65)] = color;
	Result[int2(xPos + 85, yPos - 65)] = color;
	Result[int2(xPos + 92, yPos - 65)] = color;
	Result[int2(xPos + 106, yPos - 65)] = color;
	Result[int2(xPos + 107, yPos - 65)] = color;
	Result[int2(xPos + 42, yPos - 66)] = color;
	Result[int2(xPos + 43, yPos - 66)] = color;
	Result[int2(xPos + 85, yPos - 66)] = color;
	Result[int2(xPos + 86, yPos - 66)] = color;
	Result[int2(xPos + 87, yPos - 66)] = color;
	Result[int2(xPos + 89, yPos - 66)] = color;
	Result[int2(xPos + 93, yPos - 66)] = color;
	Result[int2(xPos + 106, yPos - 66)] = color;
	Result[int2(xPos + 107, yPos - 66)] = color;
	Result[int2(xPos + 86, yPos - 67)] = color;
	Result[int2(xPos + 87, yPos - 67)] = color;
	Result[int2(xPos + 90, yPos - 67)] = color;
	Result[int2(xPos + 92, yPos - 67)] = color;
	Result[int2(xPos, yPos - 76)] = color;
	Result[int2(xPos + 1, yPos - 76)] = color;
	Result[int2(xPos + 1, yPos - 77)] = color;
	Result[int2(xPos + 2, yPos - 77)] = color;
	Result[int2(xPos, yPos - 78)] = color;
}