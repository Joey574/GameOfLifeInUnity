#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 38, yPos)] = color;
	Result[int2(xPos + 39, yPos - 1)] = color;
	Result[int2(xPos + 40, yPos - 1)] = color;
	Result[int2(xPos + 38, yPos - 2)] = color;
	Result[int2(xPos + 39, yPos - 2)] = color;
	Result[int2(xPos + 93, yPos - 4)] = color;
	Result[int2(xPos + 92, yPos - 5)] = color;
	Result[int2(xPos + 92, yPos - 6)] = color;
	Result[int2(xPos + 93, yPos - 6)] = color;
	Result[int2(xPos + 94, yPos - 6)] = color;
	Result[int2(xPos + 57, yPos - 24)] = color;
	Result[int2(xPos + 58, yPos - 25)] = color;
	Result[int2(xPos + 103, yPos - 25)] = color;
	Result[int2(xPos + 107, yPos - 25)] = color;
	Result[int2(xPos + 56, yPos - 26)] = color;
	Result[int2(xPos + 57, yPos - 26)] = color;
	Result[int2(xPos + 58, yPos - 26)] = color;
	Result[int2(xPos + 102, yPos - 26)] = color;
	Result[int2(xPos + 104, yPos - 26)] = color;
	Result[int2(xPos + 106, yPos - 26)] = color;
	Result[int2(xPos + 108, yPos - 26)] = color;
	Result[int2(xPos + 102, yPos - 27)] = color;
	Result[int2(xPos + 104, yPos - 27)] = color;
	Result[int2(xPos + 106, yPos - 27)] = color;
	Result[int2(xPos + 108, yPos - 27)] = color;
	Result[int2(xPos + 101, yPos - 28)] = color;
	Result[int2(xPos + 102, yPos - 28)] = color;
	Result[int2(xPos + 104, yPos - 28)] = color;
	Result[int2(xPos + 106, yPos - 28)] = color;
	Result[int2(xPos + 108, yPos - 28)] = color;
	Result[int2(xPos + 109, yPos - 28)] = color;
	Result[int2(xPos + 105, yPos - 29)] = color;
	Result[int2(xPos + 53, yPos - 30)] = color;
	Result[int2(xPos + 54, yPos - 30)] = color;
	Result[int2(xPos + 54, yPos - 31)] = color;
	Result[int2(xPos + 55, yPos - 31)] = color;
	Result[int2(xPos + 53, yPos - 32)] = color;
	Result[int2(xPos + 96, yPos - 42)] = color;
	Result[int2(xPos + 95, yPos - 43)] = color;
	Result[int2(xPos + 95, yPos - 44)] = color;
	Result[int2(xPos + 96, yPos - 44)] = color;
	Result[int2(xPos + 97, yPos - 44)] = color;
	Result[int2(xPos + 81, yPos - 64)] = color;
	Result[int2(xPos + 82, yPos - 64)] = color;
	Result[int2(xPos + 83, yPos - 64)] = color;
	Result[int2(xPos + 81, yPos - 65)] = color;
	Result[int2(xPos + 103, yPos - 65)] = color;
	Result[int2(xPos + 107, yPos - 65)] = color;
	Result[int2(xPos + 72, yPos - 66)] = color;
	Result[int2(xPos + 82, yPos - 66)] = color;
	Result[int2(xPos + 102, yPos - 66)] = color;
	Result[int2(xPos + 104, yPos - 66)] = color;
	Result[int2(xPos + 106, yPos - 66)] = color;
	Result[int2(xPos + 108, yPos - 66)] = color;
	Result[int2(xPos + 70, yPos - 67)] = color;
	Result[int2(xPos + 72, yPos - 67)] = color;
	Result[int2(xPos + 75, yPos - 67)] = color;
	Result[int2(xPos + 102, yPos - 67)] = color;
	Result[int2(xPos + 104, yPos - 67)] = color;
	Result[int2(xPos + 106, yPos - 67)] = color;
	Result[int2(xPos + 108, yPos - 67)] = color;
	Result[int2(xPos + 71, yPos - 68)] = color;
	Result[int2(xPos + 72, yPos - 68)] = color;
	Result[int2(xPos + 75, yPos - 68)] = color;
	Result[int2(xPos + 77, yPos - 68)] = color;
	Result[int2(xPos + 101, yPos - 68)] = color;
	Result[int2(xPos + 102, yPos - 68)] = color;
	Result[int2(xPos + 104, yPos - 68)] = color;
	Result[int2(xPos + 106, yPos - 68)] = color;
	Result[int2(xPos + 108, yPos - 68)] = color;
	Result[int2(xPos + 109, yPos - 68)] = color;
	Result[int2(xPos + 75, yPos - 69)] = color;
	Result[int2(xPos + 76, yPos - 69)] = color;
	Result[int2(xPos + 105, yPos - 69)] = color;
	Result[int2(xPos + 87, yPos - 83)] = color;
	Result[int2(xPos + 86, yPos - 84)] = color;
	Result[int2(xPos + 87, yPos - 84)] = color;
	Result[int2(xPos + 86, yPos - 85)] = color;
	Result[int2(xPos + 88, yPos - 85)] = color;
	Result[int2(xPos + 85, yPos - 98)] = color;
	Result[int2(xPos + 83, yPos - 99)] = color;
	Result[int2(xPos + 85, yPos - 99)] = color;
	Result[int2(xPos + 84, yPos - 100)] = color;
	Result[int2(xPos + 85, yPos - 100)] = color;
	Result[int2(xPos + 86, yPos - 102)] = color;
	Result[int2(xPos + 86, yPos - 103)] = color;
	Result[int2(xPos + 88, yPos - 103)] = color;
	Result[int2(xPos + 86, yPos - 104)] = color;
	Result[int2(xPos + 87, yPos - 104)] = color;
	Result[int2(xPos + 103, yPos - 105)] = color;
	Result[int2(xPos + 107, yPos - 105)] = color;
	Result[int2(xPos + 102, yPos - 106)] = color;
	Result[int2(xPos + 104, yPos - 106)] = color;
	Result[int2(xPos + 106, yPos - 106)] = color;
	Result[int2(xPos + 108, yPos - 106)] = color;
	Result[int2(xPos + 45, yPos - 107)] = color;
	Result[int2(xPos + 46, yPos - 107)] = color;
	Result[int2(xPos + 47, yPos - 107)] = color;
	Result[int2(xPos + 62, yPos - 107)] = color;
	Result[int2(xPos + 68, yPos - 107)] = color;
	Result[int2(xPos + 82, yPos - 107)] = color;
	Result[int2(xPos + 88, yPos - 107)] = color;
	Result[int2(xPos + 102, yPos - 107)] = color;
	Result[int2(xPos + 104, yPos - 107)] = color;
	Result[int2(xPos + 106, yPos - 107)] = color;
	Result[int2(xPos + 108, yPos - 107)] = color;
	Result[int2(xPos + 45, yPos - 108)] = color;
	Result[int2(xPos + 62, yPos - 108)] = color;
	Result[int2(xPos + 68, yPos - 108)] = color;
	Result[int2(xPos + 82, yPos - 108)] = color;
	Result[int2(xPos + 88, yPos - 108)] = color;
	Result[int2(xPos + 101, yPos - 108)] = color;
	Result[int2(xPos + 102, yPos - 108)] = color;
	Result[int2(xPos + 104, yPos - 108)] = color;
	Result[int2(xPos + 106, yPos - 108)] = color;
	Result[int2(xPos + 108, yPos - 108)] = color;
	Result[int2(xPos + 109, yPos - 108)] = color;
	Result[int2(xPos + 46, yPos - 109)] = color;
	Result[int2(xPos + 62, yPos - 109)] = color;
	Result[int2(xPos + 68, yPos - 109)] = color;
	Result[int2(xPos + 82, yPos - 109)] = color;
	Result[int2(xPos + 88, yPos - 109)] = color;
	Result[int2(xPos + 105, yPos - 109)] = color;
	Result[int2(xPos + 44, yPos - 111)] = color;
	Result[int2(xPos + 45, yPos - 111)] = color;
	Result[int2(xPos + 45, yPos - 112)] = color;
	Result[int2(xPos + 46, yPos - 112)] = color;
	Result[int2(xPos + 44, yPos - 113)] = color;
	Result[int2(xPos + 44, yPos - 116)] = color;
	Result[int2(xPos + 45, yPos - 116)] = color;
	Result[int2(xPos + 45, yPos - 117)] = color;
	Result[int2(xPos + 46, yPos - 117)] = color;
	Result[int2(xPos + 44, yPos - 118)] = color;
	Result[int2(xPos + 41, yPos - 125)] = color;
	Result[int2(xPos + 42, yPos - 126)] = color;
	Result[int2(xPos + 40, yPos - 127)] = color;
	Result[int2(xPos + 41, yPos - 127)] = color;
	Result[int2(xPos + 42, yPos - 127)] = color;
	Result[int2(xPos + 44, yPos - 128)] = color;
	Result[int2(xPos + 44, yPos - 129)] = color;
	Result[int2(xPos + 46, yPos - 129)] = color;
	Result[int2(xPos + 82, yPos - 129)] = color;
	Result[int2(xPos + 84, yPos - 129)] = color;
	Result[int2(xPos + 44, yPos - 130)] = color;
	Result[int2(xPos + 45, yPos - 130)] = color;
	Result[int2(xPos + 82, yPos - 130)] = color;
	Result[int2(xPos + 83, yPos - 130)] = color;
	Result[int2(xPos + 83, yPos - 131)] = color;
	Result[int2(xPos + 61, yPos - 132)] = color;
	Result[int2(xPos + 81, yPos - 132)] = color;
	Result[int2(xPos + 61, yPos - 133)] = color;
	Result[int2(xPos + 81, yPos - 133)] = color;
	Result[int2(xPos + 61, yPos - 134)] = color;
	Result[int2(xPos + 81, yPos - 134)] = color;
	Result[int2(xPos + 24, yPos - 135)] = color;
	Result[int2(xPos + 25, yPos - 135)] = color;
	Result[int2(xPos + 26, yPos - 135)] = color;
	Result[int2(xPos + 44, yPos - 135)] = color;
	Result[int2(xPos + 45, yPos - 135)] = color;
	Result[int2(xPos + 46, yPos - 135)] = color;
	Result[int2(xPos + 64, yPos - 135)] = color;
	Result[int2(xPos + 65, yPos - 135)] = color;
	Result[int2(xPos + 66, yPos - 135)] = color;
	Result[int2(xPos + 84, yPos - 135)] = color;
	Result[int2(xPos + 85, yPos - 135)] = color;
	Result[int2(xPos + 86, yPos - 135)] = color;
	Result[int2(xPos + 103, yPos - 135)] = color;
	Result[int2(xPos + 107, yPos - 135)] = color;
	Result[int2(xPos + 4, yPos - 136)] = color;
	Result[int2(xPos + 102, yPos - 136)] = color;
	Result[int2(xPos + 104, yPos - 136)] = color;
	Result[int2(xPos + 106, yPos - 136)] = color;
	Result[int2(xPos + 108, yPos - 136)] = color;
	Result[int2(xPos + 5, yPos - 137)] = color;
	Result[int2(xPos + 22, yPos - 137)] = color;
	Result[int2(xPos + 28, yPos - 137)] = color;
	Result[int2(xPos + 42, yPos - 137)] = color;
	Result[int2(xPos + 48, yPos - 137)] = color;
	Result[int2(xPos + 62, yPos - 137)] = color;
	Result[int2(xPos + 68, yPos - 137)] = color;
	Result[int2(xPos + 82, yPos - 137)] = color;
	Result[int2(xPos + 88, yPos - 137)] = color;
	Result[int2(xPos + 102, yPos - 137)] = color;
	Result[int2(xPos + 104, yPos - 137)] = color;
	Result[int2(xPos + 106, yPos - 137)] = color;
	Result[int2(xPos + 108, yPos - 137)] = color;
	Result[int2(xPos + 3, yPos - 138)] = color;
	Result[int2(xPos + 4, yPos - 138)] = color;
	Result[int2(xPos + 5, yPos - 138)] = color;
	Result[int2(xPos + 22, yPos - 138)] = color;
	Result[int2(xPos + 28, yPos - 138)] = color;
	Result[int2(xPos + 42, yPos - 138)] = color;
	Result[int2(xPos + 48, yPos - 138)] = color;
	Result[int2(xPos + 62, yPos - 138)] = color;
	Result[int2(xPos + 68, yPos - 138)] = color;
	Result[int2(xPos + 82, yPos - 138)] = color;
	Result[int2(xPos + 88, yPos - 138)] = color;
	Result[int2(xPos + 101, yPos - 138)] = color;
	Result[int2(xPos + 102, yPos - 138)] = color;
	Result[int2(xPos + 104, yPos - 138)] = color;
	Result[int2(xPos + 106, yPos - 138)] = color;
	Result[int2(xPos + 108, yPos - 138)] = color;
	Result[int2(xPos + 109, yPos - 138)] = color;
	Result[int2(xPos + 22, yPos - 139)] = color;
	Result[int2(xPos + 28, yPos - 139)] = color;
	Result[int2(xPos + 42, yPos - 139)] = color;
	Result[int2(xPos + 48, yPos - 139)] = color;
	Result[int2(xPos + 62, yPos - 139)] = color;
	Result[int2(xPos + 68, yPos - 139)] = color;
	Result[int2(xPos + 82, yPos - 139)] = color;
	Result[int2(xPos + 88, yPos - 139)] = color;
	Result[int2(xPos + 105, yPos - 139)] = color;
	Result[int2(xPos + 1, yPos - 140)] = color;
	Result[int2(xPos + 1, yPos - 141)] = color;
	Result[int2(xPos + 2, yPos - 141)] = color;
	Result[int2(xPos, yPos - 142)] = color;
	Result[int2(xPos + 2, yPos - 142)] = color;
	Result[int2(xPos + 10, yPos - 147)] = color;
	Result[int2(xPos + 9, yPos - 148)] = color;
	Result[int2(xPos + 10, yPos - 148)] = color;
	Result[int2(xPos + 77, yPos - 148)] = color;
	Result[int2(xPos + 9, yPos - 149)] = color;
	Result[int2(xPos + 11, yPos - 149)] = color;
	Result[int2(xPos + 75, yPos - 149)] = color;
	Result[int2(xPos + 77, yPos - 149)] = color;
	Result[int2(xPos + 76, yPos - 150)] = color;
	Result[int2(xPos + 77, yPos - 150)] = color;
	Result[int2(xPos + 83, yPos - 153)] = color;
	Result[int2(xPos + 85, yPos - 153)] = color;
	Result[int2(xPos + 83, yPos - 154)] = color;
	Result[int2(xPos + 84, yPos - 154)] = color;
	Result[int2(xPos + 84, yPos - 155)] = color;
	Result[int2(xPos + 80, yPos - 157)] = color;
	Result[int2(xPos + 81, yPos - 157)] = color;
	Result[int2(xPos + 82, yPos - 157)] = color;
	Result[int2(xPos + 82, yPos - 158)] = color;
	Result[int2(xPos + 81, yPos - 159)] = color;
	Result[int2(xPos + 84, yPos - 165)] = color;
	Result[int2(xPos + 85, yPos - 165)] = color;
	Result[int2(xPos + 86, yPos - 165)] = color;
	Result[int2(xPos + 103, yPos - 165)] = color;
	Result[int2(xPos + 107, yPos - 165)] = color;
	Result[int2(xPos + 102, yPos - 166)] = color;
	Result[int2(xPos + 104, yPos - 166)] = color;
	Result[int2(xPos + 106, yPos - 166)] = color;
	Result[int2(xPos + 108, yPos - 166)] = color;
	Result[int2(xPos + 82, yPos - 167)] = color;
	Result[int2(xPos + 88, yPos - 167)] = color;
	Result[int2(xPos + 102, yPos - 167)] = color;
	Result[int2(xPos + 104, yPos - 167)] = color;
	Result[int2(xPos + 106, yPos - 167)] = color;
	Result[int2(xPos + 108, yPos - 167)] = color;
	Result[int2(xPos + 82, yPos - 168)] = color;
	Result[int2(xPos + 88, yPos - 168)] = color;
	Result[int2(xPos + 101, yPos - 168)] = color;
	Result[int2(xPos + 102, yPos - 168)] = color;
	Result[int2(xPos + 104, yPos - 168)] = color;
	Result[int2(xPos + 106, yPos - 168)] = color;
	Result[int2(xPos + 108, yPos - 168)] = color;
	Result[int2(xPos + 109, yPos - 168)] = color;
	Result[int2(xPos + 82, yPos - 169)] = color;
	Result[int2(xPos + 88, yPos - 169)] = color;
	Result[int2(xPos + 105, yPos - 169)] = color;
}