#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

bool lr;
bool ud;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xMult = 1;
    float yMult = 1;
	
    if (lr)
    {
        xMult = -1;
    }
	
    if (ud)
    {
        yMult = -1;
    }

	Result[int2(xPos + (21 * xMult), yPos)] = color;
	Result[int2(xPos + (22 * xMult), yPos)] = color;
	Result[int2(xPos + (43 * xMult), yPos)] = color;
	Result[int2(xPos + (61 * xMult), yPos)] = color;
	Result[int2(xPos + (73 * xMult), yPos)] = color;
	Result[int2(xPos + (103 * xMult), yPos)] = color;
	Result[int2(xPos + (20 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (105 * xMult), yPos - (1 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (60 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (101 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (106 * xMult), yPos - (2 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (44 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (47 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (72 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (74 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (77 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (100 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (102 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (104 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (105 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (107 * xMult), yPos - (3 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (46 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (64 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (65 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (71 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (76 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (101 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (106 * xMult), yPos - (4 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (45 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (66 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (75 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (105 * xMult), yPos - (5 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (61 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (73 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (103 * xMult), yPos - (6 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (63 * xMult), yPos - (7 * yMult))] = color;
	Result[int2(xPos + (18 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (62 * xMult), yPos - (8 * yMult))] = color;
	Result[int2(xPos + (17 * xMult), yPos - (9 * yMult))] = color;
	Result[int2(xPos, yPos - (12 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (12 * yMult))] = color;
	Result[int2(xPos + (2 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (22 * xMult), yPos - (13 * yMult))] = color;
	Result[int2(xPos + (1 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (21 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (23 * xMult), yPos - (14 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (15 * yMult))] = color;
	Result[int2(xPos + (15 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (16 * yMult))] = color;
	Result[int2(xPos + (14 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (16 * xMult), yPos - (17 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (23 * yMult))] = color;
	Result[int2(xPos + (41 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (42 * xMult), yPos - (24 * yMult))] = color;
	Result[int2(xPos + (43 * xMult), yPos - (25 * yMult))] = color;
}