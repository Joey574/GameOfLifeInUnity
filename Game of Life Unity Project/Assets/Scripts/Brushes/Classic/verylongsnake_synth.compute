#pragma kernel CSMain

RWTexture2D<float4> Result;

float xPos;
float yPos;

float4 color;

[numthreads(1, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
	Result[int2(xPos + 2, yPos)] = color;
	Result[int2(xPos, yPos - 1)] = color;
	Result[int2(xPos + 2, yPos - 1)] = color;
	Result[int2(xPos + 116, yPos - 1)] = color;
	Result[int2(xPos + 1, yPos - 2)] = color;
	Result[int2(xPos + 2, yPos - 2)] = color;
	Result[int2(xPos + 114, yPos - 2)] = color;
	Result[int2(xPos + 116, yPos - 2)] = color;
	Result[int2(xPos + 115, yPos - 3)] = color;
	Result[int2(xPos + 116, yPos - 3)] = color;
	Result[int2(xPos + 10, yPos - 7)] = color;
	Result[int2(xPos + 14, yPos - 7)] = color;
	Result[int2(xPos + 8, yPos - 8)] = color;
	Result[int2(xPos + 10, yPos - 8)] = color;
	Result[int2(xPos + 12, yPos - 8)] = color;
	Result[int2(xPos + 13, yPos - 8)] = color;
	Result[int2(xPos + 132, yPos - 8)] = color;
	Result[int2(xPos + 9, yPos - 9)] = color;
	Result[int2(xPos + 10, yPos - 9)] = color;
	Result[int2(xPos + 13, yPos - 9)] = color;
	Result[int2(xPos + 14, yPos - 9)] = color;
	Result[int2(xPos + 131, yPos - 9)] = color;
	Result[int2(xPos + 131, yPos - 10)] = color;
	Result[int2(xPos + 132, yPos - 10)] = color;
	Result[int2(xPos + 133, yPos - 10)] = color;
	Result[int2(xPos + 25, yPos - 12)] = color;
	Result[int2(xPos + 26, yPos - 12)] = color;
	Result[int2(xPos + 37, yPos - 12)] = color;
	Result[int2(xPos + 39, yPos - 12)] = color;
	Result[int2(xPos + 65, yPos - 12)] = color;
	Result[int2(xPos + 66, yPos - 12)] = color;
	Result[int2(xPos + 85, yPos - 12)] = color;
	Result[int2(xPos + 105, yPos - 12)] = color;
	Result[int2(xPos + 106, yPos - 12)] = color;
	Result[int2(xPos + 134, yPos - 12)] = color;
	Result[int2(xPos + 145, yPos - 12)] = color;
	Result[int2(xPos + 146, yPos - 12)] = color;
	Result[int2(xPos + 25, yPos - 13)] = color;
	Result[int2(xPos + 27, yPos - 13)] = color;
	Result[int2(xPos + 38, yPos - 13)] = color;
	Result[int2(xPos + 39, yPos - 13)] = color;
	Result[int2(xPos + 65, yPos - 13)] = color;
	Result[int2(xPos + 67, yPos - 13)] = color;
	Result[int2(xPos + 85, yPos - 13)] = color;
	Result[int2(xPos + 87, yPos - 13)] = color;
	Result[int2(xPos + 105, yPos - 13)] = color;
	Result[int2(xPos + 107, yPos - 13)] = color;
	Result[int2(xPos + 120, yPos - 13)] = color;
	Result[int2(xPos + 122, yPos - 13)] = color;
	Result[int2(xPos + 133, yPos - 13)] = color;
	Result[int2(xPos + 134, yPos - 13)] = color;
	Result[int2(xPos + 145, yPos - 13)] = color;
	Result[int2(xPos + 147, yPos - 13)] = color;
	Result[int2(xPos + 28, yPos - 14)] = color;
	Result[int2(xPos + 30, yPos - 14)] = color;
	Result[int2(xPos + 38, yPos - 14)] = color;
	Result[int2(xPos + 47, yPos - 14)] = color;
	Result[int2(xPos + 68, yPos - 14)] = color;
	Result[int2(xPos + 70, yPos - 14)] = color;
	Result[int2(xPos + 85, yPos - 14)] = color;
	Result[int2(xPos + 86, yPos - 14)] = color;
	Result[int2(xPos + 108, yPos - 14)] = color;
	Result[int2(xPos + 110, yPos - 14)] = color;
	Result[int2(xPos + 121, yPos - 14)] = color;
	Result[int2(xPos + 122, yPos - 14)] = color;
	Result[int2(xPos + 133, yPos - 14)] = color;
	Result[int2(xPos + 135, yPos - 14)] = color;
	Result[int2(xPos + 148, yPos - 14)] = color;
	Result[int2(xPos + 150, yPos - 14)] = color;
	Result[int2(xPos + 29, yPos - 15)] = color;
	Result[int2(xPos + 30, yPos - 15)] = color;
	Result[int2(xPos + 46, yPos - 15)] = color;
	Result[int2(xPos + 47, yPos - 15)] = color;
	Result[int2(xPos + 69, yPos - 15)] = color;
	Result[int2(xPos + 70, yPos - 15)] = color;
	Result[int2(xPos + 109, yPos - 15)] = color;
	Result[int2(xPos + 110, yPos - 15)] = color;
	Result[int2(xPos + 121, yPos - 15)] = color;
	Result[int2(xPos + 149, yPos - 15)] = color;
	Result[int2(xPos + 150, yPos - 15)] = color;
	Result[int2(xPos + 8, yPos - 16)] = color;
	Result[int2(xPos + 42, yPos - 16)] = color;
	Result[int2(xPos + 43, yPos - 16)] = color;
	Result[int2(xPos + 46, yPos - 16)] = color;
	Result[int2(xPos + 48, yPos - 16)] = color;
	Result[int2(xPos + 78, yPos - 16)] = color;
	Result[int2(xPos + 79, yPos - 16)] = color;
	Result[int2(xPos + 80, yPos - 16)] = color;
	Result[int2(xPos + 82, yPos - 16)] = color;
	Result[int2(xPos + 83, yPos - 16)] = color;
	Result[int2(xPos + 84, yPos - 16)] = color;
	Result[int2(xPos + 92, yPos - 16)] = color;
	Result[int2(xPos + 8, yPos - 17)] = color;
	Result[int2(xPos + 9, yPos - 17)] = color;
	Result[int2(xPos + 43, yPos - 17)] = color;
	Result[int2(xPos + 44, yPos - 17)] = color;
	Result[int2(xPos + 80, yPos - 17)] = color;
	Result[int2(xPos + 82, yPos - 17)] = color;
	Result[int2(xPos + 91, yPos - 17)] = color;
	Result[int2(xPos + 92, yPos - 17)] = color;
	Result[int2(xPos + 122, yPos - 17)] = color;
	Result[int2(xPos + 123, yPos - 17)] = color;
	Result[int2(xPos + 124, yPos - 17)] = color;
	Result[int2(xPos + 7, yPos - 18)] = color;
	Result[int2(xPos + 9, yPos - 18)] = color;
	Result[int2(xPos + 42, yPos - 18)] = color;
	Result[int2(xPos + 52, yPos - 18)] = color;
	Result[int2(xPos + 53, yPos - 18)] = color;
	Result[int2(xPos + 54, yPos - 18)] = color;
	Result[int2(xPos + 79, yPos - 18)] = color;
	Result[int2(xPos + 83, yPos - 18)] = color;
	Result[int2(xPos + 91, yPos - 18)] = color;
	Result[int2(xPos + 93, yPos - 18)] = color;
	Result[int2(xPos + 124, yPos - 18)] = color;
	Result[int2(xPos + 52, yPos - 19)] = color;
	Result[int2(xPos + 123, yPos - 19)] = color;
	Result[int2(xPos + 53, yPos - 20)] = color;
	Result[int2(xPos + 87, yPos - 20)] = color;
	Result[int2(xPos + 87, yPos - 21)] = color;
	Result[int2(xPos + 88, yPos - 21)] = color;
	Result[int2(xPos + 45, yPos - 22)] = color;
	Result[int2(xPos + 46, yPos - 22)] = color;
	Result[int2(xPos + 47, yPos - 22)] = color;
	Result[int2(xPos + 86, yPos - 22)] = color;
	Result[int2(xPos + 88, yPos - 22)] = color;
	Result[int2(xPos + 47, yPos - 23)] = color;
	Result[int2(xPos + 46, yPos - 24)] = color;
	Result[int2(xPos + 139, yPos - 24)] = color;
	Result[int2(xPos + 140, yPos - 24)] = color;
	Result[int2(xPos + 139, yPos - 25)] = color;
	Result[int2(xPos + 141, yPos - 25)] = color;
	Result[int2(xPos + 139, yPos - 26)] = color;
}