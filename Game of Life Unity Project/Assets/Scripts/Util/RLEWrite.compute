#pragma kernel CSMain

RWTexture2D<float4> Result;
StructuredBuffer<int> rle;

int len;

int xLoc;
int yLoc;

bool lr;
bool ud;

float4 color;

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // 0 = dead; -1 = alive; -2 = newline; #s 1 - infinity = count
    
    int count = 1;
    
    int xMult = 1;
    int yMult = 1;
    
    if (ud)
    {
        yMult = -1;
    }
    
    if (lr)
    {
        xMult = -1;
    }    
    
    int x = xLoc;
    int y = yLoc;
    
    Result[id.xy] = float4(1, 0, 0, 1);
    
    for (int i = 0; i < len; i++)
    {
        if (rle.Load(i) == -1)
        {
            for (int q = 0; q < count; q++)
            {
                Result[int2(x * xMult, y * yMult)] = color;
                x++;
            }
        }
        else if (rle.Load(i) == -2)
        {
            for (int q = 0; q < count; q++)
            {
                y++;
            }
            x = xLoc;
        }
        else if (rle.Load(i) == 0)
        {
            for (int q = 0; q < count; q++)
            {
                x++;
            }
        }
        else if (rle.Load(i) > 0)
        {
            count = rle.Load(i);
        }
    }
}